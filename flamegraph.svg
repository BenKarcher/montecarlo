<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="790" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="773.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="773.00"> </text><svg id="frames" x="10" width="1180" total_samples="4013"><g><title>__GI___libc_free (2 samples, 0.05%)</title><rect x="0.0000%" y="693" width="0.0498%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="703.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="0.0498%" y="693" width="0.0249%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="1"/><text x="0.2998%" y="703.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="0.0748%" y="693" width="0.0249%" height="15" fill="rgb(221,193,54)" fg:x="3" fg:w="1"/><text x="0.3248%" y="703.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="0.0997%" y="693" width="0.0249%" height="15" fill="rgb(248,212,6)" fg:x="4" fg:w="1"/><text x="0.3497%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="0.1246%" y="693" width="0.0249%" height="15" fill="rgb(208,68,35)" fg:x="5" fg:w="1"/><text x="0.3746%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="0.1246%" y="677" width="0.0249%" height="15" fill="rgb(232,128,0)" fg:x="5" fg:w="1"/><text x="0.3746%" y="687.50"></text></g><g><title>rand::rng::Rng::sample (36 samples, 0.90%)</title><rect x="0.1495%" y="693" width="0.8971%" height="15" fill="rgb(207,160,47)" fg:x="6" fg:w="36"/><text x="0.3995%" y="703.50"></text></g><g><title>rand::rngs::adapter::reseeding::fork::get_fork_counter (2 samples, 0.05%)</title><rect x="1.0466%" y="693" width="0.0498%" height="15" fill="rgb(228,23,34)" fg:x="42" fg:w="2"/><text x="1.2966%" y="703.50"></text></g><g><title>rand_chacha::guts::refill_wide (1 samples, 0.02%)</title><rect x="1.0964%" y="693" width="0.0249%" height="15" fill="rgb(218,30,26)" fg:x="44" fg:w="1"/><text x="1.3464%" y="703.50"></text></g><g><title>[[heap]] (46 samples, 1.15%)</title><rect x="0.0000%" y="709" width="1.1463%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="46"/><text x="0.2500%" y="719.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (1 samples, 0.02%)</title><rect x="1.1214%" y="693" width="0.0249%" height="15" fill="rgb(250,228,42)" fg:x="45" fg:w="1"/><text x="1.3714%" y="703.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hd28e0cdf38b391c3E.llvm.17534386512340449806 (1 samples, 0.02%)</title><rect x="1.1463%" y="693" width="0.0249%" height="15" fill="rgb(240,193,28)" fg:x="46" fg:w="1"/><text x="1.3963%" y="703.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.10%)</title><rect x="1.1712%" y="693" width="0.0997%" height="15" fill="rgb(216,20,37)" fg:x="47" fg:w="4"/><text x="1.4212%" y="703.50"></text></g><g><title>__rdl_realloc (1 samples, 0.02%)</title><rect x="1.2709%" y="693" width="0.0249%" height="15" fill="rgb(206,188,39)" fg:x="51" fg:w="1"/><text x="1.5209%" y="703.50"></text></g><g><title>_int_free (3 samples, 0.07%)</title><rect x="1.2958%" y="693" width="0.0748%" height="15" fill="rgb(217,207,13)" fg:x="52" fg:w="3"/><text x="1.5458%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.05%)</title><rect x="1.3705%" y="693" width="0.0498%" height="15" fill="rgb(231,73,38)" fg:x="55" fg:w="2"/><text x="1.6205%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.05%)</title><rect x="1.3705%" y="677" width="0.0498%" height="15" fill="rgb(225,20,46)" fg:x="55" fg:w="2"/><text x="1.6205%" y="687.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.05%)</title><rect x="1.3705%" y="661" width="0.0498%" height="15" fill="rgb(210,31,41)" fg:x="55" fg:w="2"/><text x="1.6205%" y="671.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.05%)</title><rect x="1.3705%" y="645" width="0.0498%" height="15" fill="rgb(221,200,47)" fg:x="55" fg:w="2"/><text x="1.6205%" y="655.50"></text></g><g><title>id_collections::id_vec::IdVec&lt;I,T&gt;::push (1 samples, 0.02%)</title><rect x="1.4204%" y="693" width="0.0249%" height="15" fill="rgb(226,26,5)" fg:x="57" fg:w="1"/><text x="1.6704%" y="703.50"></text></g><g><title>id_collections::id_vec::IdVec&lt;I,T&gt;::try_push (1 samples, 0.02%)</title><rect x="1.4204%" y="677" width="0.0249%" height="15" fill="rgb(249,33,26)" fg:x="57" fg:w="1"/><text x="1.6704%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::try_reserve (1 samples, 0.02%)</title><rect x="1.4204%" y="661" width="0.0249%" height="15" fill="rgb(235,183,28)" fg:x="57" fg:w="1"/><text x="1.6704%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.02%)</title><rect x="1.4204%" y="645" width="0.0249%" height="15" fill="rgb(221,5,38)" fg:x="57" fg:w="1"/><text x="1.6704%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="1.4204%" y="629" width="0.0249%" height="15" fill="rgb(247,18,42)" fg:x="57" fg:w="1"/><text x="1.6704%" y="639.50"></text></g><g><title>rand::rngs::adapter::reseeding::fork::get_fork_counter (2 samples, 0.05%)</title><rect x="1.4453%" y="693" width="0.0498%" height="15" fill="rgb(241,131,45)" fg:x="58" fg:w="2"/><text x="1.6953%" y="703.50"></text></g><g><title>rand_chacha::guts::refill_wide (1 samples, 0.02%)</title><rect x="1.4951%" y="693" width="0.0249%" height="15" fill="rgb(249,31,29)" fg:x="60" fg:w="1"/><text x="1.7451%" y="703.50"></text></g><g><title>[[stack]] (17 samples, 0.42%)</title><rect x="1.1463%" y="709" width="0.4236%" height="15" fill="rgb(225,111,53)" fg:x="46" fg:w="17"/><text x="1.3963%" y="719.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (2 samples, 0.05%)</title><rect x="1.5201%" y="693" width="0.0498%" height="15" fill="rgb(238,160,17)" fg:x="61" fg:w="2"/><text x="1.7701%" y="703.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="1.5948%" y="693" width="0.0498%" height="15" fill="rgb(214,148,48)" fg:x="64" fg:w="2"/><text x="1.8448%" y="703.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="1.5948%" y="677" width="0.0498%" height="15" fill="rgb(232,36,49)" fg:x="64" fg:w="2"/><text x="1.8448%" y="687.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="1.5948%" y="661" width="0.0498%" height="15" fill="rgb(209,103,24)" fg:x="64" fg:w="2"/><text x="1.8448%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="1.5948%" y="645" width="0.0498%" height="15" fill="rgb(229,88,8)" fg:x="64" fg:w="2"/><text x="1.8448%" y="655.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="1.5948%" y="629" width="0.0498%" height="15" fill="rgb(213,181,19)" fg:x="64" fg:w="2"/><text x="1.8448%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="1.5948%" y="613" width="0.0498%" height="15" fill="rgb(254,191,54)" fg:x="64" fg:w="2"/><text x="1.8448%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="1.5948%" y="597" width="0.0498%" height="15" fill="rgb(241,83,37)" fg:x="64" fg:w="2"/><text x="1.8448%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="1.5948%" y="581" width="0.0498%" height="15" fill="rgb(233,36,39)" fg:x="64" fg:w="2"/><text x="1.8448%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="1.5948%" y="565" width="0.0498%" height="15" fill="rgb(226,3,54)" fg:x="64" fg:w="2"/><text x="1.8448%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="1.5948%" y="549" width="0.0498%" height="15" fill="rgb(245,192,40)" fg:x="64" fg:w="2"/><text x="1.8448%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="1.5948%" y="533" width="0.0498%" height="15" fill="rgb(238,167,29)" fg:x="64" fg:w="2"/><text x="1.8448%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="1.5948%" y="517" width="0.0498%" height="15" fill="rgb(232,182,51)" fg:x="64" fg:w="2"/><text x="1.8448%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="1.5948%" y="501" width="0.0498%" height="15" fill="rgb(231,60,39)" fg:x="64" fg:w="2"/><text x="1.8448%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="1.5948%" y="485" width="0.0498%" height="15" fill="rgb(208,69,12)" fg:x="64" fg:w="2"/><text x="1.8448%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="1.5948%" y="469" width="0.0498%" height="15" fill="rgb(235,93,37)" fg:x="64" fg:w="2"/><text x="1.8448%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="1.6197%" y="453" width="0.0249%" height="15" fill="rgb(213,116,39)" fg:x="65" fg:w="1"/><text x="1.8697%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="1.6197%" y="437" width="0.0249%" height="15" fill="rgb(222,207,29)" fg:x="65" fg:w="1"/><text x="1.8697%" y="447.50"></text></g><g><title>__GI___libc_free (6 samples, 0.15%)</title><rect x="1.6447%" y="693" width="0.1495%" height="15" fill="rgb(206,96,30)" fg:x="66" fg:w="6"/><text x="1.8947%" y="703.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="1.7942%" y="693" width="0.0249%" height="15" fill="rgb(218,138,4)" fg:x="72" fg:w="1"/><text x="2.0442%" y="703.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.17%)</title><rect x="1.8191%" y="693" width="0.1744%" height="15" fill="rgb(250,191,14)" fg:x="73" fg:w="7"/><text x="2.0691%" y="703.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1.9935%" y="693" width="0.0249%" height="15" fill="rgb(239,60,40)" fg:x="80" fg:w="1"/><text x="2.2435%" y="703.50"></text></g><g><title>__rdl_realloc (1 samples, 0.02%)</title><rect x="2.0184%" y="693" width="0.0249%" height="15" fill="rgb(206,27,48)" fg:x="81" fg:w="1"/><text x="2.2684%" y="703.50"></text></g><g><title>_int_free (3 samples, 0.07%)</title><rect x="2.0434%" y="693" width="0.0748%" height="15" fill="rgb(225,35,8)" fg:x="82" fg:w="3"/><text x="2.2934%" y="703.50"></text></g><g><title>_int_realloc (9 samples, 0.22%)</title><rect x="2.1181%" y="693" width="0.2243%" height="15" fill="rgb(250,213,24)" fg:x="85" fg:w="9"/><text x="2.3681%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="2.3424%" y="693" width="0.0249%" height="15" fill="rgb(247,123,22)" fg:x="94" fg:w="1"/><text x="2.5924%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.10%)</title><rect x="2.3673%" y="693" width="0.0997%" height="15" fill="rgb(231,138,38)" fg:x="95" fg:w="4"/><text x="2.6173%" y="703.50"></text></g><g><title>malloc_consolidate (4 samples, 0.10%)</title><rect x="2.4670%" y="693" width="0.0997%" height="15" fill="rgb(231,145,46)" fg:x="99" fg:w="4"/><text x="2.7170%" y="703.50"></text></g><g><title>&lt;montecarlo::latice::Bipartite_Id_Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="2.6414%" y="677" width="0.0249%" height="15" fill="rgb(251,118,11)" fg:x="106" fg:w="1"/><text x="2.8914%" y="687.50"></text></g><g><title>&lt;id_collections::id_vec::IdVec&lt;I,T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="2.6414%" y="661" width="0.0249%" height="15" fill="rgb(217,147,25)" fg:x="106" fg:w="1"/><text x="2.8914%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="2.6414%" y="645" width="0.0249%" height="15" fill="rgb(247,81,37)" fg:x="106" fg:w="1"/><text x="2.8914%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="2.6414%" y="629" width="0.0249%" height="15" fill="rgb(209,12,38)" fg:x="106" fg:w="1"/><text x="2.8914%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="2.6414%" y="613" width="0.0249%" height="15" fill="rgb(227,1,9)" fg:x="106" fg:w="1"/><text x="2.8914%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="2.6414%" y="597" width="0.0249%" height="15" fill="rgb(248,47,43)" fg:x="106" fg:w="1"/><text x="2.8914%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="2.6414%" y="581" width="0.0249%" height="15" fill="rgb(221,10,30)" fg:x="106" fg:w="1"/><text x="2.8914%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="2.6414%" y="565" width="0.0249%" height="15" fill="rgb(210,229,1)" fg:x="106" fg:w="1"/><text x="2.8914%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="2.6414%" y="549" width="0.0249%" height="15" fill="rgb(222,148,37)" fg:x="106" fg:w="1"/><text x="2.8914%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="2.6414%" y="533" width="0.0249%" height="15" fill="rgb(234,67,33)" fg:x="106" fg:w="1"/><text x="2.8914%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="2.6414%" y="517" width="0.0249%" height="15" fill="rgb(247,98,35)" fg:x="106" fg:w="1"/><text x="2.8914%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="2.6414%" y="501" width="0.0249%" height="15" fill="rgb(247,138,52)" fg:x="106" fg:w="1"/><text x="2.8914%" y="511.50"></text></g><g><title>montecarlo::latice::Latice::random_edge (20 samples, 0.50%)</title><rect x="2.6663%" y="677" width="0.4984%" height="15" fill="rgb(213,79,30)" fg:x="107" fg:w="20"/><text x="2.9163%" y="687.50"></text></g><g><title>montecarlo::state::State::diagonal_update (27 samples, 0.67%)</title><rect x="2.5667%" y="693" width="0.6728%" height="15" fill="rgb(246,177,23)" fg:x="103" fg:w="27"/><text x="2.8167%" y="703.50"></text></g><g><title>rand::rng::Rng::gen (3 samples, 0.07%)</title><rect x="3.1647%" y="677" width="0.0748%" height="15" fill="rgb(230,62,27)" fg:x="127" fg:w="3"/><text x="3.4147%" y="687.50"></text></g><g><title>rand::distributions::float::&lt;impl rand::distributions::distribution::Distribution&lt;f64&gt; for rand::distributions::Standard&gt;::sample (3 samples, 0.07%)</title><rect x="3.1647%" y="661" width="0.0748%" height="15" fill="rgb(216,154,8)" fg:x="127" fg:w="3"/><text x="3.4147%" y="671.50"></text></g><g><title>rand::rng::Rng::gen (3 samples, 0.07%)</title><rect x="3.1647%" y="645" width="0.0748%" height="15" fill="rgb(244,35,45)" fg:x="127" fg:w="3"/><text x="3.4147%" y="655.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (3 samples, 0.07%)</title><rect x="3.1647%" y="629" width="0.0748%" height="15" fill="rgb(251,115,12)" fg:x="127" fg:w="3"/><text x="3.4147%" y="639.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (3 samples, 0.07%)</title><rect x="3.1647%" y="613" width="0.0748%" height="15" fill="rgb(240,54,50)" fg:x="127" fg:w="3"/><text x="3.4147%" y="623.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (3 samples, 0.07%)</title><rect x="3.1647%" y="597" width="0.0748%" height="15" fill="rgb(233,84,52)" fg:x="127" fg:w="3"/><text x="3.4147%" y="607.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (3 samples, 0.07%)</title><rect x="3.1647%" y="581" width="0.0748%" height="15" fill="rgb(207,117,47)" fg:x="127" fg:w="3"/><text x="3.4147%" y="591.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (3 samples, 0.07%)</title><rect x="3.1647%" y="565" width="0.0748%" height="15" fill="rgb(249,43,39)" fg:x="127" fg:w="3"/><text x="3.4147%" y="575.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (3 samples, 0.07%)</title><rect x="3.1647%" y="549" width="0.0748%" height="15" fill="rgb(209,38,44)" fg:x="127" fg:w="3"/><text x="3.4147%" y="559.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (2 samples, 0.05%)</title><rect x="3.1896%" y="533" width="0.0498%" height="15" fill="rgb(236,212,23)" fg:x="128" fg:w="2"/><text x="3.4396%" y="543.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (2 samples, 0.05%)</title><rect x="3.1896%" y="517" width="0.0498%" height="15" fill="rgb(242,79,21)" fg:x="128" fg:w="2"/><text x="3.4396%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (9 samples, 0.22%)</title><rect x="3.5385%" y="677" width="0.2243%" height="15" fill="rgb(211,96,35)" fg:x="142" fg:w="9"/><text x="3.7885%" y="687.50"></text></g><g><title>montecarlo::state::State::off_diagonal_update (22 samples, 0.55%)</title><rect x="3.2395%" y="693" width="0.5482%" height="15" fill="rgb(253,215,40)" fg:x="130" fg:w="22"/><text x="3.4895%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;montecarlo::state::OperatorId&gt;&gt; (1 samples, 0.02%)</title><rect x="3.7628%" y="677" width="0.0249%" height="15" fill="rgb(211,81,21)" fg:x="151" fg:w="1"/><text x="4.0128%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;montecarlo::state::OperatorId&gt;&gt; (1 samples, 0.02%)</title><rect x="3.7628%" y="661" width="0.0249%" height="15" fill="rgb(208,190,38)" fg:x="151" fg:w="1"/><text x="4.0128%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="3.7628%" y="645" width="0.0249%" height="15" fill="rgb(235,213,38)" fg:x="151" fg:w="1"/><text x="4.0128%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="3.7628%" y="629" width="0.0249%" height="15" fill="rgb(237,122,38)" fg:x="151" fg:w="1"/><text x="4.0128%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="3.7628%" y="613" width="0.0249%" height="15" fill="rgb(244,218,35)" fg:x="151" fg:w="1"/><text x="4.0128%" y="623.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::is_empty (12 samples, 0.30%)</title><rect x="4.5103%" y="677" width="0.2990%" height="15" fill="rgb(240,68,47)" fg:x="181" fg:w="12"/><text x="4.7603%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (12 samples, 0.30%)</title><rect x="4.5103%" y="661" width="0.2990%" height="15" fill="rgb(210,16,53)" fg:x="181" fg:w="12"/><text x="4.7603%" y="671.50"></text></g><g><title>rand::rng::Rng::gen_range (43 samples, 1.07%)</title><rect x="3.7877%" y="693" width="1.0715%" height="15" fill="rgb(235,124,12)" fg:x="152" fg:w="43"/><text x="4.0377%" y="703.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (2 samples, 0.05%)</title><rect x="4.8094%" y="677" width="0.0498%" height="15" fill="rgb(224,169,11)" fg:x="193" fg:w="2"/><text x="5.0594%" y="687.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (2 samples, 0.05%)</title><rect x="4.8094%" y="661" width="0.0498%" height="15" fill="rgb(250,166,2)" fg:x="193" fg:w="2"/><text x="5.0594%" y="671.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (2 samples, 0.05%)</title><rect x="4.8094%" y="645" width="0.0498%" height="15" fill="rgb(242,216,29)" fg:x="193" fg:w="2"/><text x="5.0594%" y="655.50"></text></g><g><title>rand::rng::Rng::gen (2 samples, 0.05%)</title><rect x="4.8094%" y="629" width="0.0498%" height="15" fill="rgb(230,116,27)" fg:x="193" fg:w="2"/><text x="5.0594%" y="639.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;usize&gt; for rand::distributions::Standard&gt;::sample (2 samples, 0.05%)</title><rect x="4.8094%" y="613" width="0.0498%" height="15" fill="rgb(228,99,48)" fg:x="193" fg:w="2"/><text x="5.0594%" y="623.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (2 samples, 0.05%)</title><rect x="4.8094%" y="597" width="0.0498%" height="15" fill="rgb(253,11,6)" fg:x="193" fg:w="2"/><text x="5.0594%" y="607.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (2 samples, 0.05%)</title><rect x="4.8094%" y="581" width="0.0498%" height="15" fill="rgb(247,143,39)" fg:x="193" fg:w="2"/><text x="5.0594%" y="591.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (2 samples, 0.05%)</title><rect x="4.8094%" y="565" width="0.0498%" height="15" fill="rgb(236,97,10)" fg:x="193" fg:w="2"/><text x="5.0594%" y="575.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (2 samples, 0.05%)</title><rect x="4.8094%" y="549" width="0.0498%" height="15" fill="rgb(233,208,19)" fg:x="193" fg:w="2"/><text x="5.0594%" y="559.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (2 samples, 0.05%)</title><rect x="4.8094%" y="533" width="0.0498%" height="15" fill="rgb(216,164,2)" fg:x="193" fg:w="2"/><text x="5.0594%" y="543.50"></text></g><g><title>rand::rng::Rng::sample (14 samples, 0.35%)</title><rect x="4.8592%" y="693" width="0.3489%" height="15" fill="rgb(220,129,5)" fg:x="195" fg:w="14"/><text x="5.1092%" y="703.50"></text></g><g><title>&lt;rand::distributions::uniform::Uniform&lt;X&gt; as rand::distributions::distribution::Distribution&lt;X&gt;&gt;::sample (4 samples, 0.10%)</title><rect x="5.1084%" y="677" width="0.0997%" height="15" fill="rgb(242,17,10)" fg:x="205" fg:w="4"/><text x="5.3584%" y="687.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample (4 samples, 0.10%)</title><rect x="5.1084%" y="661" width="0.0997%" height="15" fill="rgb(242,107,0)" fg:x="205" fg:w="4"/><text x="5.3584%" y="671.50"></text></g><g><title>rand::rng::Rng::gen (4 samples, 0.10%)</title><rect x="5.1084%" y="645" width="0.0997%" height="15" fill="rgb(251,28,31)" fg:x="205" fg:w="4"/><text x="5.3584%" y="655.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;usize&gt; for rand::distributions::Standard&gt;::sample (4 samples, 0.10%)</title><rect x="5.1084%" y="629" width="0.0997%" height="15" fill="rgb(233,223,10)" fg:x="205" fg:w="4"/><text x="5.3584%" y="639.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (4 samples, 0.10%)</title><rect x="5.1084%" y="613" width="0.0997%" height="15" fill="rgb(215,21,27)" fg:x="205" fg:w="4"/><text x="5.3584%" y="623.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (4 samples, 0.10%)</title><rect x="5.1084%" y="597" width="0.0997%" height="15" fill="rgb(232,23,21)" fg:x="205" fg:w="4"/><text x="5.3584%" y="607.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (4 samples, 0.10%)</title><rect x="5.1084%" y="581" width="0.0997%" height="15" fill="rgb(244,5,23)" fg:x="205" fg:w="4"/><text x="5.3584%" y="591.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (4 samples, 0.10%)</title><rect x="5.1084%" y="565" width="0.0997%" height="15" fill="rgb(226,81,46)" fg:x="205" fg:w="4"/><text x="5.3584%" y="575.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (4 samples, 0.10%)</title><rect x="5.1084%" y="549" width="0.0997%" height="15" fill="rgb(247,70,30)" fg:x="205" fg:w="4"/><text x="5.3584%" y="559.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (4 samples, 0.10%)</title><rect x="5.1084%" y="533" width="0.0997%" height="15" fill="rgb(212,68,19)" fg:x="205" fg:w="4"/><text x="5.3584%" y="543.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (4 samples, 0.10%)</title><rect x="5.1084%" y="517" width="0.0997%" height="15" fill="rgb(240,187,13)" fg:x="205" fg:w="4"/><text x="5.3584%" y="527.50"></text></g><g><title>rand::rngs::adapter::reseeding::fork::get_fork_counter (1 samples, 0.02%)</title><rect x="5.2081%" y="693" width="0.0249%" height="15" fill="rgb(223,113,26)" fg:x="209" fg:w="1"/><text x="5.4581%" y="703.50"></text></g><g><title>rand_chacha::guts::refill_wide (3 samples, 0.07%)</title><rect x="5.2330%" y="693" width="0.0748%" height="15" fill="rgb(206,192,2)" fg:x="210" fg:w="3"/><text x="5.4830%" y="703.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (3 samples, 0.07%)</title><rect x="5.3077%" y="693" width="0.0748%" height="15" fill="rgb(241,108,4)" fg:x="213" fg:w="3"/><text x="5.5577%" y="703.50"></text></g><g><title>[unknown] (155 samples, 3.86%)</title><rect x="1.5699%" y="709" width="3.8624%" height="15" fill="rgb(247,173,49)" fg:x="63" fg:w="155"/><text x="1.8199%" y="719.50">[unk..</text></g><g><title>unlink_chunk (2 samples, 0.05%)</title><rect x="5.3825%" y="693" width="0.0498%" height="15" fill="rgb(224,114,35)" fg:x="216" fg:w="2"/><text x="5.6325%" y="703.50"></text></g><g><title>_int_free (2 samples, 0.05%)</title><rect x="5.4323%" y="709" width="0.0498%" height="15" fill="rgb(245,159,27)" fg:x="218" fg:w="2"/><text x="5.6823%" y="719.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.15%)</title><rect x="9.8679%" y="549" width="0.1495%" height="15" fill="rgb(245,172,44)" fg:x="396" fg:w="6"/><text x="10.1179%" y="559.50"></text></g><g><title>&lt;id_collections::id_vec::IdVec&lt;I,T&gt; as core::ops::index::Index&lt;J&gt;&gt;::index (12 samples, 0.30%)</title><rect x="10.0174%" y="549" width="0.2990%" height="15" fill="rgb(236,23,11)" fg:x="402" fg:w="12"/><text x="10.2674%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (12 samples, 0.30%)</title><rect x="10.0174%" y="533" width="0.2990%" height="15" fill="rgb(205,117,38)" fg:x="402" fg:w="12"/><text x="10.2674%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (12 samples, 0.30%)</title><rect x="10.0174%" y="517" width="0.2990%" height="15" fill="rgb(237,72,25)" fg:x="402" fg:w="12"/><text x="10.2674%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (12 samples, 0.30%)</title><rect x="10.0174%" y="501" width="0.2990%" height="15" fill="rgb(244,70,9)" fg:x="402" fg:w="12"/><text x="10.2674%" y="511.50"></text></g><g><title>&lt;id_collections::id_vec::IdVec&lt;I,T&gt; as core::ops::index::IndexMut&lt;J&gt;&gt;::index_mut (24 samples, 0.60%)</title><rect x="10.3165%" y="549" width="0.5981%" height="15" fill="rgb(217,125,39)" fg:x="414" fg:w="24"/><text x="10.5665%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (24 samples, 0.60%)</title><rect x="10.3165%" y="533" width="0.5981%" height="15" fill="rgb(235,36,10)" fg:x="414" fg:w="24"/><text x="10.5665%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (24 samples, 0.60%)</title><rect x="10.3165%" y="517" width="0.5981%" height="15" fill="rgb(251,123,47)" fg:x="414" fg:w="24"/><text x="10.5665%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (24 samples, 0.60%)</title><rect x="10.3165%" y="501" width="0.5981%" height="15" fill="rgb(221,13,13)" fg:x="414" fg:w="24"/><text x="10.5665%" y="511.50"></text></g><g><title>&lt;montecarlo::latice::Bipartite_Id_Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.05%)</title><rect x="10.9145%" y="549" width="0.0498%" height="15" fill="rgb(238,131,9)" fg:x="438" fg:w="2"/><text x="11.1645%" y="559.50"></text></g><g><title>&lt;id_collections::id_vec::IdVec&lt;I,T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.05%)</title><rect x="10.9145%" y="533" width="0.0498%" height="15" fill="rgb(211,50,8)" fg:x="438" fg:w="2"/><text x="11.1645%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.05%)</title><rect x="10.9145%" y="517" width="0.0498%" height="15" fill="rgb(245,182,24)" fg:x="438" fg:w="2"/><text x="11.1645%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.05%)</title><rect x="10.9145%" y="501" width="0.0498%" height="15" fill="rgb(242,14,37)" fg:x="438" fg:w="2"/><text x="11.1645%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.05%)</title><rect x="10.9145%" y="485" width="0.0498%" height="15" fill="rgb(246,228,12)" fg:x="438" fg:w="2"/><text x="11.1645%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.05%)</title><rect x="10.9145%" y="469" width="0.0498%" height="15" fill="rgb(213,55,15)" fg:x="438" fg:w="2"/><text x="11.1645%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.05%)</title><rect x="10.9145%" y="453" width="0.0498%" height="15" fill="rgb(209,9,3)" fg:x="438" fg:w="2"/><text x="11.1645%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.05%)</title><rect x="10.9145%" y="437" width="0.0498%" height="15" fill="rgb(230,59,30)" fg:x="438" fg:w="2"/><text x="11.1645%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.05%)</title><rect x="10.9145%" y="421" width="0.0498%" height="15" fill="rgb(209,121,21)" fg:x="438" fg:w="2"/><text x="11.1645%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.05%)</title><rect x="10.9145%" y="405" width="0.0498%" height="15" fill="rgb(220,109,13)" fg:x="438" fg:w="2"/><text x="11.1645%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.05%)</title><rect x="10.9145%" y="389" width="0.0498%" height="15" fill="rgb(232,18,1)" fg:x="438" fg:w="2"/><text x="11.1645%" y="399.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.05%)</title><rect x="10.9145%" y="373" width="0.0498%" height="15" fill="rgb(215,41,42)" fg:x="438" fg:w="2"/><text x="11.1645%" y="383.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.05%)</title><rect x="10.9145%" y="357" width="0.0498%" height="15" fill="rgb(224,123,36)" fg:x="438" fg:w="2"/><text x="11.1645%" y="367.50"></text></g><g><title>tcache_get (1 samples, 0.02%)</title><rect x="10.9394%" y="341" width="0.0249%" height="15" fill="rgb(240,125,3)" fg:x="439" fg:w="1"/><text x="11.1894%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (51 samples, 1.27%)</title><rect x="10.9644%" y="533" width="1.2709%" height="15" fill="rgb(205,98,50)" fg:x="440" fg:w="51"/><text x="11.2144%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (28 samples, 0.70%)</title><rect x="11.5375%" y="517" width="0.6977%" height="15" fill="rgb(205,185,37)" fg:x="463" fg:w="28"/><text x="11.7875%" y="527.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (53 samples, 1.32%)</title><rect x="10.9644%" y="549" width="1.3207%" height="15" fill="rgb(238,207,15)" fg:x="440" fg:w="53"/><text x="11.2144%" y="559.50"></text></g><g><title>montecarlo::state::State::diagonal_update (2 samples, 0.05%)</title><rect x="12.2352%" y="533" width="0.0498%" height="15" fill="rgb(213,199,42)" fg:x="491" fg:w="2"/><text x="12.4852%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (15 samples, 0.37%)</title><rect x="12.2851%" y="549" width="0.3738%" height="15" fill="rgb(235,201,11)" fg:x="493" fg:w="15"/><text x="12.5351%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (5 samples, 0.12%)</title><rect x="12.6589%" y="549" width="0.1246%" height="15" fill="rgb(207,46,11)" fg:x="508" fg:w="5"/><text x="12.9089%" y="559.50"></text></g><g><title>__GI___libc_free (3 samples, 0.07%)</title><rect x="12.7835%" y="437" width="0.0748%" height="15" fill="rgb(241,35,35)" fg:x="513" fg:w="3"/><text x="13.0335%" y="447.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="12.8333%" y="421" width="0.0249%" height="15" fill="rgb(243,32,47)" fg:x="515" fg:w="1"/><text x="13.0833%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;id_collections::id_vec::IdVec&lt;montecarlo::latice::Even_Site_Id,montecarlo::state::OperatorId&gt;&gt; (4 samples, 0.10%)</title><rect x="12.7835%" y="533" width="0.0997%" height="15" fill="rgb(247,202,23)" fg:x="513" fg:w="4"/><text x="13.0335%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;montecarlo::state::OperatorId&gt;&gt; (4 samples, 0.10%)</title><rect x="12.7835%" y="517" width="0.0997%" height="15" fill="rgb(219,102,11)" fg:x="513" fg:w="4"/><text x="13.0335%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;montecarlo::state::OperatorId&gt;&gt; (4 samples, 0.10%)</title><rect x="12.7835%" y="501" width="0.0997%" height="15" fill="rgb(243,110,44)" fg:x="513" fg:w="4"/><text x="13.0335%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.10%)</title><rect x="12.7835%" y="485" width="0.0997%" height="15" fill="rgb(222,74,54)" fg:x="513" fg:w="4"/><text x="13.0335%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.10%)</title><rect x="12.7835%" y="469" width="0.0997%" height="15" fill="rgb(216,99,12)" fg:x="513" fg:w="4"/><text x="13.0335%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.10%)</title><rect x="12.7835%" y="453" width="0.0997%" height="15" fill="rgb(226,22,26)" fg:x="513" fg:w="4"/><text x="13.0335%" y="463.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="12.8582%" y="437" width="0.0249%" height="15" fill="rgb(217,163,10)" fg:x="516" fg:w="1"/><text x="13.1082%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;montecarlo::latice::Bipartite_Id_Vec&lt;montecarlo::state::OperatorId&gt;&gt; (7 samples, 0.17%)</title><rect x="12.7835%" y="549" width="0.1744%" height="15" fill="rgb(213,25,53)" fg:x="513" fg:w="7"/><text x="13.0335%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;id_collections::id_vec::IdVec&lt;montecarlo::latice::Odd_Site_Id,montecarlo::state::OperatorId&gt;&gt; (3 samples, 0.07%)</title><rect x="12.8831%" y="533" width="0.0748%" height="15" fill="rgb(252,105,26)" fg:x="517" fg:w="3"/><text x="13.1331%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;montecarlo::state::OperatorId&gt;&gt; (3 samples, 0.07%)</title><rect x="12.8831%" y="517" width="0.0748%" height="15" fill="rgb(220,39,43)" fg:x="517" fg:w="3"/><text x="13.1331%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;montecarlo::state::OperatorId&gt;&gt; (3 samples, 0.07%)</title><rect x="12.8831%" y="501" width="0.0748%" height="15" fill="rgb(229,68,48)" fg:x="517" fg:w="3"/><text x="13.1331%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.07%)</title><rect x="12.8831%" y="485" width="0.0748%" height="15" fill="rgb(252,8,32)" fg:x="517" fg:w="3"/><text x="13.1331%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.07%)</title><rect x="12.8831%" y="469" width="0.0748%" height="15" fill="rgb(223,20,43)" fg:x="517" fg:w="3"/><text x="13.1331%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.07%)</title><rect x="12.8831%" y="453" width="0.0748%" height="15" fill="rgb(229,81,49)" fg:x="517" fg:w="3"/><text x="13.1331%" y="463.50"></text></g><g><title>__GI___libc_free (3 samples, 0.07%)</title><rect x="12.8831%" y="437" width="0.0748%" height="15" fill="rgb(236,28,36)" fg:x="517" fg:w="3"/><text x="13.1331%" y="447.50"></text></g><g><title>_int_free (2 samples, 0.05%)</title><rect x="12.9080%" y="421" width="0.0498%" height="15" fill="rgb(249,185,26)" fg:x="518" fg:w="2"/><text x="13.1580%" y="431.50"></text></g><g><title>tcache_put (1 samples, 0.02%)</title><rect x="12.9330%" y="405" width="0.0249%" height="15" fill="rgb(249,174,33)" fg:x="519" fg:w="1"/><text x="13.1830%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.02%)</title><rect x="12.9579%" y="517" width="0.0249%" height="15" fill="rgb(233,201,37)" fg:x="520" fg:w="1"/><text x="13.2079%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="12.9828%" y="517" width="0.0249%" height="15" fill="rgb(221,78,26)" fg:x="521" fg:w="1"/><text x="13.2328%" y="527.50"></text></g><g><title>tcache_put (1 samples, 0.02%)</title><rect x="13.0077%" y="421" width="0.0249%" height="15" fill="rgb(250,127,30)" fg:x="522" fg:w="1"/><text x="13.2577%" y="431.50"></text></g><g><title>_int_malloc (2 samples, 0.05%)</title><rect x="13.0077%" y="437" width="0.0498%" height="15" fill="rgb(230,49,44)" fg:x="522" fg:w="2"/><text x="13.2577%" y="447.50"></text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="13.0326%" y="421" width="0.0249%" height="15" fill="rgb(229,67,23)" fg:x="523" fg:w="1"/><text x="13.2826%" y="431.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.07%)</title><rect x="13.0077%" y="453" width="0.0748%" height="15" fill="rgb(249,83,47)" fg:x="522" fg:w="3"/><text x="13.2577%" y="463.50"></text></g><g><title>checked_request2size (1 samples, 0.02%)</title><rect x="13.0576%" y="437" width="0.0249%" height="15" fill="rgb(215,43,3)" fg:x="524" fg:w="1"/><text x="13.3076%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="13.0825%" y="453" width="0.0249%" height="15" fill="rgb(238,154,13)" fg:x="525" fg:w="1"/><text x="13.3325%" y="463.50"></text></g><g><title>id_collections::id_vec::IdVec&lt;I,T&gt;::push (7 samples, 0.17%)</title><rect x="12.9579%" y="549" width="0.1744%" height="15" fill="rgb(219,56,2)" fg:x="520" fg:w="7"/><text x="13.2079%" y="559.50"></text></g><g><title>id_collections::id_vec::IdVec&lt;I,T&gt;::try_push (7 samples, 0.17%)</title><rect x="12.9579%" y="533" width="0.1744%" height="15" fill="rgb(233,0,4)" fg:x="520" fg:w="7"/><text x="13.2079%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::try_reserve (5 samples, 0.12%)</title><rect x="13.0077%" y="517" width="0.1246%" height="15" fill="rgb(235,30,7)" fg:x="522" fg:w="5"/><text x="13.2577%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (5 samples, 0.12%)</title><rect x="13.0077%" y="501" width="0.1246%" height="15" fill="rgb(250,79,13)" fg:x="522" fg:w="5"/><text x="13.2577%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.12%)</title><rect x="13.0077%" y="485" width="0.1246%" height="15" fill="rgb(211,146,34)" fg:x="522" fg:w="5"/><text x="13.2577%" y="495.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hd28e0cdf38b391c3E.llvm.17534386512340449806 (5 samples, 0.12%)</title><rect x="13.0077%" y="469" width="0.1246%" height="15" fill="rgb(228,22,38)" fg:x="522" fg:w="5"/><text x="13.2577%" y="479.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="13.1074%" y="453" width="0.0249%" height="15" fill="rgb(235,168,5)" fg:x="526" fg:w="1"/><text x="13.3574%" y="463.50"></text></g><g><title>&lt;montecarlo::latice::Edge as core::clone::Clone&gt;::clone (14 samples, 0.35%)</title><rect x="13.4563%" y="533" width="0.3489%" height="15" fill="rgb(221,155,16)" fg:x="540" fg:w="14"/><text x="13.7063%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="13.8051%" y="533" width="0.0249%" height="15" fill="rgb(215,215,53)" fg:x="554" fg:w="1"/><text x="14.0551%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="13.8051%" y="517" width="0.0249%" height="15" fill="rgb(223,4,10)" fg:x="554" fg:w="1"/><text x="14.0551%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="13.8051%" y="501" width="0.0249%" height="15" fill="rgb(234,103,6)" fg:x="554" fg:w="1"/><text x="14.0551%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="13.8051%" y="485" width="0.0249%" height="15" fill="rgb(227,97,0)" fg:x="554" fg:w="1"/><text x="14.0551%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="13.8051%" y="469" width="0.0249%" height="15" fill="rgb(234,150,53)" fg:x="554" fg:w="1"/><text x="14.0551%" y="479.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64::_{{closure}} (2 samples, 0.05%)</title><rect x="14.3284%" y="405" width="0.0498%" height="15" fill="rgb(228,201,54)" fg:x="575" fg:w="2"/><text x="14.5784%" y="415.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (1 samples, 0.02%)</title><rect x="14.3783%" y="309" width="0.0249%" height="15" fill="rgb(222,22,37)" fg:x="577" fg:w="1"/><text x="14.6283%" y="319.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt; as ppv_lite86::types::StoreBytes&gt;::write_le (1 samples, 0.02%)</title><rect x="14.4032%" y="293" width="0.0249%" height="15" fill="rgb(237,53,32)" fg:x="578" fg:w="1"/><text x="14.6532%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_storeu_si128 (1 samples, 0.02%)</title><rect x="14.4032%" y="277" width="0.0249%" height="15" fill="rgb(233,25,53)" fg:x="578" fg:w="1"/><text x="14.6532%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (1 samples, 0.02%)</title><rect x="14.4032%" y="261" width="0.0249%" height="15" fill="rgb(210,40,34)" fg:x="578" fg:w="1"/><text x="14.6532%" y="271.50"></text></g><g><title>core::ptr::write_unaligned (1 samples, 0.02%)</title><rect x="14.4032%" y="245" width="0.0249%" height="15" fill="rgb(241,220,44)" fg:x="578" fg:w="1"/><text x="14.6532%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="14.4032%" y="229" width="0.0249%" height="15" fill="rgb(235,28,35)" fg:x="578" fg:w="1"/><text x="14.6532%" y="239.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,ppv_lite86::x86_64::YesS4,NI&gt; as ppv_lite86::types::Vec4&lt;u32&gt;&gt;::insert (2 samples, 0.05%)</title><rect x="14.4281%" y="293" width="0.0498%" height="15" fill="rgb(210,56,17)" fg:x="579" fg:w="2"/><text x="14.6781%" y="303.50"></text></g><g><title>core::core_arch::x86::sse41::_mm_insert_epi32 (2 samples, 0.05%)</title><rect x="14.4281%" y="277" width="0.0498%" height="15" fill="rgb(224,130,29)" fg:x="579" fg:w="2"/><text x="14.6781%" y="287.50"></text></g><g><title>ppv_lite86::x86_64::sse2::avx2::_&lt;impl ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 4]&gt; for ppv_lite86::soft::x2&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt;,ppv_lite86::x86_64::sse2::G0&gt;&gt;::from_lanes (1 samples, 0.02%)</title><rect x="14.4779%" y="293" width="0.0249%" height="15" fill="rgb(235,212,8)" fg:x="581" fg:w="1"/><text x="14.7279%" y="303.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 2]&gt;&gt;::from_lanes (1 samples, 0.02%)</title><rect x="14.4779%" y="277" width="0.0249%" height="15" fill="rgb(223,33,50)" fg:x="581" fg:w="1"/><text x="14.7279%" y="287.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_m128i (1 samples, 0.02%)</title><rect x="14.4779%" y="261" width="0.0249%" height="15" fill="rgb(219,149,13)" fg:x="581" fg:w="1"/><text x="14.7279%" y="271.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_m128i (1 samples, 0.02%)</title><rect x="14.4779%" y="245" width="0.0249%" height="15" fill="rgb(250,156,29)" fg:x="581" fg:w="1"/><text x="14.7279%" y="255.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_m128 (1 samples, 0.02%)</title><rect x="14.4779%" y="229" width="0.0249%" height="15" fill="rgb(216,193,19)" fg:x="581" fg:w="1"/><text x="14.7279%" y="239.50"></text></g><g><title>ppv_lite86::x86_64::sse2::avx2::_&lt;impl ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 4]&gt; for ppv_lite86::soft::x2&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt;,ppv_lite86::x86_64::sse2::G0&gt;&gt;::to_lanes (1 samples, 0.02%)</title><rect x="14.5029%" y="293" width="0.0249%" height="15" fill="rgb(216,135,14)" fg:x="582" fg:w="1"/><text x="14.7529%" y="303.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 2]&gt;&gt;::to_lanes (1 samples, 0.02%)</title><rect x="14.5029%" y="277" width="0.0249%" height="15" fill="rgb(241,47,5)" fg:x="582" fg:w="1"/><text x="14.7529%" y="287.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_extracti128_si256 (1 samples, 0.02%)</title><rect x="14.5029%" y="261" width="0.0249%" height="15" fill="rgb(233,42,35)" fg:x="582" fg:w="1"/><text x="14.7529%" y="271.50"></text></g><g><title>rand_chacha::guts::diagonalize (1 samples, 0.02%)</title><rect x="14.5278%" y="293" width="0.0249%" height="15" fill="rgb(231,13,6)" fg:x="583" fg:w="1"/><text x="14.7778%" y="303.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (1 samples, 0.02%)</title><rect x="14.5278%" y="277" width="0.0249%" height="15" fill="rgb(207,181,40)" fg:x="583" fg:w="1"/><text x="14.7778%" y="287.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (1 samples, 0.02%)</title><rect x="14.5278%" y="261" width="0.0249%" height="15" fill="rgb(254,173,49)" fg:x="583" fg:w="1"/><text x="14.7778%" y="271.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="14.5278%" y="245" width="0.0249%" height="15" fill="rgb(221,1,38)" fg:x="583" fg:w="1"/><text x="14.7778%" y="255.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (4 samples, 0.10%)</title><rect x="14.5527%" y="277" width="0.0997%" height="15" fill="rgb(206,124,46)" fg:x="584" fg:w="4"/><text x="14.8027%" y="287.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (4 samples, 0.10%)</title><rect x="14.5527%" y="261" width="0.0997%" height="15" fill="rgb(249,21,11)" fg:x="584" fg:w="4"/><text x="14.8027%" y="271.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (4 samples, 0.10%)</title><rect x="14.5527%" y="245" width="0.0997%" height="15" fill="rgb(222,201,40)" fg:x="584" fg:w="4"/><text x="14.8027%" y="255.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (4 samples, 0.10%)</title><rect x="14.5527%" y="229" width="0.0997%" height="15" fill="rgb(235,61,29)" fg:x="584" fg:w="4"/><text x="14.8027%" y="239.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::bit::BitXor&gt;::bitxor (2 samples, 0.05%)</title><rect x="14.6524%" y="277" width="0.0498%" height="15" fill="rgb(219,207,3)" fg:x="588" fg:w="2"/><text x="14.9024%" y="287.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::bit::BitXor&gt;::bitxor (2 samples, 0.05%)</title><rect x="14.6524%" y="261" width="0.0498%" height="15" fill="rgb(222,56,46)" fg:x="588" fg:w="2"/><text x="14.9024%" y="271.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.05%)</title><rect x="14.6524%" y="245" width="0.0498%" height="15" fill="rgb(239,76,54)" fg:x="588" fg:w="2"/><text x="14.9024%" y="255.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (6 samples, 0.15%)</title><rect x="14.7022%" y="277" width="0.1495%" height="15" fill="rgb(231,124,27)" fg:x="590" fg:w="6"/><text x="14.9522%" y="287.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (6 samples, 0.15%)</title><rect x="14.7022%" y="261" width="0.1495%" height="15" fill="rgb(249,195,6)" fg:x="590" fg:w="6"/><text x="14.9522%" y="271.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (6 samples, 0.15%)</title><rect x="14.7022%" y="245" width="0.1495%" height="15" fill="rgb(237,174,47)" fg:x="590" fg:w="6"/><text x="14.9522%" y="255.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (3 samples, 0.07%)</title><rect x="14.8517%" y="277" width="0.0748%" height="15" fill="rgb(206,201,31)" fg:x="596" fg:w="3"/><text x="15.1017%" y="287.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (3 samples, 0.07%)</title><rect x="14.8517%" y="261" width="0.0748%" height="15" fill="rgb(231,57,52)" fg:x="596" fg:w="3"/><text x="15.1017%" y="271.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (3 samples, 0.07%)</title><rect x="14.8517%" y="245" width="0.0748%" height="15" fill="rgb(248,177,22)" fg:x="596" fg:w="3"/><text x="15.1017%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="14.9016%" y="229" width="0.0249%" height="15" fill="rgb(215,211,37)" fg:x="598" fg:w="1"/><text x="15.1516%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="14.9016%" y="213" width="0.0249%" height="15" fill="rgb(241,128,51)" fg:x="598" fg:w="1"/><text x="15.1516%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="14.9016%" y="197" width="0.0249%" height="15" fill="rgb(227,165,31)" fg:x="598" fg:w="1"/><text x="15.1516%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="14.9016%" y="181" width="0.0249%" height="15" fill="rgb(228,167,24)" fg:x="598" fg:w="1"/><text x="15.1516%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="14.9016%" y="165" width="0.0249%" height="15" fill="rgb(228,143,12)" fg:x="598" fg:w="1"/><text x="15.1516%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="14.9016%" y="149" width="0.0249%" height="15" fill="rgb(249,149,8)" fg:x="598" fg:w="1"/><text x="15.1516%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="14.9016%" y="133" width="0.0249%" height="15" fill="rgb(243,35,44)" fg:x="598" fg:w="1"/><text x="15.1516%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="14.9016%" y="117" width="0.0249%" height="15" fill="rgb(246,89,9)" fg:x="598" fg:w="1"/><text x="15.1516%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="14.9016%" y="101" width="0.0249%" height="15" fill="rgb(233,213,13)" fg:x="598" fg:w="1"/><text x="15.1516%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="14.9016%" y="85" width="0.0249%" height="15" fill="rgb(233,141,41)" fg:x="598" fg:w="1"/><text x="15.1516%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="14.9016%" y="69" width="0.0249%" height="15" fill="rgb(239,167,4)" fg:x="598" fg:w="1"/><text x="15.1516%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="14.9016%" y="53" width="0.0249%" height="15" fill="rgb(209,217,16)" fg:x="598" fg:w="1"/><text x="15.1516%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="14.9016%" y="37" width="0.0249%" height="15" fill="rgb(219,88,35)" fg:x="598" fg:w="1"/><text x="15.1516%" y="47.50"></text></g><g><title>rand::rng::Rng::gen (33 samples, 0.82%)</title><rect x="14.2038%" y="485" width="0.8223%" height="15" fill="rgb(220,193,23)" fg:x="570" fg:w="33"/><text x="14.4538%" y="495.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;usize&gt; for rand::distributions::Standard&gt;::sample (33 samples, 0.82%)</title><rect x="14.2038%" y="469" width="0.8223%" height="15" fill="rgb(230,90,52)" fg:x="570" fg:w="33"/><text x="14.4538%" y="479.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (33 samples, 0.82%)</title><rect x="14.2038%" y="453" width="0.8223%" height="15" fill="rgb(252,106,19)" fg:x="570" fg:w="33"/><text x="14.4538%" y="463.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (33 samples, 0.82%)</title><rect x="14.2038%" y="437" width="0.8223%" height="15" fill="rgb(206,74,20)" fg:x="570" fg:w="33"/><text x="14.4538%" y="447.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (33 samples, 0.82%)</title><rect x="14.2038%" y="421" width="0.8223%" height="15" fill="rgb(230,138,44)" fg:x="570" fg:w="33"/><text x="14.4538%" y="431.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (26 samples, 0.65%)</title><rect x="14.3783%" y="405" width="0.6479%" height="15" fill="rgb(235,182,43)" fg:x="577" fg:w="26"/><text x="14.6283%" y="415.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (26 samples, 0.65%)</title><rect x="14.3783%" y="389" width="0.6479%" height="15" fill="rgb(242,16,51)" fg:x="577" fg:w="26"/><text x="14.6283%" y="399.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (26 samples, 0.65%)</title><rect x="14.3783%" y="373" width="0.6479%" height="15" fill="rgb(248,9,4)" fg:x="577" fg:w="26"/><text x="14.6283%" y="383.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (26 samples, 0.65%)</title><rect x="14.3783%" y="357" width="0.6479%" height="15" fill="rgb(210,31,22)" fg:x="577" fg:w="26"/><text x="14.6283%" y="367.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (26 samples, 0.65%)</title><rect x="14.3783%" y="341" width="0.6479%" height="15" fill="rgb(239,54,39)" fg:x="577" fg:w="26"/><text x="14.6283%" y="351.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (26 samples, 0.65%)</title><rect x="14.3783%" y="325" width="0.6479%" height="15" fill="rgb(230,99,41)" fg:x="577" fg:w="26"/><text x="14.6283%" y="335.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (25 samples, 0.62%)</title><rect x="14.4032%" y="309" width="0.6230%" height="15" fill="rgb(253,106,12)" fg:x="578" fg:w="25"/><text x="14.6532%" y="319.50"></text></g><g><title>rand_chacha::guts::round (19 samples, 0.47%)</title><rect x="14.5527%" y="293" width="0.4735%" height="15" fill="rgb(213,46,41)" fg:x="584" fg:w="19"/><text x="14.8027%" y="303.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (4 samples, 0.10%)</title><rect x="14.9265%" y="277" width="0.0997%" height="15" fill="rgb(215,133,35)" fg:x="599" fg:w="4"/><text x="15.1765%" y="287.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (4 samples, 0.10%)</title><rect x="14.9265%" y="261" width="0.0997%" height="15" fill="rgb(213,28,5)" fg:x="599" fg:w="4"/><text x="15.1765%" y="271.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (4 samples, 0.10%)</title><rect x="14.9265%" y="245" width="0.0997%" height="15" fill="rgb(215,77,49)" fg:x="599" fg:w="4"/><text x="15.1765%" y="255.50"></text></g><g><title>montecarlo::latice::Latice::random_edge (77 samples, 1.92%)</title><rect x="13.1323%" y="549" width="1.9188%" height="15" fill="rgb(248,100,22)" fg:x="527" fg:w="77"/><text x="13.3823%" y="559.50">m..</text></g><g><title>rand::rng::Rng::sample (49 samples, 1.22%)</title><rect x="13.8301%" y="533" width="1.2210%" height="15" fill="rgb(208,67,9)" fg:x="555" fg:w="49"/><text x="14.0801%" y="543.50"></text></g><g><title>&lt;rand::distributions::uniform::Uniform&lt;X&gt; as rand::distributions::distribution::Distribution&lt;X&gt;&gt;::sample (46 samples, 1.15%)</title><rect x="13.9048%" y="517" width="1.1463%" height="15" fill="rgb(219,133,21)" fg:x="558" fg:w="46"/><text x="14.1548%" y="527.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample (46 samples, 1.15%)</title><rect x="13.9048%" y="501" width="1.1463%" height="15" fill="rgb(246,46,29)" fg:x="558" fg:w="46"/><text x="14.1548%" y="511.50"></text></g><g><title>rand::rng::Rng::sample (1 samples, 0.02%)</title><rect x="15.0262%" y="485" width="0.0249%" height="15" fill="rgb(246,185,52)" fg:x="603" fg:w="1"/><text x="15.2762%" y="495.50"></text></g><g><title>montecarlo::state::State::delete (1 samples, 0.02%)</title><rect x="15.0511%" y="549" width="0.0249%" height="15" fill="rgb(252,136,11)" fg:x="604" fg:w="1"/><text x="15.3011%" y="559.50"></text></g><g><title>montecarlo::state::State::insert_diag (11 samples, 0.27%)</title><rect x="15.0760%" y="549" width="0.2741%" height="15" fill="rgb(219,138,53)" fg:x="605" fg:w="11"/><text x="15.3260%" y="559.50"></text></g><g><title>&lt;f64 as rand::distributions::utils::FloatSIMDUtils&gt;::cast_from_int (15 samples, 0.37%)</title><rect x="15.6990%" y="517" width="0.3738%" height="15" fill="rgb(211,51,23)" fg:x="630" fg:w="15"/><text x="15.9490%" y="527.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64::_{{closure}} (8 samples, 0.20%)</title><rect x="16.3967%" y="437" width="0.1994%" height="15" fill="rgb(247,221,28)" fg:x="658" fg:w="8"/><text x="16.6467%" y="447.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt; as ppv_lite86::types::StoreBytes&gt;::write_le (1 samples, 0.02%)</title><rect x="16.6459%" y="325" width="0.0249%" height="15" fill="rgb(251,222,45)" fg:x="668" fg:w="1"/><text x="16.8959%" y="335.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_storeu_si128 (1 samples, 0.02%)</title><rect x="16.6459%" y="309" width="0.0249%" height="15" fill="rgb(217,162,53)" fg:x="668" fg:w="1"/><text x="16.8959%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (1 samples, 0.02%)</title><rect x="16.6459%" y="293" width="0.0249%" height="15" fill="rgb(229,93,14)" fg:x="668" fg:w="1"/><text x="16.8959%" y="303.50"></text></g><g><title>core::ptr::write_unaligned (1 samples, 0.02%)</title><rect x="16.6459%" y="277" width="0.0249%" height="15" fill="rgb(209,67,49)" fg:x="668" fg:w="1"/><text x="16.8959%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="16.6459%" y="261" width="0.0249%" height="15" fill="rgb(213,87,29)" fg:x="668" fg:w="1"/><text x="16.8959%" y="271.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,ppv_lite86::x86_64::YesS4,NI&gt; as ppv_lite86::types::Vec4&lt;u32&gt;&gt;::insert (1 samples, 0.02%)</title><rect x="16.6708%" y="325" width="0.0249%" height="15" fill="rgb(205,151,52)" fg:x="669" fg:w="1"/><text x="16.9208%" y="335.50"></text></g><g><title>core::core_arch::x86::sse41::_mm_insert_epi32 (1 samples, 0.02%)</title><rect x="16.6708%" y="309" width="0.0249%" height="15" fill="rgb(253,215,39)" fg:x="669" fg:w="1"/><text x="16.9208%" y="319.50"></text></g><g><title>ppv_lite86::x86_64::sse2::avx2::_&lt;impl ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 4]&gt; for ppv_lite86::soft::x2&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt;,ppv_lite86::x86_64::sse2::G0&gt;&gt;::to_lanes (1 samples, 0.02%)</title><rect x="16.6957%" y="325" width="0.0249%" height="15" fill="rgb(221,220,41)" fg:x="670" fg:w="1"/><text x="16.9457%" y="335.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 2]&gt;&gt;::to_lanes (1 samples, 0.02%)</title><rect x="16.6957%" y="309" width="0.0249%" height="15" fill="rgb(218,133,21)" fg:x="670" fg:w="1"/><text x="16.9457%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_extracti128_si256 (1 samples, 0.02%)</title><rect x="16.6957%" y="293" width="0.0249%" height="15" fill="rgb(221,193,43)" fg:x="670" fg:w="1"/><text x="16.9457%" y="303.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (1 samples, 0.02%)</title><rect x="16.7207%" y="309" width="0.0249%" height="15" fill="rgb(240,128,52)" fg:x="671" fg:w="1"/><text x="16.9707%" y="319.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (1 samples, 0.02%)</title><rect x="16.7207%" y="293" width="0.0249%" height="15" fill="rgb(253,114,12)" fg:x="671" fg:w="1"/><text x="16.9707%" y="303.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="16.7207%" y="277" width="0.0249%" height="15" fill="rgb(215,223,47)" fg:x="671" fg:w="1"/><text x="16.9707%" y="287.50"></text></g><g><title>rand_chacha::guts::diagonalize (4 samples, 0.10%)</title><rect x="16.7207%" y="325" width="0.0997%" height="15" fill="rgb(248,225,23)" fg:x="671" fg:w="4"/><text x="16.9707%" y="335.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (3 samples, 0.07%)</title><rect x="16.7456%" y="309" width="0.0748%" height="15" fill="rgb(250,108,0)" fg:x="672" fg:w="3"/><text x="16.9956%" y="319.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (3 samples, 0.07%)</title><rect x="16.7456%" y="293" width="0.0748%" height="15" fill="rgb(228,208,7)" fg:x="672" fg:w="3"/><text x="16.9956%" y="303.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (3 samples, 0.07%)</title><rect x="16.7456%" y="277" width="0.0748%" height="15" fill="rgb(244,45,10)" fg:x="672" fg:w="3"/><text x="16.9956%" y="287.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (9 samples, 0.22%)</title><rect x="16.8203%" y="309" width="0.2243%" height="15" fill="rgb(207,125,25)" fg:x="675" fg:w="9"/><text x="17.0703%" y="319.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (9 samples, 0.22%)</title><rect x="16.8203%" y="293" width="0.2243%" height="15" fill="rgb(210,195,18)" fg:x="675" fg:w="9"/><text x="17.0703%" y="303.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (9 samples, 0.22%)</title><rect x="16.8203%" y="277" width="0.2243%" height="15" fill="rgb(249,80,12)" fg:x="675" fg:w="9"/><text x="17.0703%" y="287.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (9 samples, 0.22%)</title><rect x="16.8203%" y="261" width="0.2243%" height="15" fill="rgb(221,65,9)" fg:x="675" fg:w="9"/><text x="17.0703%" y="271.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::bit::BitXor&gt;::bitxor (4 samples, 0.10%)</title><rect x="17.0446%" y="309" width="0.0997%" height="15" fill="rgb(235,49,36)" fg:x="684" fg:w="4"/><text x="17.2946%" y="319.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::bit::BitXor&gt;::bitxor (4 samples, 0.10%)</title><rect x="17.0446%" y="293" width="0.0997%" height="15" fill="rgb(225,32,20)" fg:x="684" fg:w="4"/><text x="17.2946%" y="303.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (4 samples, 0.10%)</title><rect x="17.0446%" y="277" width="0.0997%" height="15" fill="rgb(215,141,46)" fg:x="684" fg:w="4"/><text x="17.2946%" y="287.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (15 samples, 0.37%)</title><rect x="17.1443%" y="309" width="0.3738%" height="15" fill="rgb(250,160,47)" fg:x="688" fg:w="15"/><text x="17.3943%" y="319.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (15 samples, 0.37%)</title><rect x="17.1443%" y="293" width="0.3738%" height="15" fill="rgb(216,222,40)" fg:x="688" fg:w="15"/><text x="17.3943%" y="303.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (15 samples, 0.37%)</title><rect x="17.1443%" y="277" width="0.3738%" height="15" fill="rgb(234,217,39)" fg:x="688" fg:w="15"/><text x="17.3943%" y="287.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (10 samples, 0.25%)</title><rect x="17.5181%" y="277" width="0.2492%" height="15" fill="rgb(207,178,40)" fg:x="703" fg:w="10"/><text x="17.7681%" y="287.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (12 samples, 0.30%)</title><rect x="17.5181%" y="309" width="0.2990%" height="15" fill="rgb(221,136,13)" fg:x="703" fg:w="12"/><text x="17.7681%" y="319.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (12 samples, 0.30%)</title><rect x="17.5181%" y="293" width="0.2990%" height="15" fill="rgb(249,199,10)" fg:x="703" fg:w="12"/><text x="17.7681%" y="303.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.05%)</title><rect x="17.7673%" y="277" width="0.0498%" height="15" fill="rgb(249,222,13)" fg:x="713" fg:w="2"/><text x="18.0173%" y="287.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (6 samples, 0.15%)</title><rect x="17.8171%" y="309" width="0.1495%" height="15" fill="rgb(244,185,38)" fg:x="715" fg:w="6"/><text x="18.0671%" y="319.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (6 samples, 0.15%)</title><rect x="17.8171%" y="293" width="0.1495%" height="15" fill="rgb(236,202,9)" fg:x="715" fg:w="6"/><text x="18.0671%" y="303.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (6 samples, 0.15%)</title><rect x="17.8171%" y="277" width="0.1495%" height="15" fill="rgb(250,229,37)" fg:x="715" fg:w="6"/><text x="18.0671%" y="287.50"></text></g><g><title>rand_chacha::guts::round (50 samples, 1.25%)</title><rect x="16.8203%" y="325" width="1.2460%" height="15" fill="rgb(206,174,23)" fg:x="675" fg:w="50"/><text x="17.0703%" y="335.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (4 samples, 0.10%)</title><rect x="17.9666%" y="309" width="0.0997%" height="15" fill="rgb(211,33,43)" fg:x="721" fg:w="4"/><text x="18.2166%" y="319.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (4 samples, 0.10%)</title><rect x="17.9666%" y="293" width="0.0997%" height="15" fill="rgb(245,58,50)" fg:x="721" fg:w="4"/><text x="18.2166%" y="303.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (4 samples, 0.10%)</title><rect x="17.9666%" y="277" width="0.0997%" height="15" fill="rgb(244,68,36)" fg:x="721" fg:w="4"/><text x="18.2166%" y="287.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (82 samples, 2.04%)</title><rect x="16.0728%" y="469" width="2.0434%" height="15" fill="rgb(232,229,15)" fg:x="645" fg:w="82"/><text x="16.3228%" y="479.50">&lt;..</text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (82 samples, 2.04%)</title><rect x="16.0728%" y="453" width="2.0434%" height="15" fill="rgb(254,30,23)" fg:x="645" fg:w="82"/><text x="16.3228%" y="463.50">&lt;..</text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (61 samples, 1.52%)</title><rect x="16.5961%" y="437" width="1.5201%" height="15" fill="rgb(235,160,14)" fg:x="666" fg:w="61"/><text x="16.8461%" y="447.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (61 samples, 1.52%)</title><rect x="16.5961%" y="421" width="1.5201%" height="15" fill="rgb(212,155,44)" fg:x="666" fg:w="61"/><text x="16.8461%" y="431.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (60 samples, 1.50%)</title><rect x="16.6210%" y="405" width="1.4951%" height="15" fill="rgb(226,2,50)" fg:x="667" fg:w="60"/><text x="16.8710%" y="415.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (60 samples, 1.50%)</title><rect x="16.6210%" y="389" width="1.4951%" height="15" fill="rgb(234,177,6)" fg:x="667" fg:w="60"/><text x="16.8710%" y="399.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (59 samples, 1.47%)</title><rect x="16.6459%" y="373" width="1.4702%" height="15" fill="rgb(217,24,9)" fg:x="668" fg:w="59"/><text x="16.8959%" y="383.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (59 samples, 1.47%)</title><rect x="16.6459%" y="357" width="1.4702%" height="15" fill="rgb(220,13,46)" fg:x="668" fg:w="59"/><text x="16.8959%" y="367.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (59 samples, 1.47%)</title><rect x="16.6459%" y="341" width="1.4702%" height="15" fill="rgb(239,221,27)" fg:x="668" fg:w="59"/><text x="16.8959%" y="351.50"></text></g><g><title>rand_chacha::guts::undiagonalize (2 samples, 0.05%)</title><rect x="18.0663%" y="325" width="0.0498%" height="15" fill="rgb(222,198,25)" fg:x="725" fg:w="2"/><text x="18.3163%" y="335.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (2 samples, 0.05%)</title><rect x="18.0663%" y="309" width="0.0498%" height="15" fill="rgb(211,99,13)" fg:x="725" fg:w="2"/><text x="18.3163%" y="319.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (2 samples, 0.05%)</title><rect x="18.0663%" y="293" width="0.0498%" height="15" fill="rgb(232,111,31)" fg:x="725" fg:w="2"/><text x="18.3163%" y="303.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.05%)</title><rect x="18.0663%" y="277" width="0.0498%" height="15" fill="rgb(245,82,37)" fg:x="725" fg:w="2"/><text x="18.3163%" y="287.50"></text></g><g><title>montecarlo::state::State::diagonal_update (509 samples, 12.68%)</title><rect x="5.4822%" y="565" width="12.6838%" height="15" fill="rgb(227,149,46)" fg:x="220" fg:w="509"/><text x="5.7322%" y="575.50">montecarlo::state::..</text></g><g><title>rand::rng::Rng::gen (113 samples, 2.82%)</title><rect x="15.3501%" y="549" width="2.8158%" height="15" fill="rgb(218,36,50)" fg:x="616" fg:w="113"/><text x="15.6001%" y="559.50">ra..</text></g><g><title>rand::distributions::float::&lt;impl rand::distributions::distribution::Distribution&lt;f64&gt; for rand::distributions::Standard&gt;::sample (113 samples, 2.82%)</title><rect x="15.3501%" y="533" width="2.8158%" height="15" fill="rgb(226,80,48)" fg:x="616" fg:w="113"/><text x="15.6001%" y="543.50">ra..</text></g><g><title>rand::rng::Rng::gen (84 samples, 2.09%)</title><rect x="16.0728%" y="517" width="2.0932%" height="15" fill="rgb(238,224,15)" fg:x="645" fg:w="84"/><text x="16.3228%" y="527.50">r..</text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (84 samples, 2.09%)</title><rect x="16.0728%" y="501" width="2.0932%" height="15" fill="rgb(241,136,10)" fg:x="645" fg:w="84"/><text x="16.3228%" y="511.50">r..</text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (84 samples, 2.09%)</title><rect x="16.0728%" y="485" width="2.0932%" height="15" fill="rgb(208,32,45)" fg:x="645" fg:w="84"/><text x="16.3228%" y="495.50">&lt;..</text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (2 samples, 0.05%)</title><rect x="18.1161%" y="469" width="0.0498%" height="15" fill="rgb(207,135,9)" fg:x="727" fg:w="2"/><text x="18.3661%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (4 samples, 0.10%)</title><rect x="18.2656%" y="549" width="0.0997%" height="15" fill="rgb(206,86,44)" fg:x="733" fg:w="4"/><text x="18.5156%" y="559.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.10%)</title><rect x="18.2656%" y="533" width="0.0997%" height="15" fill="rgb(245,177,15)" fg:x="733" fg:w="4"/><text x="18.5156%" y="543.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.10%)</title><rect x="18.2656%" y="517" width="0.0997%" height="15" fill="rgb(206,64,50)" fg:x="733" fg:w="4"/><text x="18.5156%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.57%)</title><rect x="18.3653%" y="517" width="0.5731%" height="15" fill="rgb(234,36,40)" fg:x="737" fg:w="23"/><text x="18.6153%" y="527.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (23 samples, 0.57%)</title><rect x="18.3653%" y="501" width="0.5731%" height="15" fill="rgb(213,64,8)" fg:x="737" fg:w="23"/><text x="18.6153%" y="511.50"></text></g><g><title>&lt;id_collections::id_vec::Iter&lt;I,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.60%)</title><rect x="18.3653%" y="549" width="0.5981%" height="15" fill="rgb(210,75,36)" fg:x="737" fg:w="24"/><text x="18.6153%" y="559.50"></text></g><g><title>&lt;id_collections::id_vec::EnumerateIds&lt;I,It&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.60%)</title><rect x="18.3653%" y="533" width="0.5981%" height="15" fill="rgb(229,88,21)" fg:x="737" fg:w="24"/><text x="18.6153%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="18.9385%" y="517" width="0.0249%" height="15" fill="rgb(252,204,47)" fg:x="760" fg:w="1"/><text x="19.1885%" y="527.50"></text></g><g><title>&lt;id_collections::id_vec::EnumerateIds&lt;I,It&gt; as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (1 samples, 0.02%)</title><rect x="18.9385%" y="501" width="0.0249%" height="15" fill="rgb(208,77,27)" fg:x="760" fg:w="1"/><text x="19.1885%" y="511.50"></text></g><g><title>&lt;usize as core::ops::arith::Add&gt;::add (1 samples, 0.02%)</title><rect x="18.9385%" y="485" width="0.0249%" height="15" fill="rgb(221,76,26)" fg:x="760" fg:w="1"/><text x="19.1885%" y="495.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hd28e0cdf38b391c3E.llvm.17534386512340449806 (1 samples, 0.02%)</title><rect x="19.4867%" y="501" width="0.0249%" height="15" fill="rgb(225,139,18)" fg:x="782" fg:w="1"/><text x="19.7367%" y="511.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="19.4867%" y="485" width="0.0249%" height="15" fill="rgb(230,137,11)" fg:x="782" fg:w="1"/><text x="19.7367%" y="495.50"></text></g><g><title>tcache_get (1 samples, 0.02%)</title><rect x="19.4867%" y="469" width="0.0249%" height="15" fill="rgb(212,28,1)" fg:x="782" fg:w="1"/><text x="19.7367%" y="479.50"></text></g><g><title>_int_free (6 samples, 0.15%)</title><rect x="19.7359%" y="405" width="0.1495%" height="15" fill="rgb(248,164,17)" fg:x="792" fg:w="6"/><text x="19.9859%" y="415.50"></text></g><g><title>malloc_consolidate (4 samples, 0.10%)</title><rect x="19.7857%" y="389" width="0.0997%" height="15" fill="rgb(222,171,42)" fg:x="794" fg:w="4"/><text x="20.0357%" y="399.50"></text></g><g><title>_int_malloc (5 samples, 0.12%)</title><rect x="19.8854%" y="405" width="0.1246%" height="15" fill="rgb(243,84,45)" fg:x="798" fg:w="5"/><text x="20.1354%" y="415.50"></text></g><g><title>_int_realloc (15 samples, 0.37%)</title><rect x="19.6611%" y="421" width="0.3738%" height="15" fill="rgb(252,49,23)" fg:x="789" fg:w="15"/><text x="19.9111%" y="431.50"></text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="20.0100%" y="405" width="0.0249%" height="15" fill="rgb(215,19,7)" fg:x="803" fg:w="1"/><text x="20.2600%" y="415.50"></text></g><g><title>arena_for_chunk (1 samples, 0.02%)</title><rect x="20.0349%" y="421" width="0.0249%" height="15" fill="rgb(238,81,41)" fg:x="804" fg:w="1"/><text x="20.2849%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (23 samples, 0.57%)</title><rect x="19.5116%" y="501" width="0.5731%" height="15" fill="rgb(210,199,37)" fg:x="783" fg:w="23"/><text x="19.7616%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (21 samples, 0.52%)</title><rect x="19.5614%" y="485" width="0.5233%" height="15" fill="rgb(244,192,49)" fg:x="785" fg:w="21"/><text x="19.8114%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (21 samples, 0.52%)</title><rect x="19.5614%" y="469" width="0.5233%" height="15" fill="rgb(226,211,11)" fg:x="785" fg:w="21"/><text x="19.8114%" y="479.50"></text></g><g><title>alloc::alloc::realloc (21 samples, 0.52%)</title><rect x="19.5614%" y="453" width="0.5233%" height="15" fill="rgb(236,162,54)" fg:x="785" fg:w="21"/><text x="19.8114%" y="463.50"></text></g><g><title>__GI___libc_realloc (21 samples, 0.52%)</title><rect x="19.5614%" y="437" width="0.5233%" height="15" fill="rgb(220,229,9)" fg:x="785" fg:w="21"/><text x="19.8114%" y="447.50"></text></g><g><title>checked_request2size (1 samples, 0.02%)</title><rect x="20.0598%" y="421" width="0.0249%" height="15" fill="rgb(250,87,22)" fg:x="805" fg:w="1"/><text x="20.3098%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (25 samples, 0.62%)</title><rect x="19.4867%" y="517" width="0.6230%" height="15" fill="rgb(239,43,17)" fg:x="782" fg:w="25"/><text x="19.7367%" y="527.50"></text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="20.0847%" y="501" width="0.0249%" height="15" fill="rgb(231,177,25)" fg:x="806" fg:w="1"/><text x="20.3347%" y="511.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="20.0847%" y="485" width="0.0249%" height="15" fill="rgb(219,179,1)" fg:x="806" fg:w="1"/><text x="20.3347%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="20.0847%" y="469" width="0.0249%" height="15" fill="rgb(238,219,53)" fg:x="806" fg:w="1"/><text x="20.3347%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (26 samples, 0.65%)</title><rect x="19.4867%" y="533" width="0.6479%" height="15" fill="rgb(232,167,36)" fg:x="782" fg:w="26"/><text x="19.7367%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="20.1096%" y="517" width="0.0249%" height="15" fill="rgb(244,19,51)" fg:x="807" fg:w="1"/><text x="20.3596%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="20.1346%" y="533" width="0.0249%" height="15" fill="rgb(224,6,22)" fg:x="808" fg:w="1"/><text x="20.3846%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.02%)</title><rect x="20.1346%" y="517" width="0.0249%" height="15" fill="rgb(224,145,5)" fg:x="808" fg:w="1"/><text x="20.3846%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (60 samples, 1.50%)</title><rect x="18.9634%" y="549" width="1.4951%" height="15" fill="rgb(234,130,49)" fg:x="761" fg:w="60"/><text x="19.2134%" y="559.50"></text></g><g><title>core::ptr::write (12 samples, 0.30%)</title><rect x="20.1595%" y="533" width="0.2990%" height="15" fill="rgb(254,6,2)" fg:x="809" fg:w="12"/><text x="20.4095%" y="543.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (18 samples, 0.45%)</title><rect x="20.4585%" y="549" width="0.4485%" height="15" fill="rgb(208,96,46)" fg:x="821" fg:w="18"/><text x="20.7085%" y="559.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (18 samples, 0.45%)</title><rect x="20.4585%" y="533" width="0.4485%" height="15" fill="rgb(239,3,39)" fg:x="821" fg:w="18"/><text x="20.7085%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.02%)</title><rect x="20.8821%" y="517" width="0.0249%" height="15" fill="rgb(233,210,1)" fg:x="838" fg:w="1"/><text x="21.1321%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (29 samples, 0.72%)</title><rect x="20.9071%" y="549" width="0.7227%" height="15" fill="rgb(244,137,37)" fg:x="839" fg:w="29"/><text x="21.1571%" y="559.50"></text></g><g><title>malloc_consolidate (6 samples, 0.15%)</title><rect x="21.7543%" y="437" width="0.1495%" height="15" fill="rgb(240,136,2)" fg:x="873" fg:w="6"/><text x="22.0043%" y="447.50"></text></g><g><title>__GI___libc_free (10 samples, 0.25%)</title><rect x="21.6795%" y="469" width="0.2492%" height="15" fill="rgb(239,18,37)" fg:x="870" fg:w="10"/><text x="21.9295%" y="479.50"></text></g><g><title>_int_free (10 samples, 0.25%)</title><rect x="21.6795%" y="453" width="0.2492%" height="15" fill="rgb(218,185,22)" fg:x="870" fg:w="10"/><text x="21.9295%" y="463.50"></text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="21.9038%" y="437" width="0.0249%" height="15" fill="rgb(225,218,4)" fg:x="879" fg:w="1"/><text x="22.1538%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;montecarlo::state::OperatorId&gt;&gt; (13 samples, 0.32%)</title><rect x="21.6297%" y="549" width="0.3239%" height="15" fill="rgb(230,182,32)" fg:x="868" fg:w="13"/><text x="21.8797%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;montecarlo::state::OperatorId&gt;&gt; (13 samples, 0.32%)</title><rect x="21.6297%" y="533" width="0.3239%" height="15" fill="rgb(242,56,43)" fg:x="868" fg:w="13"/><text x="21.8797%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.32%)</title><rect x="21.6297%" y="517" width="0.3239%" height="15" fill="rgb(233,99,24)" fg:x="868" fg:w="13"/><text x="21.8797%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.27%)</title><rect x="21.6795%" y="501" width="0.2741%" height="15" fill="rgb(234,209,42)" fg:x="870" fg:w="11"/><text x="21.9295%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.27%)</title><rect x="21.6795%" y="485" width="0.2741%" height="15" fill="rgb(227,7,12)" fg:x="870" fg:w="11"/><text x="21.9295%" y="495.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="21.9287%" y="469" width="0.0249%" height="15" fill="rgb(245,203,43)" fg:x="880" fg:w="1"/><text x="22.1787%" y="479.50"></text></g><g><title>&lt;id_collections::id_vec::IdVec&lt;I,T&gt; as core::ops::index::Index&lt;J&gt;&gt;::index (11 samples, 0.27%)</title><rect x="22.1032%" y="533" width="0.2741%" height="15" fill="rgb(238,205,33)" fg:x="887" fg:w="11"/><text x="22.3532%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (11 samples, 0.27%)</title><rect x="22.1032%" y="517" width="0.2741%" height="15" fill="rgb(231,56,7)" fg:x="887" fg:w="11"/><text x="22.3532%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (11 samples, 0.27%)</title><rect x="22.1032%" y="501" width="0.2741%" height="15" fill="rgb(244,186,29)" fg:x="887" fg:w="11"/><text x="22.3532%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (11 samples, 0.27%)</title><rect x="22.1032%" y="485" width="0.2741%" height="15" fill="rgb(234,111,31)" fg:x="887" fg:w="11"/><text x="22.3532%" y="495.50"></text></g><g><title>core::cmp::PartialOrd::ge (12 samples, 0.30%)</title><rect x="22.3773%" y="533" width="0.2990%" height="15" fill="rgb(241,149,10)" fg:x="898" fg:w="12"/><text x="22.6273%" y="543.50"></text></g><g><title>core::cmp::PartialOrd::le (25 samples, 0.62%)</title><rect x="22.6763%" y="533" width="0.6230%" height="15" fill="rgb(249,206,44)" fg:x="910" fg:w="25"/><text x="22.9263%" y="543.50"></text></g><g><title>&lt;montecarlo::state::OperatorId as core::cmp::PartialOrd&gt;::partial_cmp (9 samples, 0.22%)</title><rect x="23.0750%" y="517" width="0.2243%" height="15" fill="rgb(251,153,30)" fg:x="926" fg:w="9"/><text x="23.3250%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::partial_cmp (9 samples, 0.22%)</title><rect x="23.0750%" y="501" width="0.2243%" height="15" fill="rgb(239,152,38)" fg:x="926" fg:w="9"/><text x="23.3250%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (9 samples, 0.22%)</title><rect x="23.0750%" y="485" width="0.2243%" height="15" fill="rgb(249,139,47)" fg:x="926" fg:w="9"/><text x="23.3250%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (32 samples, 0.80%)</title><rect x="23.2993%" y="533" width="0.7974%" height="15" fill="rgb(244,64,35)" fg:x="935" fg:w="32"/><text x="23.5493%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (22 samples, 0.55%)</title><rect x="24.0967%" y="533" width="0.5482%" height="15" fill="rgb(216,46,15)" fg:x="967" fg:w="22"/><text x="24.3467%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (4 samples, 0.10%)</title><rect x="24.6449%" y="533" width="0.0997%" height="15" fill="rgb(250,74,19)" fg:x="989" fg:w="4"/><text x="24.8949%" y="543.50"></text></g><g><title>montecarlo::state::State::directed_loop_update (131 samples, 3.26%)</title><rect x="21.9537%" y="549" width="3.2644%" height="15" fill="rgb(249,42,33)" fg:x="881" fg:w="131"/><text x="22.2037%" y="559.50">mon..</text></g><g><title>montecarlo::state::OperatorType::flip (19 samples, 0.47%)</title><rect x="24.7446%" y="533" width="0.4735%" height="15" fill="rgb(242,149,17)" fg:x="993" fg:w="19"/><text x="24.9946%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::is_empty (1 samples, 0.02%)</title><rect x="25.2180%" y="533" width="0.0249%" height="15" fill="rgb(244,29,21)" fg:x="1012" fg:w="1"/><text x="25.4680%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.02%)</title><rect x="25.2180%" y="517" width="0.0249%" height="15" fill="rgb(220,130,37)" fg:x="1012" fg:w="1"/><text x="25.4680%" y="527.50"></text></g><g><title>&lt;usize as rand::distributions::utils::WideningMultiply&gt;::wmul (12 samples, 0.30%)</title><rect x="25.3925%" y="485" width="0.2990%" height="15" fill="rgb(211,67,2)" fg:x="1019" fg:w="12"/><text x="25.6425%" y="495.50"></text></g><g><title>&lt;u64 as rand::distributions::utils::WideningMultiply&gt;::wmul (12 samples, 0.30%)</title><rect x="25.3925%" y="469" width="0.2990%" height="15" fill="rgb(235,68,52)" fg:x="1019" fg:w="12"/><text x="25.6425%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="25.6915%" y="485" width="0.0249%" height="15" fill="rgb(246,142,3)" fg:x="1031" fg:w="1"/><text x="25.9415%" y="495.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64::_{{closure}} (3 samples, 0.07%)</title><rect x="26.2646%" y="405" width="0.0748%" height="15" fill="rgb(241,25,7)" fg:x="1054" fg:w="3"/><text x="26.5146%" y="415.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt; as ppv_lite86::types::StoreBytes&gt;::write_le (1 samples, 0.02%)</title><rect x="26.3394%" y="293" width="0.0249%" height="15" fill="rgb(242,119,39)" fg:x="1057" fg:w="1"/><text x="26.5894%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_storeu_si128 (1 samples, 0.02%)</title><rect x="26.3394%" y="277" width="0.0249%" height="15" fill="rgb(241,98,45)" fg:x="1057" fg:w="1"/><text x="26.5894%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (1 samples, 0.02%)</title><rect x="26.3394%" y="261" width="0.0249%" height="15" fill="rgb(254,28,30)" fg:x="1057" fg:w="1"/><text x="26.5894%" y="271.50"></text></g><g><title>core::ptr::write_unaligned (1 samples, 0.02%)</title><rect x="26.3394%" y="245" width="0.0249%" height="15" fill="rgb(241,142,54)" fg:x="1057" fg:w="1"/><text x="26.5894%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="26.3394%" y="229" width="0.0249%" height="15" fill="rgb(222,85,15)" fg:x="1057" fg:w="1"/><text x="26.5894%" y="239.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,ppv_lite86::x86_64::YesS4,NI&gt; as ppv_lite86::types::Vec4&lt;u32&gt;&gt;::insert (1 samples, 0.02%)</title><rect x="26.3643%" y="293" width="0.0249%" height="15" fill="rgb(210,85,47)" fg:x="1058" fg:w="1"/><text x="26.6143%" y="303.50"></text></g><g><title>core::core_arch::x86::sse41::_mm_insert_epi32 (1 samples, 0.02%)</title><rect x="26.3643%" y="277" width="0.0249%" height="15" fill="rgb(224,206,25)" fg:x="1058" fg:w="1"/><text x="26.6143%" y="287.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.05%)</title><rect x="26.3892%" y="293" width="0.0498%" height="15" fill="rgb(243,201,19)" fg:x="1059" fg:w="2"/><text x="26.6392%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.05%)</title><rect x="26.3892%" y="277" width="0.0498%" height="15" fill="rgb(236,59,4)" fg:x="1059" fg:w="2"/><text x="26.6392%" y="287.50"></text></g><g><title>ppv_lite86::x86_64::sse2::avx2::_&lt;impl ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 4]&gt; for ppv_lite86::soft::x2&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt;,ppv_lite86::x86_64::sse2::G0&gt;&gt;::to_lanes (1 samples, 0.02%)</title><rect x="26.4391%" y="293" width="0.0249%" height="15" fill="rgb(254,179,45)" fg:x="1061" fg:w="1"/><text x="26.6891%" y="303.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 2]&gt;&gt;::to_lanes (1 samples, 0.02%)</title><rect x="26.4391%" y="277" width="0.0249%" height="15" fill="rgb(226,14,10)" fg:x="1061" fg:w="1"/><text x="26.6891%" y="287.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_extracti128_si256 (1 samples, 0.02%)</title><rect x="26.4391%" y="261" width="0.0249%" height="15" fill="rgb(244,27,41)" fg:x="1061" fg:w="1"/><text x="26.6891%" y="271.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (2 samples, 0.05%)</title><rect x="26.4640%" y="277" width="0.0498%" height="15" fill="rgb(235,35,32)" fg:x="1062" fg:w="2"/><text x="26.7140%" y="287.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (2 samples, 0.05%)</title><rect x="26.4640%" y="261" width="0.0498%" height="15" fill="rgb(218,68,31)" fg:x="1062" fg:w="2"/><text x="26.7140%" y="271.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (2 samples, 0.05%)</title><rect x="26.4640%" y="245" width="0.0498%" height="15" fill="rgb(207,120,37)" fg:x="1062" fg:w="2"/><text x="26.7140%" y="255.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.05%)</title><rect x="26.4640%" y="229" width="0.0498%" height="15" fill="rgb(227,98,0)" fg:x="1062" fg:w="2"/><text x="26.7140%" y="239.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::bit::BitXor&gt;::bitxor (2 samples, 0.05%)</title><rect x="26.5138%" y="277" width="0.0498%" height="15" fill="rgb(207,7,3)" fg:x="1064" fg:w="2"/><text x="26.7638%" y="287.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::bit::BitXor&gt;::bitxor (2 samples, 0.05%)</title><rect x="26.5138%" y="261" width="0.0498%" height="15" fill="rgb(206,98,19)" fg:x="1064" fg:w="2"/><text x="26.7638%" y="271.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.05%)</title><rect x="26.5138%" y="245" width="0.0498%" height="15" fill="rgb(217,5,26)" fg:x="1064" fg:w="2"/><text x="26.7638%" y="255.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (5 samples, 0.12%)</title><rect x="26.5637%" y="277" width="0.1246%" height="15" fill="rgb(235,190,38)" fg:x="1066" fg:w="5"/><text x="26.8137%" y="287.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (5 samples, 0.12%)</title><rect x="26.5637%" y="261" width="0.1246%" height="15" fill="rgb(247,86,24)" fg:x="1066" fg:w="5"/><text x="26.8137%" y="271.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (5 samples, 0.12%)</title><rect x="26.5637%" y="245" width="0.1246%" height="15" fill="rgb(205,101,16)" fg:x="1066" fg:w="5"/><text x="26.8137%" y="255.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (3 samples, 0.07%)</title><rect x="26.6883%" y="245" width="0.0748%" height="15" fill="rgb(246,168,33)" fg:x="1071" fg:w="3"/><text x="26.9383%" y="255.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (4 samples, 0.10%)</title><rect x="26.6883%" y="277" width="0.0997%" height="15" fill="rgb(231,114,1)" fg:x="1071" fg:w="4"/><text x="26.9383%" y="287.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (4 samples, 0.10%)</title><rect x="26.6883%" y="261" width="0.0997%" height="15" fill="rgb(207,184,53)" fg:x="1071" fg:w="4"/><text x="26.9383%" y="271.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="26.7630%" y="245" width="0.0249%" height="15" fill="rgb(224,95,51)" fg:x="1074" fg:w="1"/><text x="27.0130%" y="255.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (2 samples, 0.05%)</title><rect x="26.7879%" y="277" width="0.0498%" height="15" fill="rgb(212,188,45)" fg:x="1075" fg:w="2"/><text x="27.0379%" y="287.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (2 samples, 0.05%)</title><rect x="26.7879%" y="261" width="0.0498%" height="15" fill="rgb(223,154,38)" fg:x="1075" fg:w="2"/><text x="27.0379%" y="271.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.05%)</title><rect x="26.7879%" y="245" width="0.0498%" height="15" fill="rgb(251,22,52)" fg:x="1075" fg:w="2"/><text x="27.0379%" y="255.50"></text></g><g><title>rand_chacha::guts::round (18 samples, 0.45%)</title><rect x="26.4640%" y="293" width="0.4485%" height="15" fill="rgb(229,209,22)" fg:x="1062" fg:w="18"/><text x="26.7140%" y="303.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (3 samples, 0.07%)</title><rect x="26.8378%" y="277" width="0.0748%" height="15" fill="rgb(234,138,34)" fg:x="1077" fg:w="3"/><text x="27.0878%" y="287.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (3 samples, 0.07%)</title><rect x="26.8378%" y="261" width="0.0748%" height="15" fill="rgb(212,95,11)" fg:x="1077" fg:w="3"/><text x="27.0878%" y="271.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (3 samples, 0.07%)</title><rect x="26.8378%" y="245" width="0.0748%" height="15" fill="rgb(240,179,47)" fg:x="1077" fg:w="3"/><text x="27.0878%" y="255.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (25 samples, 0.62%)</title><rect x="26.3394%" y="373" width="0.6230%" height="15" fill="rgb(240,163,11)" fg:x="1057" fg:w="25"/><text x="26.5894%" y="383.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (25 samples, 0.62%)</title><rect x="26.3394%" y="357" width="0.6230%" height="15" fill="rgb(236,37,12)" fg:x="1057" fg:w="25"/><text x="26.5894%" y="367.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (25 samples, 0.62%)</title><rect x="26.3394%" y="341" width="0.6230%" height="15" fill="rgb(232,164,16)" fg:x="1057" fg:w="25"/><text x="26.5894%" y="351.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (25 samples, 0.62%)</title><rect x="26.3394%" y="325" width="0.6230%" height="15" fill="rgb(244,205,15)" fg:x="1057" fg:w="25"/><text x="26.5894%" y="335.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (25 samples, 0.62%)</title><rect x="26.3394%" y="309" width="0.6230%" height="15" fill="rgb(223,117,47)" fg:x="1057" fg:w="25"/><text x="26.5894%" y="319.50"></text></g><g><title>rand_chacha::guts::undiagonalize (2 samples, 0.05%)</title><rect x="26.9125%" y="293" width="0.0498%" height="15" fill="rgb(244,107,35)" fg:x="1080" fg:w="2"/><text x="27.1625%" y="303.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (2 samples, 0.05%)</title><rect x="26.9125%" y="277" width="0.0498%" height="15" fill="rgb(205,140,8)" fg:x="1080" fg:w="2"/><text x="27.1625%" y="287.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (2 samples, 0.05%)</title><rect x="26.9125%" y="261" width="0.0498%" height="15" fill="rgb(228,84,46)" fg:x="1080" fg:w="2"/><text x="27.1625%" y="271.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.05%)</title><rect x="26.9125%" y="245" width="0.0498%" height="15" fill="rgb(254,188,9)" fg:x="1080" fg:w="2"/><text x="27.1625%" y="255.50"></text></g><g><title>rand::rng::Rng::gen (51 samples, 1.27%)</title><rect x="25.7164%" y="485" width="1.2709%" height="15" fill="rgb(206,112,54)" fg:x="1032" fg:w="51"/><text x="25.9664%" y="495.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;usize&gt; for rand::distributions::Standard&gt;::sample (51 samples, 1.27%)</title><rect x="25.7164%" y="469" width="1.2709%" height="15" fill="rgb(216,84,49)" fg:x="1032" fg:w="51"/><text x="25.9664%" y="479.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (51 samples, 1.27%)</title><rect x="25.7164%" y="453" width="1.2709%" height="15" fill="rgb(214,194,35)" fg:x="1032" fg:w="51"/><text x="25.9664%" y="463.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (51 samples, 1.27%)</title><rect x="25.7164%" y="437" width="1.2709%" height="15" fill="rgb(249,28,3)" fg:x="1032" fg:w="51"/><text x="25.9664%" y="447.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (51 samples, 1.27%)</title><rect x="25.7164%" y="421" width="1.2709%" height="15" fill="rgb(222,56,52)" fg:x="1032" fg:w="51"/><text x="25.9664%" y="431.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (26 samples, 0.65%)</title><rect x="26.3394%" y="405" width="0.6479%" height="15" fill="rgb(245,217,50)" fg:x="1057" fg:w="26"/><text x="26.5894%" y="415.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (26 samples, 0.65%)</title><rect x="26.3394%" y="389" width="0.6479%" height="15" fill="rgb(213,201,24)" fg:x="1057" fg:w="26"/><text x="26.5894%" y="399.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (1 samples, 0.02%)</title><rect x="26.9624%" y="373" width="0.0249%" height="15" fill="rgb(248,116,28)" fg:x="1082" fg:w="1"/><text x="27.2124%" y="383.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (1 samples, 0.02%)</title><rect x="26.9624%" y="357" width="0.0249%" height="15" fill="rgb(219,72,43)" fg:x="1082" fg:w="1"/><text x="27.2124%" y="367.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (1 samples, 0.02%)</title><rect x="26.9624%" y="341" width="0.0249%" height="15" fill="rgb(209,138,14)" fg:x="1082" fg:w="1"/><text x="27.2124%" y="351.50"></text></g><g><title>rand_chacha::guts::round (1 samples, 0.02%)</title><rect x="26.9624%" y="325" width="0.0249%" height="15" fill="rgb(222,18,33)" fg:x="1082" fg:w="1"/><text x="27.2124%" y="335.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.02%)</title><rect x="26.9624%" y="309" width="0.0249%" height="15" fill="rgb(213,199,7)" fg:x="1082" fg:w="1"/><text x="27.2124%" y="319.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.02%)</title><rect x="26.9624%" y="293" width="0.0249%" height="15" fill="rgb(250,110,10)" fg:x="1082" fg:w="1"/><text x="27.2124%" y="303.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (1 samples, 0.02%)</title><rect x="26.9624%" y="277" width="0.0249%" height="15" fill="rgb(248,123,6)" fg:x="1082" fg:w="1"/><text x="27.2124%" y="287.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="26.9624%" y="261" width="0.0249%" height="15" fill="rgb(206,91,31)" fg:x="1082" fg:w="1"/><text x="27.2124%" y="271.50"></text></g><g><title>montecarlo::state::State::off_diagonal_update (357 samples, 8.90%)</title><rect x="18.1660%" y="565" width="8.8961%" height="15" fill="rgb(211,154,13)" fg:x="729" fg:w="357"/><text x="18.4160%" y="575.50">montecarlo::s..</text></g><g><title>rand::rng::Rng::gen_range (74 samples, 1.84%)</title><rect x="25.2180%" y="549" width="1.8440%" height="15" fill="rgb(225,148,7)" fg:x="1012" fg:w="74"/><text x="25.4680%" y="559.50">r..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (73 samples, 1.82%)</title><rect x="25.2430%" y="533" width="1.8191%" height="15" fill="rgb(220,160,43)" fg:x="1013" fg:w="73"/><text x="25.4930%" y="543.50">&lt;..</text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (73 samples, 1.82%)</title><rect x="25.2430%" y="517" width="1.8191%" height="15" fill="rgb(213,52,39)" fg:x="1013" fg:w="73"/><text x="25.4930%" y="527.50">&lt;..</text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (73 samples, 1.82%)</title><rect x="25.2430%" y="501" width="1.8191%" height="15" fill="rgb(243,137,7)" fg:x="1013" fg:w="73"/><text x="25.4930%" y="511.50">&lt;..</text></g><g><title>rand::rng::Rng::gen_range (3 samples, 0.07%)</title><rect x="26.9873%" y="485" width="0.0748%" height="15" fill="rgb(230,79,13)" fg:x="1083" fg:w="3"/><text x="27.2373%" y="495.50"></text></g><g><title>&lt;montecarlo::state::Operator as core::clone::Clone&gt;::clone (5 samples, 0.12%)</title><rect x="44.0817%" y="517" width="0.1246%" height="15" fill="rgb(247,105,23)" fg:x="1769" fg:w="5"/><text x="44.3317%" y="527.50"></text></g><g><title>&lt;montecarlo::latice::Edge as core::clone::Clone&gt;::clone (5 samples, 0.12%)</title><rect x="44.0817%" y="501" width="0.1246%" height="15" fill="rgb(223,179,41)" fg:x="1769" fg:w="5"/><text x="44.3317%" y="511.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (56 samples, 1.40%)</title><rect x="42.8358%" y="533" width="1.3955%" height="15" fill="rgb(218,9,34)" fg:x="1719" fg:w="56"/><text x="43.0858%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="44.2063%" y="517" width="0.0249%" height="15" fill="rgb(222,106,8)" fg:x="1774" fg:w="1"/><text x="44.4563%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="44.2063%" y="501" width="0.0249%" height="15" fill="rgb(211,220,0)" fg:x="1774" fg:w="1"/><text x="44.4563%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="44.2063%" y="485" width="0.0249%" height="15" fill="rgb(229,52,16)" fg:x="1774" fg:w="1"/><text x="44.4563%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="44.2063%" y="469" width="0.0249%" height="15" fill="rgb(212,155,18)" fg:x="1774" fg:w="1"/><text x="44.4563%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="44.2063%" y="453" width="0.0249%" height="15" fill="rgb(242,21,14)" fg:x="1774" fg:w="1"/><text x="44.4563%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="44.2063%" y="437" width="0.0249%" height="15" fill="rgb(222,19,48)" fg:x="1774" fg:w="1"/><text x="44.4563%" y="447.50"></text></g><g><title>&lt;id_collections::id_vec::IdVec&lt;I,T&gt; as core::ops::index::Index&lt;J&gt;&gt;::index (26 samples, 0.65%)</title><rect x="44.2312%" y="533" width="0.6479%" height="15" fill="rgb(232,45,27)" fg:x="1775" fg:w="26"/><text x="44.4812%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (26 samples, 0.65%)</title><rect x="44.2312%" y="517" width="0.6479%" height="15" fill="rgb(249,103,42)" fg:x="1775" fg:w="26"/><text x="44.4812%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (26 samples, 0.65%)</title><rect x="44.2312%" y="501" width="0.6479%" height="15" fill="rgb(246,81,33)" fg:x="1775" fg:w="26"/><text x="44.4812%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (26 samples, 0.65%)</title><rect x="44.2312%" y="485" width="0.6479%" height="15" fill="rgb(252,33,42)" fg:x="1775" fg:w="26"/><text x="44.4812%" y="495.50"></text></g><g><title>&lt;id_collections::id_vec::IdVec&lt;I,T&gt; as core::ops::index::IndexMut&lt;J&gt;&gt;::index_mut (87 samples, 2.17%)</title><rect x="44.8791%" y="533" width="2.1680%" height="15" fill="rgb(209,212,41)" fg:x="1801" fg:w="87"/><text x="45.1291%" y="543.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (87 samples, 2.17%)</title><rect x="44.8791%" y="517" width="2.1680%" height="15" fill="rgb(207,154,6)" fg:x="1801" fg:w="87"/><text x="45.1291%" y="527.50">&lt;..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (87 samples, 2.17%)</title><rect x="44.8791%" y="501" width="2.1680%" height="15" fill="rgb(223,64,47)" fg:x="1801" fg:w="87"/><text x="45.1291%" y="511.50">c..</text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (87 samples, 2.17%)</title><rect x="44.8791%" y="485" width="2.1680%" height="15" fill="rgb(211,161,38)" fg:x="1801" fg:w="87"/><text x="45.1291%" y="495.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.10%)</title><rect x="47.0471%" y="437" width="0.0997%" height="15" fill="rgb(219,138,40)" fg:x="1888" fg:w="4"/><text x="47.2971%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.10%)</title><rect x="47.0471%" y="421" width="0.0997%" height="15" fill="rgb(241,228,46)" fg:x="1888" fg:w="4"/><text x="47.2971%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.10%)</title><rect x="47.0471%" y="405" width="0.0997%" height="15" fill="rgb(223,209,38)" fg:x="1888" fg:w="4"/><text x="47.2971%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.10%)</title><rect x="47.0471%" y="389" width="0.0997%" height="15" fill="rgb(236,164,45)" fg:x="1888" fg:w="4"/><text x="47.2971%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.10%)</title><rect x="47.0471%" y="373" width="0.0997%" height="15" fill="rgb(231,15,5)" fg:x="1888" fg:w="4"/><text x="47.2971%" y="383.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.10%)</title><rect x="47.0471%" y="357" width="0.0997%" height="15" fill="rgb(252,35,15)" fg:x="1888" fg:w="4"/><text x="47.2971%" y="367.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.10%)</title><rect x="47.0471%" y="341" width="0.0997%" height="15" fill="rgb(248,181,18)" fg:x="1888" fg:w="4"/><text x="47.2971%" y="351.50"></text></g><g><title>tcache_get (2 samples, 0.05%)</title><rect x="47.0969%" y="325" width="0.0498%" height="15" fill="rgb(233,39,42)" fg:x="1890" fg:w="2"/><text x="47.3469%" y="335.50"></text></g><g><title>&lt;montecarlo::latice::Bipartite_Id_Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.12%)</title><rect x="47.0471%" y="533" width="0.1246%" height="15" fill="rgb(238,110,33)" fg:x="1888" fg:w="5"/><text x="47.2971%" y="543.50"></text></g><g><title>&lt;id_collections::id_vec::IdVec&lt;I,T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.12%)</title><rect x="47.0471%" y="517" width="0.1246%" height="15" fill="rgb(233,195,10)" fg:x="1888" fg:w="5"/><text x="47.2971%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.12%)</title><rect x="47.0471%" y="501" width="0.1246%" height="15" fill="rgb(254,105,3)" fg:x="1888" fg:w="5"/><text x="47.2971%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.12%)</title><rect x="47.0471%" y="485" width="0.1246%" height="15" fill="rgb(221,225,9)" fg:x="1888" fg:w="5"/><text x="47.2971%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.12%)</title><rect x="47.0471%" y="469" width="0.1246%" height="15" fill="rgb(224,227,45)" fg:x="1888" fg:w="5"/><text x="47.2971%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.12%)</title><rect x="47.0471%" y="453" width="0.1246%" height="15" fill="rgb(229,198,43)" fg:x="1888" fg:w="5"/><text x="47.2971%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.02%)</title><rect x="47.1468%" y="437" width="0.0249%" height="15" fill="rgb(206,209,35)" fg:x="1892" fg:w="1"/><text x="47.3968%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="47.1468%" y="421" width="0.0249%" height="15" fill="rgb(245,195,53)" fg:x="1892" fg:w="1"/><text x="47.3968%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="47.1468%" y="405" width="0.0249%" height="15" fill="rgb(240,92,26)" fg:x="1892" fg:w="1"/><text x="47.3968%" y="415.50"></text></g><g><title>[unknown] (8 samples, 0.20%)</title><rect x="47.1717%" y="533" width="0.1994%" height="15" fill="rgb(207,40,23)" fg:x="1893" fg:w="8"/><text x="47.4217%" y="543.50"></text></g><g><title>[unknown] (7 samples, 0.17%)</title><rect x="47.1966%" y="517" width="0.1744%" height="15" fill="rgb(223,111,35)" fg:x="1894" fg:w="7"/><text x="47.4466%" y="527.50"></text></g><g><title>[unknown] (7 samples, 0.17%)</title><rect x="47.1966%" y="501" width="0.1744%" height="15" fill="rgb(229,147,28)" fg:x="1894" fg:w="7"/><text x="47.4466%" y="511.50"></text></g><g><title>[unknown] (7 samples, 0.17%)</title><rect x="47.1966%" y="485" width="0.1744%" height="15" fill="rgb(211,29,28)" fg:x="1894" fg:w="7"/><text x="47.4466%" y="495.50"></text></g><g><title>[unknown] (7 samples, 0.17%)</title><rect x="47.1966%" y="469" width="0.1744%" height="15" fill="rgb(228,72,33)" fg:x="1894" fg:w="7"/><text x="47.4466%" y="479.50"></text></g><g><title>[unknown] (7 samples, 0.17%)</title><rect x="47.1966%" y="453" width="0.1744%" height="15" fill="rgb(205,214,31)" fg:x="1894" fg:w="7"/><text x="47.4466%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.12%)</title><rect x="47.2464%" y="437" width="0.1246%" height="15" fill="rgb(224,111,15)" fg:x="1896" fg:w="5"/><text x="47.4964%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.12%)</title><rect x="47.2464%" y="421" width="0.1246%" height="15" fill="rgb(253,21,26)" fg:x="1896" fg:w="5"/><text x="47.4964%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.12%)</title><rect x="47.2464%" y="405" width="0.1246%" height="15" fill="rgb(245,139,43)" fg:x="1896" fg:w="5"/><text x="47.4964%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.12%)</title><rect x="47.2464%" y="389" width="0.1246%" height="15" fill="rgb(252,170,7)" fg:x="1896" fg:w="5"/><text x="47.4964%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.12%)</title><rect x="47.2464%" y="373" width="0.1246%" height="15" fill="rgb(231,118,14)" fg:x="1896" fg:w="5"/><text x="47.4964%" y="383.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.02%)</title><rect x="49.4144%" y="501" width="0.0249%" height="15" fill="rgb(238,83,0)" fg:x="1983" fg:w="1"/><text x="49.6644%" y="511.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.02%)</title><rect x="49.4144%" y="485" width="0.0249%" height="15" fill="rgb(221,39,39)" fg:x="1983" fg:w="1"/><text x="49.6644%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (198 samples, 4.93%)</title><rect x="47.3710%" y="517" width="4.9340%" height="15" fill="rgb(222,119,46)" fg:x="1901" fg:w="198"/><text x="47.6210%" y="527.50">&lt;core:..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (115 samples, 2.87%)</title><rect x="49.4393%" y="501" width="2.8657%" height="15" fill="rgb(222,165,49)" fg:x="1984" fg:w="115"/><text x="49.6893%" y="511.50">co..</text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="52.2801%" y="485" width="0.0249%" height="15" fill="rgb(219,113,52)" fg:x="2098" fg:w="1"/><text x="52.5301%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="52.2801%" y="469" width="0.0249%" height="15" fill="rgb(214,7,15)" fg:x="2098" fg:w="1"/><text x="52.5301%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="52.2801%" y="453" width="0.0249%" height="15" fill="rgb(235,32,4)" fg:x="2098" fg:w="1"/><text x="52.5301%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="52.2801%" y="437" width="0.0249%" height="15" fill="rgb(238,90,54)" fg:x="2098" fg:w="1"/><text x="52.5301%" y="447.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (206 samples, 5.13%)</title><rect x="47.3710%" y="533" width="5.1333%" height="15" fill="rgb(213,208,19)" fg:x="1901" fg:w="206"/><text x="47.6210%" y="543.50">core::..</text></g><g><title>montecarlo::state::State::diagonal_update (8 samples, 0.20%)</title><rect x="52.3050%" y="517" width="0.1994%" height="15" fill="rgb(233,156,4)" fg:x="2099" fg:w="8"/><text x="52.5550%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (41 samples, 1.02%)</title><rect x="52.5044%" y="533" width="1.0217%" height="15" fill="rgb(207,194,5)" fg:x="2107" fg:w="41"/><text x="52.7544%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (23 samples, 0.57%)</title><rect x="53.5260%" y="533" width="0.5731%" height="15" fill="rgb(206,111,30)" fg:x="2148" fg:w="23"/><text x="53.7760%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;id_collections::id_vec::IdVec&lt;montecarlo::latice::Even_Site_Id,bool&gt;&gt; (2 samples, 0.05%)</title><rect x="54.0992%" y="517" width="0.0498%" height="15" fill="rgb(243,70,54)" fg:x="2171" fg:w="2"/><text x="54.3492%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (2 samples, 0.05%)</title><rect x="54.0992%" y="501" width="0.0498%" height="15" fill="rgb(242,28,8)" fg:x="2171" fg:w="2"/><text x="54.3492%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (2 samples, 0.05%)</title><rect x="54.0992%" y="485" width="0.0498%" height="15" fill="rgb(219,106,18)" fg:x="2171" fg:w="2"/><text x="54.3492%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="54.0992%" y="469" width="0.0498%" height="15" fill="rgb(244,222,10)" fg:x="2171" fg:w="2"/><text x="54.3492%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.05%)</title><rect x="54.0992%" y="453" width="0.0498%" height="15" fill="rgb(236,179,52)" fg:x="2171" fg:w="2"/><text x="54.3492%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.05%)</title><rect x="54.0992%" y="437" width="0.0498%" height="15" fill="rgb(213,23,39)" fg:x="2171" fg:w="2"/><text x="54.3492%" y="447.50"></text></g><g><title>__GI___libc_free (2 samples, 0.05%)</title><rect x="54.0992%" y="421" width="0.0498%" height="15" fill="rgb(238,48,10)" fg:x="2171" fg:w="2"/><text x="54.3492%" y="431.50"></text></g><g><title>_int_free (2 samples, 0.05%)</title><rect x="54.0992%" y="405" width="0.0498%" height="15" fill="rgb(251,196,23)" fg:x="2171" fg:w="2"/><text x="54.3492%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;montecarlo::latice::Bipartite_Id_Vec&lt;bool&gt;&gt; (4 samples, 0.10%)</title><rect x="54.0992%" y="533" width="0.0997%" height="15" fill="rgb(250,152,24)" fg:x="2171" fg:w="4"/><text x="54.3492%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;id_collections::id_vec::IdVec&lt;montecarlo::latice::Odd_Site_Id,bool&gt;&gt; (2 samples, 0.05%)</title><rect x="54.1490%" y="517" width="0.0498%" height="15" fill="rgb(209,150,17)" fg:x="2173" fg:w="2"/><text x="54.3990%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (2 samples, 0.05%)</title><rect x="54.1490%" y="501" width="0.0498%" height="15" fill="rgb(234,202,34)" fg:x="2173" fg:w="2"/><text x="54.3990%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (2 samples, 0.05%)</title><rect x="54.1490%" y="485" width="0.0498%" height="15" fill="rgb(253,148,53)" fg:x="2173" fg:w="2"/><text x="54.3990%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="54.1490%" y="469" width="0.0498%" height="15" fill="rgb(218,129,16)" fg:x="2173" fg:w="2"/><text x="54.3990%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.05%)</title><rect x="54.1490%" y="453" width="0.0498%" height="15" fill="rgb(216,85,19)" fg:x="2173" fg:w="2"/><text x="54.3990%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.05%)</title><rect x="54.1490%" y="437" width="0.0498%" height="15" fill="rgb(235,228,7)" fg:x="2173" fg:w="2"/><text x="54.3990%" y="447.50"></text></g><g><title>__GI___libc_free (2 samples, 0.05%)</title><rect x="54.1490%" y="421" width="0.0498%" height="15" fill="rgb(245,175,0)" fg:x="2173" fg:w="2"/><text x="54.3990%" y="431.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="54.1739%" y="405" width="0.0249%" height="15" fill="rgb(208,168,36)" fg:x="2174" fg:w="1"/><text x="54.4239%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;id_collections::id_vec::IdVec&lt;montecarlo::latice::Even_Site_Id,montecarlo::state::OperatorId&gt;&gt; (4 samples, 0.10%)</title><rect x="54.1989%" y="517" width="0.0997%" height="15" fill="rgb(246,171,24)" fg:x="2175" fg:w="4"/><text x="54.4489%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;montecarlo::state::OperatorId&gt;&gt; (4 samples, 0.10%)</title><rect x="54.1989%" y="501" width="0.0997%" height="15" fill="rgb(215,142,24)" fg:x="2175" fg:w="4"/><text x="54.4489%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;montecarlo::state::OperatorId&gt;&gt; (4 samples, 0.10%)</title><rect x="54.1989%" y="485" width="0.0997%" height="15" fill="rgb(250,187,7)" fg:x="2175" fg:w="4"/><text x="54.4489%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.10%)</title><rect x="54.1989%" y="469" width="0.0997%" height="15" fill="rgb(228,66,33)" fg:x="2175" fg:w="4"/><text x="54.4489%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.10%)</title><rect x="54.1989%" y="453" width="0.0997%" height="15" fill="rgb(234,215,21)" fg:x="2175" fg:w="4"/><text x="54.4489%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.10%)</title><rect x="54.1989%" y="437" width="0.0997%" height="15" fill="rgb(222,191,20)" fg:x="2175" fg:w="4"/><text x="54.4489%" y="447.50"></text></g><g><title>__GI___libc_free (4 samples, 0.10%)</title><rect x="54.1989%" y="421" width="0.0997%" height="15" fill="rgb(245,79,54)" fg:x="2175" fg:w="4"/><text x="54.4489%" y="431.50"></text></g><g><title>_int_free (2 samples, 0.05%)</title><rect x="54.2487%" y="405" width="0.0498%" height="15" fill="rgb(240,10,37)" fg:x="2177" fg:w="2"/><text x="54.4987%" y="415.50"></text></g><g><title>tcache_put (1 samples, 0.02%)</title><rect x="54.2736%" y="389" width="0.0249%" height="15" fill="rgb(214,192,32)" fg:x="2178" fg:w="1"/><text x="54.5236%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;montecarlo::latice::Bipartite_Id_Vec&lt;montecarlo::state::OperatorId&gt;&gt; (7 samples, 0.17%)</title><rect x="54.1989%" y="533" width="0.1744%" height="15" fill="rgb(209,36,54)" fg:x="2175" fg:w="7"/><text x="54.4489%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;id_collections::id_vec::IdVec&lt;montecarlo::latice::Odd_Site_Id,montecarlo::state::OperatorId&gt;&gt; (3 samples, 0.07%)</title><rect x="54.2985%" y="517" width="0.0748%" height="15" fill="rgb(220,10,11)" fg:x="2179" fg:w="3"/><text x="54.5485%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;montecarlo::state::OperatorId&gt;&gt; (3 samples, 0.07%)</title><rect x="54.2985%" y="501" width="0.0748%" height="15" fill="rgb(221,106,17)" fg:x="2179" fg:w="3"/><text x="54.5485%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;montecarlo::state::OperatorId&gt;&gt; (3 samples, 0.07%)</title><rect x="54.2985%" y="485" width="0.0748%" height="15" fill="rgb(251,142,44)" fg:x="2179" fg:w="3"/><text x="54.5485%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.07%)</title><rect x="54.2985%" y="469" width="0.0748%" height="15" fill="rgb(238,13,15)" fg:x="2179" fg:w="3"/><text x="54.5485%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.07%)</title><rect x="54.2985%" y="453" width="0.0748%" height="15" fill="rgb(208,107,27)" fg:x="2179" fg:w="3"/><text x="54.5485%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.07%)</title><rect x="54.2985%" y="437" width="0.0748%" height="15" fill="rgb(205,136,37)" fg:x="2179" fg:w="3"/><text x="54.5485%" y="447.50"></text></g><g><title>__GI___libc_free (3 samples, 0.07%)</title><rect x="54.2985%" y="421" width="0.0748%" height="15" fill="rgb(250,205,27)" fg:x="2179" fg:w="3"/><text x="54.5485%" y="431.50"></text></g><g><title>_int_free (3 samples, 0.07%)</title><rect x="54.2985%" y="405" width="0.0748%" height="15" fill="rgb(210,80,43)" fg:x="2179" fg:w="3"/><text x="54.5485%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.07%)</title><rect x="54.3733%" y="501" width="0.0748%" height="15" fill="rgb(247,160,36)" fg:x="2182" fg:w="3"/><text x="54.6233%" y="511.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="54.5228%" y="421" width="0.0249%" height="15" fill="rgb(234,13,49)" fg:x="2188" fg:w="1"/><text x="54.7728%" y="431.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.10%)</title><rect x="54.4730%" y="437" width="0.0997%" height="15" fill="rgb(234,122,0)" fg:x="2186" fg:w="4"/><text x="54.7230%" y="447.50"></text></g><g><title>tcache_get (1 samples, 0.02%)</title><rect x="54.5477%" y="421" width="0.0249%" height="15" fill="rgb(207,146,38)" fg:x="2189" fg:w="1"/><text x="54.7977%" y="431.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hd28e0cdf38b391c3E.llvm.17534386512340449806 (5 samples, 0.12%)</title><rect x="54.4730%" y="453" width="0.1246%" height="15" fill="rgb(207,177,25)" fg:x="2186" fg:w="5"/><text x="54.7230%" y="463.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="54.5726%" y="437" width="0.0249%" height="15" fill="rgb(211,178,42)" fg:x="2190" fg:w="1"/><text x="54.8226%" y="447.50"></text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="54.5976%" y="453" width="0.0249%" height="15" fill="rgb(230,69,54)" fg:x="2191" fg:w="1"/><text x="54.8476%" y="463.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="54.5976%" y="437" width="0.0249%" height="15" fill="rgb(214,135,41)" fg:x="2191" fg:w="1"/><text x="54.8476%" y="447.50"></text></g><g><title>id_collections::id_vec::IdVec&lt;I,T&gt;::push (1 samples, 0.02%)</title><rect x="54.5976%" y="421" width="0.0249%" height="15" fill="rgb(237,67,25)" fg:x="2191" fg:w="1"/><text x="54.8476%" y="431.50"></text></g><g><title>id_collections::id_vec::IdVec&lt;I,T&gt;::push (11 samples, 0.27%)</title><rect x="54.3733%" y="533" width="0.2741%" height="15" fill="rgb(222,189,50)" fg:x="2182" fg:w="11"/><text x="54.6233%" y="543.50"></text></g><g><title>id_collections::id_vec::IdVec&lt;I,T&gt;::try_push (11 samples, 0.27%)</title><rect x="54.3733%" y="517" width="0.2741%" height="15" fill="rgb(245,148,34)" fg:x="2182" fg:w="11"/><text x="54.6233%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::try_reserve (8 samples, 0.20%)</title><rect x="54.4480%" y="501" width="0.1994%" height="15" fill="rgb(222,29,6)" fg:x="2185" fg:w="8"/><text x="54.6980%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (8 samples, 0.20%)</title><rect x="54.4480%" y="485" width="0.1994%" height="15" fill="rgb(221,189,43)" fg:x="2185" fg:w="8"/><text x="54.6980%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.17%)</title><rect x="54.4730%" y="469" width="0.1744%" height="15" fill="rgb(207,36,27)" fg:x="2186" fg:w="7"/><text x="54.7230%" y="479.50"></text></g><g><title>id_collections::id_vec::IdVec&lt;I,T&gt;::push (1 samples, 0.02%)</title><rect x="54.6225%" y="453" width="0.0249%" height="15" fill="rgb(217,90,24)" fg:x="2192" fg:w="1"/><text x="54.8725%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.02%)</title><rect x="55.7688%" y="517" width="0.0249%" height="15" fill="rgb(224,66,35)" fg:x="2238" fg:w="1"/><text x="56.0188%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="55.7688%" y="501" width="0.0249%" height="15" fill="rgb(221,13,50)" fg:x="2238" fg:w="1"/><text x="56.0188%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="55.7688%" y="485" width="0.0249%" height="15" fill="rgb(236,68,49)" fg:x="2238" fg:w="1"/><text x="56.0188%" y="495.50"></text></g><g><title>&lt;montecarlo::latice::Edge as core::clone::Clone&gt;::clone (55 samples, 1.37%)</title><rect x="55.7937%" y="517" width="1.3705%" height="15" fill="rgb(229,146,28)" fg:x="2239" fg:w="55"/><text x="56.0437%" y="527.50"></text></g><g><title>&lt;usize as rand::distributions::utils::WideningMultiply&gt;::wmul (7 samples, 0.17%)</title><rect x="58.3603%" y="469" width="0.1744%" height="15" fill="rgb(225,31,38)" fg:x="2342" fg:w="7"/><text x="58.6103%" y="479.50"></text></g><g><title>&lt;u64 as rand::distributions::utils::WideningMultiply&gt;::wmul (7 samples, 0.17%)</title><rect x="58.3603%" y="453" width="0.1744%" height="15" fill="rgb(250,208,3)" fg:x="2342" fg:w="7"/><text x="58.6103%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="58.5348%" y="469" width="0.0249%" height="15" fill="rgb(246,54,23)" fg:x="2349" fg:w="1"/><text x="58.7848%" y="479.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64::_{{closure}} (11 samples, 0.27%)</title><rect x="59.2574%" y="389" width="0.2741%" height="15" fill="rgb(243,76,11)" fg:x="2378" fg:w="11"/><text x="59.5074%" y="399.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt; as ppv_lite86::types::StoreBytes&gt;::write_le (2 samples, 0.05%)</title><rect x="59.5814%" y="277" width="0.0498%" height="15" fill="rgb(245,21,50)" fg:x="2391" fg:w="2"/><text x="59.8314%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_storeu_si128 (2 samples, 0.05%)</title><rect x="59.5814%" y="261" width="0.0498%" height="15" fill="rgb(228,9,43)" fg:x="2391" fg:w="2"/><text x="59.8314%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (2 samples, 0.05%)</title><rect x="59.5814%" y="245" width="0.0498%" height="15" fill="rgb(208,100,47)" fg:x="2391" fg:w="2"/><text x="59.8314%" y="255.50"></text></g><g><title>core::ptr::write_unaligned (2 samples, 0.05%)</title><rect x="59.5814%" y="229" width="0.0498%" height="15" fill="rgb(232,26,8)" fg:x="2391" fg:w="2"/><text x="59.8314%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="59.5814%" y="213" width="0.0498%" height="15" fill="rgb(216,166,38)" fg:x="2391" fg:w="2"/><text x="59.8314%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,ppv_lite86::x86_64::YesS4,NI&gt; as ppv_lite86::types::Vec4&lt;u32&gt;&gt;::insert (1 samples, 0.02%)</title><rect x="59.6312%" y="277" width="0.0249%" height="15" fill="rgb(251,202,51)" fg:x="2393" fg:w="1"/><text x="59.8812%" y="287.50"></text></g><g><title>core::core_arch::x86::sse41::_mm_insert_epi32 (1 samples, 0.02%)</title><rect x="59.6312%" y="261" width="0.0249%" height="15" fill="rgb(254,216,34)" fg:x="2393" fg:w="1"/><text x="59.8812%" y="271.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="59.6561%" y="277" width="0.0249%" height="15" fill="rgb(251,32,27)" fg:x="2394" fg:w="1"/><text x="59.9061%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="59.6561%" y="261" width="0.0249%" height="15" fill="rgb(208,127,28)" fg:x="2394" fg:w="1"/><text x="59.9061%" y="271.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (2 samples, 0.05%)</title><rect x="59.6810%" y="261" width="0.0498%" height="15" fill="rgb(224,137,22)" fg:x="2395" fg:w="2"/><text x="59.9310%" y="271.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (2 samples, 0.05%)</title><rect x="59.6810%" y="245" width="0.0498%" height="15" fill="rgb(254,70,32)" fg:x="2395" fg:w="2"/><text x="59.9310%" y="255.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.05%)</title><rect x="59.6810%" y="229" width="0.0498%" height="15" fill="rgb(229,75,37)" fg:x="2395" fg:w="2"/><text x="59.9310%" y="239.50"></text></g><g><title>rand_chacha::guts::diagonalize (3 samples, 0.07%)</title><rect x="59.6810%" y="277" width="0.0748%" height="15" fill="rgb(252,64,23)" fg:x="2395" fg:w="3"/><text x="59.9310%" y="287.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (1 samples, 0.02%)</title><rect x="59.7309%" y="261" width="0.0249%" height="15" fill="rgb(232,162,48)" fg:x="2397" fg:w="1"/><text x="59.9809%" y="271.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (1 samples, 0.02%)</title><rect x="59.7309%" y="245" width="0.0249%" height="15" fill="rgb(246,160,12)" fg:x="2397" fg:w="1"/><text x="59.9809%" y="255.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="59.7309%" y="229" width="0.0249%" height="15" fill="rgb(247,166,0)" fg:x="2397" fg:w="1"/><text x="59.9809%" y="239.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (9 samples, 0.22%)</title><rect x="59.7558%" y="261" width="0.2243%" height="15" fill="rgb(249,219,21)" fg:x="2398" fg:w="9"/><text x="60.0058%" y="271.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (9 samples, 0.22%)</title><rect x="59.7558%" y="245" width="0.2243%" height="15" fill="rgb(205,209,3)" fg:x="2398" fg:w="9"/><text x="60.0058%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (9 samples, 0.22%)</title><rect x="59.7558%" y="229" width="0.2243%" height="15" fill="rgb(243,44,1)" fg:x="2398" fg:w="9"/><text x="60.0058%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (9 samples, 0.22%)</title><rect x="59.7558%" y="213" width="0.2243%" height="15" fill="rgb(206,159,16)" fg:x="2398" fg:w="9"/><text x="60.0058%" y="223.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::bit::BitXor&gt;::bitxor (9 samples, 0.22%)</title><rect x="59.9801%" y="261" width="0.2243%" height="15" fill="rgb(244,77,30)" fg:x="2407" fg:w="9"/><text x="60.2301%" y="271.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::bit::BitXor&gt;::bitxor (9 samples, 0.22%)</title><rect x="59.9801%" y="245" width="0.2243%" height="15" fill="rgb(218,69,12)" fg:x="2407" fg:w="9"/><text x="60.2301%" y="255.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (9 samples, 0.22%)</title><rect x="59.9801%" y="229" width="0.2243%" height="15" fill="rgb(212,87,7)" fg:x="2407" fg:w="9"/><text x="60.2301%" y="239.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (8 samples, 0.20%)</title><rect x="60.2043%" y="261" width="0.1994%" height="15" fill="rgb(245,114,25)" fg:x="2416" fg:w="8"/><text x="60.4543%" y="271.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (8 samples, 0.20%)</title><rect x="60.2043%" y="245" width="0.1994%" height="15" fill="rgb(210,61,42)" fg:x="2416" fg:w="8"/><text x="60.4543%" y="255.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (8 samples, 0.20%)</title><rect x="60.2043%" y="229" width="0.1994%" height="15" fill="rgb(211,52,33)" fg:x="2416" fg:w="8"/><text x="60.4543%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (14 samples, 0.35%)</title><rect x="60.4037%" y="229" width="0.3489%" height="15" fill="rgb(234,58,33)" fg:x="2424" fg:w="14"/><text x="60.6537%" y="239.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (15 samples, 0.37%)</title><rect x="60.4037%" y="261" width="0.3738%" height="15" fill="rgb(220,115,36)" fg:x="2424" fg:w="15"/><text x="60.6537%" y="271.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (15 samples, 0.37%)</title><rect x="60.4037%" y="245" width="0.3738%" height="15" fill="rgb(243,153,54)" fg:x="2424" fg:w="15"/><text x="60.6537%" y="255.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="60.7526%" y="229" width="0.0249%" height="15" fill="rgb(251,47,18)" fg:x="2438" fg:w="1"/><text x="61.0026%" y="239.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (8 samples, 0.20%)</title><rect x="60.7775%" y="261" width="0.1994%" height="15" fill="rgb(242,102,42)" fg:x="2439" fg:w="8"/><text x="61.0275%" y="271.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (8 samples, 0.20%)</title><rect x="60.7775%" y="245" width="0.1994%" height="15" fill="rgb(234,31,38)" fg:x="2439" fg:w="8"/><text x="61.0275%" y="255.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (8 samples, 0.20%)</title><rect x="60.7775%" y="229" width="0.1994%" height="15" fill="rgb(221,117,51)" fg:x="2439" fg:w="8"/><text x="61.0275%" y="239.50"></text></g><g><title>rand_chacha::guts::round (57 samples, 1.42%)</title><rect x="59.7558%" y="277" width="1.4204%" height="15" fill="rgb(212,20,18)" fg:x="2398" fg:w="57"/><text x="60.0058%" y="287.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (8 samples, 0.20%)</title><rect x="60.9768%" y="261" width="0.1994%" height="15" fill="rgb(245,133,36)" fg:x="2447" fg:w="8"/><text x="61.2268%" y="271.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (8 samples, 0.20%)</title><rect x="60.9768%" y="245" width="0.1994%" height="15" fill="rgb(212,6,19)" fg:x="2447" fg:w="8"/><text x="61.2268%" y="255.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (8 samples, 0.20%)</title><rect x="60.9768%" y="229" width="0.1994%" height="15" fill="rgb(218,1,36)" fg:x="2447" fg:w="8"/><text x="61.2268%" y="239.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (2 samples, 0.05%)</title><rect x="61.1762%" y="261" width="0.0498%" height="15" fill="rgb(246,84,54)" fg:x="2455" fg:w="2"/><text x="61.4262%" y="271.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (2 samples, 0.05%)</title><rect x="61.1762%" y="245" width="0.0498%" height="15" fill="rgb(242,110,6)" fg:x="2455" fg:w="2"/><text x="61.4262%" y="255.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.05%)</title><rect x="61.1762%" y="229" width="0.0498%" height="15" fill="rgb(214,47,5)" fg:x="2455" fg:w="2"/><text x="61.4262%" y="239.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (68 samples, 1.69%)</title><rect x="59.5814%" y="357" width="1.6945%" height="15" fill="rgb(218,159,25)" fg:x="2391" fg:w="68"/><text x="59.8314%" y="367.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (68 samples, 1.69%)</title><rect x="59.5814%" y="341" width="1.6945%" height="15" fill="rgb(215,211,28)" fg:x="2391" fg:w="68"/><text x="59.8314%" y="351.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (68 samples, 1.69%)</title><rect x="59.5814%" y="325" width="1.6945%" height="15" fill="rgb(238,59,32)" fg:x="2391" fg:w="68"/><text x="59.8314%" y="335.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (68 samples, 1.69%)</title><rect x="59.5814%" y="309" width="1.6945%" height="15" fill="rgb(226,82,3)" fg:x="2391" fg:w="68"/><text x="59.8314%" y="319.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (68 samples, 1.69%)</title><rect x="59.5814%" y="293" width="1.6945%" height="15" fill="rgb(240,164,32)" fg:x="2391" fg:w="68"/><text x="59.8314%" y="303.50"></text></g><g><title>rand_chacha::guts::undiagonalize (4 samples, 0.10%)</title><rect x="61.1762%" y="277" width="0.0997%" height="15" fill="rgb(232,46,7)" fg:x="2455" fg:w="4"/><text x="61.4262%" y="287.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (2 samples, 0.05%)</title><rect x="61.2260%" y="261" width="0.0498%" height="15" fill="rgb(229,129,53)" fg:x="2457" fg:w="2"/><text x="61.4760%" y="271.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (2 samples, 0.05%)</title><rect x="61.2260%" y="245" width="0.0498%" height="15" fill="rgb(234,188,29)" fg:x="2457" fg:w="2"/><text x="61.4760%" y="255.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.05%)</title><rect x="61.2260%" y="229" width="0.0498%" height="15" fill="rgb(246,141,4)" fg:x="2457" fg:w="2"/><text x="61.4760%" y="239.50"></text></g><g><title>rand::rng::Rng::gen (110 samples, 2.74%)</title><rect x="58.5597%" y="469" width="2.7411%" height="15" fill="rgb(229,23,39)" fg:x="2350" fg:w="110"/><text x="58.8097%" y="479.50">ra..</text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;usize&gt; for rand::distributions::Standard&gt;::sample (110 samples, 2.74%)</title><rect x="58.5597%" y="453" width="2.7411%" height="15" fill="rgb(206,12,3)" fg:x="2350" fg:w="110"/><text x="58.8097%" y="463.50">ra..</text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (110 samples, 2.74%)</title><rect x="58.5597%" y="437" width="2.7411%" height="15" fill="rgb(252,226,20)" fg:x="2350" fg:w="110"/><text x="58.8097%" y="447.50">&lt;r..</text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (110 samples, 2.74%)</title><rect x="58.5597%" y="421" width="2.7411%" height="15" fill="rgb(216,123,35)" fg:x="2350" fg:w="110"/><text x="58.8097%" y="431.50">&lt;r..</text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (110 samples, 2.74%)</title><rect x="58.5597%" y="405" width="2.7411%" height="15" fill="rgb(212,68,40)" fg:x="2350" fg:w="110"/><text x="58.8097%" y="415.50">&lt;r..</text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (71 samples, 1.77%)</title><rect x="59.5315%" y="389" width="1.7692%" height="15" fill="rgb(254,125,32)" fg:x="2389" fg:w="71"/><text x="59.7815%" y="399.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (71 samples, 1.77%)</title><rect x="59.5315%" y="373" width="1.7692%" height="15" fill="rgb(253,97,22)" fg:x="2389" fg:w="71"/><text x="59.7815%" y="383.50"></text></g><g><title>rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt;::reseed_and_generate (1 samples, 0.02%)</title><rect x="61.2759%" y="357" width="0.0249%" height="15" fill="rgb(241,101,14)" fg:x="2459" fg:w="1"/><text x="61.5259%" y="367.50"></text></g><g><title>rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt;::reseed (1 samples, 0.02%)</title><rect x="61.2759%" y="341" width="0.0249%" height="15" fill="rgb(238,103,29)" fg:x="2459" fg:w="1"/><text x="61.5259%" y="351.50"></text></g><g><title>rand_core::SeedableRng::from_rng (1 samples, 0.02%)</title><rect x="61.2759%" y="325" width="0.0249%" height="15" fill="rgb(233,195,47)" fg:x="2459" fg:w="1"/><text x="61.5259%" y="335.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::try_fill_bytes (1 samples, 0.02%)</title><rect x="61.2759%" y="309" width="0.0249%" height="15" fill="rgb(246,218,30)" fg:x="2459" fg:w="1"/><text x="61.5259%" y="319.50"></text></g><g><title>&lt;rand_core::os::OsRng as rand_core::RngCore&gt;::try_fill_bytes (1 samples, 0.02%)</title><rect x="61.2759%" y="293" width="0.0249%" height="15" fill="rgb(219,145,47)" fg:x="2459" fg:w="1"/><text x="61.5259%" y="303.50"></text></g><g><title>getrandom::getrandom (1 samples, 0.02%)</title><rect x="61.2759%" y="277" width="0.0249%" height="15" fill="rgb(243,12,26)" fg:x="2459" fg:w="1"/><text x="61.5259%" y="287.50"></text></g><g><title>getrandom::getrandom_uninit (1 samples, 0.02%)</title><rect x="61.2759%" y="261" width="0.0249%" height="15" fill="rgb(214,87,16)" fg:x="2459" fg:w="1"/><text x="61.5259%" y="271.50"></text></g><g><title>getrandom::imp::getrandom_inner (1 samples, 0.02%)</title><rect x="61.2759%" y="245" width="0.0249%" height="15" fill="rgb(208,99,42)" fg:x="2459" fg:w="1"/><text x="61.5259%" y="255.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (1 samples, 0.02%)</title><rect x="61.2759%" y="229" width="0.0249%" height="15" fill="rgb(253,99,2)" fg:x="2459" fg:w="1"/><text x="61.5259%" y="239.50"></text></g><g><title>getrandom::imp::getrandom_inner::_{{closure}} (1 samples, 0.02%)</title><rect x="61.2759%" y="213" width="0.0249%" height="15" fill="rgb(220,168,23)" fg:x="2459" fg:w="1"/><text x="61.5259%" y="223.50"></text></g><g><title>getrandom::imp::getrandom (1 samples, 0.02%)</title><rect x="61.2759%" y="197" width="0.0249%" height="15" fill="rgb(242,38,24)" fg:x="2459" fg:w="1"/><text x="61.5259%" y="207.50"></text></g><g><title>syscall (1 samples, 0.02%)</title><rect x="61.2759%" y="181" width="0.0249%" height="15" fill="rgb(225,182,9)" fg:x="2459" fg:w="1"/><text x="61.5259%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="61.2759%" y="165" width="0.0249%" height="15" fill="rgb(243,178,37)" fg:x="2459" fg:w="1"/><text x="61.5259%" y="175.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample (162 samples, 4.04%)</title><rect x="57.4632%" y="485" width="4.0369%" height="15" fill="rgb(232,139,19)" fg:x="2306" fg:w="162"/><text x="57.7132%" y="495.50">&lt;ran..</text></g><g><title>rand::rng::Rng::sample (8 samples, 0.20%)</title><rect x="61.3008%" y="469" width="0.1994%" height="15" fill="rgb(225,201,24)" fg:x="2460" fg:w="8"/><text x="61.5508%" y="479.50"></text></g><g><title>montecarlo::latice::Latice::random_edge (280 samples, 6.98%)</title><rect x="54.6474%" y="533" width="6.9773%" height="15" fill="rgb(221,47,46)" fg:x="2193" fg:w="280"/><text x="54.8974%" y="543.50">montecarl..</text></g><g><title>rand::rng::Rng::sample (179 samples, 4.46%)</title><rect x="57.1642%" y="517" width="4.4605%" height="15" fill="rgb(249,23,13)" fg:x="2294" fg:w="179"/><text x="57.4142%" y="527.50">rand:..</text></g><g><title>&lt;rand::distributions::uniform::Uniform&lt;X&gt; as rand::distributions::distribution::Distribution&lt;X&gt;&gt;::sample (167 samples, 4.16%)</title><rect x="57.4632%" y="501" width="4.1615%" height="15" fill="rgb(219,9,5)" fg:x="2306" fg:w="167"/><text x="57.7132%" y="511.50">&lt;rand..</text></g><g><title>rand::rng::Rng::sample (5 samples, 0.12%)</title><rect x="61.5001%" y="485" width="0.1246%" height="15" fill="rgb(254,171,16)" fg:x="2468" fg:w="5"/><text x="61.7501%" y="495.50"></text></g><g><title>montecarlo::state::State::delete (12 samples, 0.30%)</title><rect x="61.6247%" y="533" width="0.2990%" height="15" fill="rgb(230,171,20)" fg:x="2473" fg:w="12"/><text x="61.8747%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (5 samples, 0.12%)</title><rect x="61.7992%" y="517" width="0.1246%" height="15" fill="rgb(210,71,41)" fg:x="2480" fg:w="5"/><text x="62.0492%" y="527.50"></text></g><g><title>montecarlo::state::State::insert_diag (38 samples, 0.95%)</title><rect x="61.9237%" y="533" width="0.9469%" height="15" fill="rgb(206,173,20)" fg:x="2485" fg:w="38"/><text x="62.1737%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.02%)</title><rect x="62.8458%" y="517" width="0.0249%" height="15" fill="rgb(233,88,34)" fg:x="2522" fg:w="1"/><text x="63.0958%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.02%)</title><rect x="62.8458%" y="501" width="0.0249%" height="15" fill="rgb(223,209,46)" fg:x="2522" fg:w="1"/><text x="63.0958%" y="511.50"></text></g><g><title>&lt;f64 as rand::distributions::utils::FloatSIMDUtils&gt;::cast_from_int (68 samples, 1.69%)</title><rect x="64.0668%" y="501" width="1.6945%" height="15" fill="rgb(250,43,18)" fg:x="2571" fg:w="68"/><text x="64.3168%" y="511.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64::_{{closure}} (38 samples, 0.95%)</title><rect x="67.2066%" y="421" width="0.9469%" height="15" fill="rgb(208,13,10)" fg:x="2697" fg:w="38"/><text x="67.4566%" y="431.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (2 samples, 0.05%)</title><rect x="68.3778%" y="325" width="0.0498%" height="15" fill="rgb(212,200,36)" fg:x="2744" fg:w="2"/><text x="68.6278%" y="335.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt; as core::ops::arith::Add&gt;::add (4 samples, 0.10%)</title><rect x="68.4276%" y="309" width="0.0997%" height="15" fill="rgb(225,90,30)" fg:x="2746" fg:w="4"/><text x="68.6776%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (4 samples, 0.10%)</title><rect x="68.4276%" y="293" width="0.0997%" height="15" fill="rgb(236,182,39)" fg:x="2746" fg:w="4"/><text x="68.6776%" y="303.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt; as ppv_lite86::types::StoreBytes&gt;::write_le (2 samples, 0.05%)</title><rect x="68.5273%" y="309" width="0.0498%" height="15" fill="rgb(212,144,35)" fg:x="2750" fg:w="2"/><text x="68.7773%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_storeu_si128 (2 samples, 0.05%)</title><rect x="68.5273%" y="293" width="0.0498%" height="15" fill="rgb(228,63,44)" fg:x="2750" fg:w="2"/><text x="68.7773%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (2 samples, 0.05%)</title><rect x="68.5273%" y="277" width="0.0498%" height="15" fill="rgb(228,109,6)" fg:x="2750" fg:w="2"/><text x="68.7773%" y="287.50"></text></g><g><title>core::ptr::write_unaligned (2 samples, 0.05%)</title><rect x="68.5273%" y="261" width="0.0498%" height="15" fill="rgb(238,117,24)" fg:x="2750" fg:w="2"/><text x="68.7773%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="68.5273%" y="245" width="0.0498%" height="15" fill="rgb(242,26,26)" fg:x="2750" fg:w="2"/><text x="68.7773%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,ppv_lite86::x86_64::YesS4,NI&gt; as ppv_lite86::types::Vec4&lt;u32&gt;&gt;::insert (5 samples, 0.12%)</title><rect x="68.5771%" y="309" width="0.1246%" height="15" fill="rgb(221,92,48)" fg:x="2752" fg:w="5"/><text x="68.8271%" y="319.50"></text></g><g><title>core::core_arch::x86::sse41::_mm_insert_epi32 (5 samples, 0.12%)</title><rect x="68.5771%" y="293" width="0.1246%" height="15" fill="rgb(209,209,32)" fg:x="2752" fg:w="5"/><text x="68.8271%" y="303.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="68.7017%" y="309" width="0.0249%" height="15" fill="rgb(221,70,22)" fg:x="2757" fg:w="1"/><text x="68.9517%" y="319.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="68.7017%" y="293" width="0.0249%" height="15" fill="rgb(248,145,5)" fg:x="2757" fg:w="1"/><text x="68.9517%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="68.7266%" y="309" width="0.0249%" height="15" fill="rgb(226,116,26)" fg:x="2758" fg:w="1"/><text x="68.9766%" y="319.50"></text></g><g><title>ppv_lite86::x86_64::sse2::avx2::_&lt;impl ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 4]&gt; for ppv_lite86::soft::x2&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt;,ppv_lite86::x86_64::sse2::G0&gt;&gt;::to_lanes (2 samples, 0.05%)</title><rect x="68.7516%" y="309" width="0.0498%" height="15" fill="rgb(244,5,17)" fg:x="2759" fg:w="2"/><text x="69.0016%" y="319.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 2]&gt;&gt;::to_lanes (2 samples, 0.05%)</title><rect x="68.7516%" y="293" width="0.0498%" height="15" fill="rgb(252,159,33)" fg:x="2759" fg:w="2"/><text x="69.0016%" y="303.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_extracti128_si256 (2 samples, 0.05%)</title><rect x="68.7516%" y="277" width="0.0498%" height="15" fill="rgb(206,71,0)" fg:x="2759" fg:w="2"/><text x="69.0016%" y="287.50"></text></g><g><title>rand_chacha::guts::diagonalize (3 samples, 0.07%)</title><rect x="68.8014%" y="309" width="0.0748%" height="15" fill="rgb(233,118,54)" fg:x="2761" fg:w="3"/><text x="69.0514%" y="319.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (3 samples, 0.07%)</title><rect x="68.8014%" y="293" width="0.0748%" height="15" fill="rgb(234,83,48)" fg:x="2761" fg:w="3"/><text x="69.0514%" y="303.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (3 samples, 0.07%)</title><rect x="68.8014%" y="277" width="0.0748%" height="15" fill="rgb(228,3,54)" fg:x="2761" fg:w="3"/><text x="69.0514%" y="287.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (3 samples, 0.07%)</title><rect x="68.8014%" y="261" width="0.0748%" height="15" fill="rgb(226,155,13)" fg:x="2761" fg:w="3"/><text x="69.0514%" y="271.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (31 samples, 0.77%)</title><rect x="68.8762%" y="293" width="0.7725%" height="15" fill="rgb(241,28,37)" fg:x="2764" fg:w="31"/><text x="69.1262%" y="303.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (31 samples, 0.77%)</title><rect x="68.8762%" y="277" width="0.7725%" height="15" fill="rgb(233,93,10)" fg:x="2764" fg:w="31"/><text x="69.1262%" y="287.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (31 samples, 0.77%)</title><rect x="68.8762%" y="261" width="0.7725%" height="15" fill="rgb(225,113,19)" fg:x="2764" fg:w="31"/><text x="69.1262%" y="271.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (31 samples, 0.77%)</title><rect x="68.8762%" y="245" width="0.7725%" height="15" fill="rgb(241,2,18)" fg:x="2764" fg:w="31"/><text x="69.1262%" y="255.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::bit::BitXor&gt;::bitxor (11 samples, 0.27%)</title><rect x="69.6486%" y="293" width="0.2741%" height="15" fill="rgb(228,207,21)" fg:x="2795" fg:w="11"/><text x="69.8986%" y="303.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::bit::BitXor&gt;::bitxor (11 samples, 0.27%)</title><rect x="69.6486%" y="277" width="0.2741%" height="15" fill="rgb(213,211,35)" fg:x="2795" fg:w="11"/><text x="69.8986%" y="287.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (11 samples, 0.27%)</title><rect x="69.6486%" y="261" width="0.2741%" height="15" fill="rgb(209,83,10)" fg:x="2795" fg:w="11"/><text x="69.8986%" y="271.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (18 samples, 0.45%)</title><rect x="69.9228%" y="293" width="0.4485%" height="15" fill="rgb(209,164,1)" fg:x="2806" fg:w="18"/><text x="70.1728%" y="303.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (18 samples, 0.45%)</title><rect x="69.9228%" y="277" width="0.4485%" height="15" fill="rgb(213,184,43)" fg:x="2806" fg:w="18"/><text x="70.1728%" y="287.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (18 samples, 0.45%)</title><rect x="69.9228%" y="261" width="0.4485%" height="15" fill="rgb(231,61,34)" fg:x="2806" fg:w="18"/><text x="70.1728%" y="271.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (22 samples, 0.55%)</title><rect x="70.3713%" y="261" width="0.5482%" height="15" fill="rgb(235,75,3)" fg:x="2824" fg:w="22"/><text x="70.6213%" y="271.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (23 samples, 0.57%)</title><rect x="70.3713%" y="293" width="0.5731%" height="15" fill="rgb(220,106,47)" fg:x="2824" fg:w="23"/><text x="70.6213%" y="303.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (23 samples, 0.57%)</title><rect x="70.3713%" y="277" width="0.5731%" height="15" fill="rgb(210,196,33)" fg:x="2824" fg:w="23"/><text x="70.6213%" y="287.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="70.9195%" y="261" width="0.0249%" height="15" fill="rgb(229,154,42)" fg:x="2846" fg:w="1"/><text x="71.1695%" y="271.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (24 samples, 0.60%)</title><rect x="70.9444%" y="293" width="0.5981%" height="15" fill="rgb(228,114,26)" fg:x="2847" fg:w="24"/><text x="71.1944%" y="303.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (24 samples, 0.60%)</title><rect x="70.9444%" y="277" width="0.5981%" height="15" fill="rgb(208,144,1)" fg:x="2847" fg:w="24"/><text x="71.1944%" y="287.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (24 samples, 0.60%)</title><rect x="70.9444%" y="261" width="0.5981%" height="15" fill="rgb(239,112,37)" fg:x="2847" fg:w="24"/><text x="71.1944%" y="271.50"></text></g><g><title>rand_chacha::guts::round (132 samples, 3.29%)</title><rect x="68.8762%" y="309" width="3.2893%" height="15" fill="rgb(210,96,50)" fg:x="2764" fg:w="132"/><text x="69.1262%" y="319.50">ran..</text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (25 samples, 0.62%)</title><rect x="71.5425%" y="293" width="0.6230%" height="15" fill="rgb(222,178,2)" fg:x="2871" fg:w="25"/><text x="71.7925%" y="303.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (25 samples, 0.62%)</title><rect x="71.5425%" y="277" width="0.6230%" height="15" fill="rgb(226,74,18)" fg:x="2871" fg:w="25"/><text x="71.7925%" y="287.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (25 samples, 0.62%)</title><rect x="71.5425%" y="261" width="0.6230%" height="15" fill="rgb(225,67,54)" fg:x="2871" fg:w="25"/><text x="71.7925%" y="271.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (4 samples, 0.10%)</title><rect x="72.1655%" y="293" width="0.0997%" height="15" fill="rgb(251,92,32)" fg:x="2896" fg:w="4"/><text x="72.4155%" y="303.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (4 samples, 0.10%)</title><rect x="72.1655%" y="277" width="0.0997%" height="15" fill="rgb(228,149,22)" fg:x="2896" fg:w="4"/><text x="72.4155%" y="287.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (4 samples, 0.10%)</title><rect x="72.1655%" y="261" width="0.0997%" height="15" fill="rgb(243,54,13)" fg:x="2896" fg:w="4"/><text x="72.4155%" y="271.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (2 samples, 0.05%)</title><rect x="72.2651%" y="293" width="0.0498%" height="15" fill="rgb(243,180,28)" fg:x="2900" fg:w="2"/><text x="72.5151%" y="303.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (2 samples, 0.05%)</title><rect x="72.2651%" y="277" width="0.0498%" height="15" fill="rgb(208,167,24)" fg:x="2900" fg:w="2"/><text x="72.5151%" y="287.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.05%)</title><rect x="72.2651%" y="261" width="0.0498%" height="15" fill="rgb(245,73,45)" fg:x="2900" fg:w="2"/><text x="72.5151%" y="271.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (165 samples, 4.11%)</title><rect x="68.3030%" y="389" width="4.1116%" height="15" fill="rgb(237,203,48)" fg:x="2741" fg:w="165"/><text x="68.5530%" y="399.50">&lt;ran..</text></g><g><title>rand_chacha::guts::ChaCha::refill4 (165 samples, 4.11%)</title><rect x="68.3030%" y="373" width="4.1116%" height="15" fill="rgb(211,197,16)" fg:x="2741" fg:w="165"/><text x="68.5530%" y="383.50">rand..</text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (162 samples, 4.04%)</title><rect x="68.3778%" y="357" width="4.0369%" height="15" fill="rgb(243,99,51)" fg:x="2744" fg:w="162"/><text x="68.6278%" y="367.50">rand..</text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (162 samples, 4.04%)</title><rect x="68.3778%" y="341" width="4.0369%" height="15" fill="rgb(215,123,29)" fg:x="2744" fg:w="162"/><text x="68.6278%" y="351.50">rand..</text></g><g><title>rand_chacha::guts::refill_wide_impl (160 samples, 3.99%)</title><rect x="68.4276%" y="325" width="3.9870%" height="15" fill="rgb(239,186,37)" fg:x="2746" fg:w="160"/><text x="68.6776%" y="335.50">rand..</text></g><g><title>rand_chacha::guts::undiagonalize (10 samples, 0.25%)</title><rect x="72.1655%" y="309" width="0.2492%" height="15" fill="rgb(252,136,39)" fg:x="2896" fg:w="10"/><text x="72.4155%" y="319.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (4 samples, 0.10%)</title><rect x="72.3150%" y="293" width="0.0997%" height="15" fill="rgb(223,213,32)" fg:x="2902" fg:w="4"/><text x="72.5650%" y="303.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (4 samples, 0.10%)</title><rect x="72.3150%" y="277" width="0.0997%" height="15" fill="rgb(233,115,5)" fg:x="2902" fg:w="4"/><text x="72.5650%" y="287.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (4 samples, 0.10%)</title><rect x="72.3150%" y="261" width="0.0997%" height="15" fill="rgb(207,226,44)" fg:x="2902" fg:w="4"/><text x="72.5650%" y="271.50"></text></g><g><title>rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt;::is_forked (1 samples, 0.02%)</title><rect x="72.4147%" y="389" width="0.0249%" height="15" fill="rgb(208,126,0)" fg:x="2906" fg:w="1"/><text x="72.6647%" y="399.50"></text></g><g><title>rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt;::reseed_and_generate (1 samples, 0.02%)</title><rect x="72.4396%" y="389" width="0.0249%" height="15" fill="rgb(244,66,21)" fg:x="2907" fg:w="1"/><text x="72.6896%" y="399.50"></text></g><g><title>rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt;::reseed (1 samples, 0.02%)</title><rect x="72.4396%" y="373" width="0.0249%" height="15" fill="rgb(222,97,12)" fg:x="2907" fg:w="1"/><text x="72.6896%" y="383.50"></text></g><g><title>rand_core::SeedableRng::from_rng (1 samples, 0.02%)</title><rect x="72.4396%" y="357" width="0.0249%" height="15" fill="rgb(219,213,19)" fg:x="2907" fg:w="1"/><text x="72.6896%" y="367.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::try_fill_bytes (1 samples, 0.02%)</title><rect x="72.4396%" y="341" width="0.0249%" height="15" fill="rgb(252,169,30)" fg:x="2907" fg:w="1"/><text x="72.6896%" y="351.50"></text></g><g><title>&lt;rand_core::os::OsRng as rand_core::RngCore&gt;::try_fill_bytes (1 samples, 0.02%)</title><rect x="72.4396%" y="325" width="0.0249%" height="15" fill="rgb(206,32,51)" fg:x="2907" fg:w="1"/><text x="72.6896%" y="335.50"></text></g><g><title>getrandom::getrandom (1 samples, 0.02%)</title><rect x="72.4396%" y="309" width="0.0249%" height="15" fill="rgb(250,172,42)" fg:x="2907" fg:w="1"/><text x="72.6896%" y="319.50"></text></g><g><title>getrandom::getrandom_uninit (1 samples, 0.02%)</title><rect x="72.4396%" y="293" width="0.0249%" height="15" fill="rgb(209,34,43)" fg:x="2907" fg:w="1"/><text x="72.6896%" y="303.50"></text></g><g><title>getrandom::imp::getrandom_inner (1 samples, 0.02%)</title><rect x="72.4396%" y="277" width="0.0249%" height="15" fill="rgb(223,11,35)" fg:x="2907" fg:w="1"/><text x="72.6896%" y="287.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (1 samples, 0.02%)</title><rect x="72.4396%" y="261" width="0.0249%" height="15" fill="rgb(251,219,26)" fg:x="2907" fg:w="1"/><text x="72.6896%" y="271.50"></text></g><g><title>getrandom::imp::getrandom_inner::_{{closure}} (1 samples, 0.02%)</title><rect x="72.4396%" y="245" width="0.0249%" height="15" fill="rgb(231,119,3)" fg:x="2907" fg:w="1"/><text x="72.6896%" y="255.50"></text></g><g><title>getrandom::imp::getrandom (1 samples, 0.02%)</title><rect x="72.4396%" y="229" width="0.0249%" height="15" fill="rgb(216,97,11)" fg:x="2907" fg:w="1"/><text x="72.6896%" y="239.50"></text></g><g><title>syscall (1 samples, 0.02%)</title><rect x="72.4396%" y="213" width="0.0249%" height="15" fill="rgb(223,59,9)" fg:x="2907" fg:w="1"/><text x="72.6896%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="72.4396%" y="197" width="0.0249%" height="15" fill="rgb(233,93,31)" fg:x="2907" fg:w="1"/><text x="72.6896%" y="207.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (270 samples, 6.73%)</title><rect x="65.7613%" y="453" width="6.7281%" height="15" fill="rgb(239,81,33)" fg:x="2639" fg:w="270"/><text x="66.0113%" y="463.50">&lt;rand::rn..</text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (270 samples, 6.73%)</title><rect x="65.7613%" y="437" width="6.7281%" height="15" fill="rgb(213,120,34)" fg:x="2639" fg:w="270"/><text x="66.0113%" y="447.50">&lt;rand_cor..</text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (174 samples, 4.34%)</title><rect x="68.1535%" y="421" width="4.3359%" height="15" fill="rgb(243,49,53)" fg:x="2735" fg:w="174"/><text x="68.4035%" y="431.50">rand_..</text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (172 samples, 4.29%)</title><rect x="68.2033%" y="405" width="4.2861%" height="15" fill="rgb(247,216,33)" fg:x="2737" fg:w="172"/><text x="68.4533%" y="415.50">&lt;rand..</text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (1 samples, 0.02%)</title><rect x="72.4645%" y="389" width="0.0249%" height="15" fill="rgb(226,26,14)" fg:x="2908" fg:w="1"/><text x="72.7145%" y="399.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (1 samples, 0.02%)</title><rect x="72.4645%" y="373" width="0.0249%" height="15" fill="rgb(215,49,53)" fg:x="2908" fg:w="1"/><text x="72.7145%" y="383.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (1 samples, 0.02%)</title><rect x="72.4645%" y="357" width="0.0249%" height="15" fill="rgb(245,162,40)" fg:x="2908" fg:w="1"/><text x="72.7145%" y="367.50"></text></g><g><title>rand_chacha::guts::round (1 samples, 0.02%)</title><rect x="72.4645%" y="341" width="0.0249%" height="15" fill="rgb(229,68,17)" fg:x="2908" fg:w="1"/><text x="72.7145%" y="351.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (1 samples, 0.02%)</title><rect x="72.4645%" y="325" width="0.0249%" height="15" fill="rgb(213,182,10)" fg:x="2908" fg:w="1"/><text x="72.7145%" y="335.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (1 samples, 0.02%)</title><rect x="72.4645%" y="309" width="0.0249%" height="15" fill="rgb(245,125,30)" fg:x="2908" fg:w="1"/><text x="72.7145%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (1 samples, 0.02%)</title><rect x="72.4645%" y="293" width="0.0249%" height="15" fill="rgb(232,202,2)" fg:x="2908" fg:w="1"/><text x="72.7145%" y="303.50"></text></g><g><title>montecarlo::state::State::diagonal_update (1,840 samples, 45.85%)</title><rect x="27.0870%" y="549" width="45.8510%" height="15" fill="rgb(237,140,51)" fg:x="1087" fg:w="1840"/><text x="27.3370%" y="559.50">montecarlo::state::State::diagonal_update</text></g><g><title>rand::rng::Rng::gen (404 samples, 10.07%)</title><rect x="62.8707%" y="533" width="10.0673%" height="15" fill="rgb(236,157,25)" fg:x="2523" fg:w="404"/><text x="63.1207%" y="543.50">rand::rng::Rng:..</text></g><g><title>rand::distributions::float::&lt;impl rand::distributions::distribution::Distribution&lt;f64&gt; for rand::distributions::Standard&gt;::sample (404 samples, 10.07%)</title><rect x="62.8707%" y="517" width="10.0673%" height="15" fill="rgb(219,209,0)" fg:x="2523" fg:w="404"/><text x="63.1207%" y="527.50">rand::distribut..</text></g><g><title>rand::rng::Rng::gen (288 samples, 7.18%)</title><rect x="65.7613%" y="501" width="7.1767%" height="15" fill="rgb(240,116,54)" fg:x="2639" fg:w="288"/><text x="66.0113%" y="511.50">rand::rng:..</text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (288 samples, 7.18%)</title><rect x="65.7613%" y="485" width="7.1767%" height="15" fill="rgb(216,10,36)" fg:x="2639" fg:w="288"/><text x="66.0113%" y="495.50">rand::dist..</text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (288 samples, 7.18%)</title><rect x="65.7613%" y="469" width="7.1767%" height="15" fill="rgb(222,72,44)" fg:x="2639" fg:w="288"/><text x="66.0113%" y="479.50">&lt;rand::rng..</text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (18 samples, 0.45%)</title><rect x="72.4894%" y="453" width="0.4485%" height="15" fill="rgb(232,159,9)" fg:x="2909" fg:w="18"/><text x="72.7394%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (9 samples, 0.22%)</title><rect x="73.4862%" y="533" width="0.2243%" height="15" fill="rgb(210,39,32)" fg:x="2949" fg:w="9"/><text x="73.7362%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (9 samples, 0.22%)</title><rect x="73.4862%" y="517" width="0.2243%" height="15" fill="rgb(216,194,45)" fg:x="2949" fg:w="9"/><text x="73.7362%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (9 samples, 0.22%)</title><rect x="73.4862%" y="501" width="0.2243%" height="15" fill="rgb(218,18,35)" fg:x="2949" fg:w="9"/><text x="73.7362%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 1.67%)</title><rect x="73.7104%" y="501" width="1.6696%" height="15" fill="rgb(207,83,51)" fg:x="2958" fg:w="67"/><text x="73.9604%" y="511.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (66 samples, 1.64%)</title><rect x="73.7354%" y="485" width="1.6447%" height="15" fill="rgb(225,63,43)" fg:x="2959" fg:w="66"/><text x="73.9854%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="75.3551%" y="469" width="0.0249%" height="15" fill="rgb(207,57,36)" fg:x="3024" fg:w="1"/><text x="75.6051%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="75.3551%" y="453" width="0.0249%" height="15" fill="rgb(216,99,33)" fg:x="3024" fg:w="1"/><text x="75.6051%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="75.3551%" y="437" width="0.0249%" height="15" fill="rgb(225,42,16)" fg:x="3024" fg:w="1"/><text x="75.6051%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="75.3551%" y="421" width="0.0249%" height="15" fill="rgb(220,201,45)" fg:x="3024" fg:w="1"/><text x="75.6051%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="75.3551%" y="405" width="0.0249%" height="15" fill="rgb(225,33,4)" fg:x="3024" fg:w="1"/><text x="75.6051%" y="415.50"></text></g><g><title>&lt;id_collections::id_vec::Iter&lt;I,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (75 samples, 1.87%)</title><rect x="73.7104%" y="533" width="1.8689%" height="15" fill="rgb(224,33,50)" fg:x="2958" fg:w="75"/><text x="73.9604%" y="543.50">&lt;..</text></g><g><title>&lt;id_collections::id_vec::EnumerateIds&lt;I,It&gt; as core::iter::traits::iterator::Iterator&gt;::next (75 samples, 1.87%)</title><rect x="73.7104%" y="517" width="1.8689%" height="15" fill="rgb(246,198,51)" fg:x="2958" fg:w="75"/><text x="73.9604%" y="527.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.20%)</title><rect x="75.3800%" y="501" width="0.1994%" height="15" fill="rgb(205,22,4)" fg:x="3025" fg:w="8"/><text x="75.6300%" y="511.50"></text></g><g><title>&lt;id_collections::id_vec::EnumerateIds&lt;I,It&gt; as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (8 samples, 0.20%)</title><rect x="75.3800%" y="485" width="0.1994%" height="15" fill="rgb(206,3,8)" fg:x="3025" fg:w="8"/><text x="75.6300%" y="495.50"></text></g><g><title>&lt;usize as core::ops::arith::Add&gt;::add (8 samples, 0.20%)</title><rect x="75.3800%" y="469" width="0.1994%" height="15" fill="rgb(251,23,15)" fg:x="3025" fg:w="8"/><text x="75.6300%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.12%)</title><rect x="75.4548%" y="453" width="0.1246%" height="15" fill="rgb(252,88,28)" fg:x="3028" fg:w="5"/><text x="75.7048%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.12%)</title><rect x="75.4548%" y="437" width="0.1246%" height="15" fill="rgb(212,127,14)" fg:x="3028" fg:w="5"/><text x="75.7048%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.12%)</title><rect x="75.4548%" y="421" width="0.1246%" height="15" fill="rgb(247,145,37)" fg:x="3028" fg:w="5"/><text x="75.7048%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.12%)</title><rect x="75.4548%" y="405" width="0.1246%" height="15" fill="rgb(209,117,53)" fg:x="3028" fg:w="5"/><text x="75.7048%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.12%)</title><rect x="75.4548%" y="389" width="0.1246%" height="15" fill="rgb(212,90,42)" fg:x="3028" fg:w="5"/><text x="75.7048%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.12%)</title><rect x="75.4548%" y="373" width="0.1246%" height="15" fill="rgb(218,164,37)" fg:x="3028" fg:w="5"/><text x="75.7048%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.12%)</title><rect x="75.4548%" y="357" width="0.1246%" height="15" fill="rgb(246,65,34)" fg:x="3028" fg:w="5"/><text x="75.7048%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.12%)</title><rect x="75.4548%" y="341" width="0.1246%" height="15" fill="rgb(231,100,33)" fg:x="3028" fg:w="5"/><text x="75.7048%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.12%)</title><rect x="75.4548%" y="325" width="0.1246%" height="15" fill="rgb(228,126,14)" fg:x="3028" fg:w="5"/><text x="75.7048%" y="335.50"></text></g><g><title>[unknown] (4 samples, 0.10%)</title><rect x="75.4797%" y="309" width="0.0997%" height="15" fill="rgb(215,173,21)" fg:x="3029" fg:w="4"/><text x="75.7297%" y="319.50"></text></g><g><title>[unknown] (4 samples, 0.10%)</title><rect x="75.4797%" y="293" width="0.0997%" height="15" fill="rgb(210,6,40)" fg:x="3029" fg:w="4"/><text x="75.7297%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="77.2489%" y="517" width="0.0249%" height="15" fill="rgb(212,48,18)" fg:x="3100" fg:w="1"/><text x="77.4989%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="77.2489%" y="501" width="0.0249%" height="15" fill="rgb(230,214,11)" fg:x="3100" fg:w="1"/><text x="77.4989%" y="511.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="77.4234%" y="469" width="0.0249%" height="15" fill="rgb(254,105,39)" fg:x="3107" fg:w="1"/><text x="77.6734%" y="479.50"></text></g><g><title>checked_request2size (1 samples, 0.02%)</title><rect x="77.4234%" y="453" width="0.0249%" height="15" fill="rgb(245,158,5)" fg:x="3107" fg:w="1"/><text x="77.6734%" y="463.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hd28e0cdf38b391c3E.llvm.17534386512340449806 (3 samples, 0.07%)</title><rect x="77.3985%" y="485" width="0.0748%" height="15" fill="rgb(249,208,11)" fg:x="3106" fg:w="3"/><text x="77.6485%" y="495.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="77.4483%" y="469" width="0.0249%" height="15" fill="rgb(210,39,28)" fg:x="3108" fg:w="1"/><text x="77.6983%" y="479.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="78.0962%" y="389" width="0.0249%" height="15" fill="rgb(211,56,53)" fg:x="3134" fg:w="1"/><text x="78.3462%" y="399.50"></text></g><g><title>_int_free (23 samples, 0.57%)</title><rect x="78.1211%" y="389" width="0.5731%" height="15" fill="rgb(226,201,30)" fg:x="3135" fg:w="23"/><text x="78.3711%" y="399.50"></text></g><g><title>malloc_consolidate (14 samples, 0.35%)</title><rect x="78.3454%" y="373" width="0.3489%" height="15" fill="rgb(239,101,34)" fg:x="3144" fg:w="14"/><text x="78.5954%" y="383.50"></text></g><g><title>alloc_perturb (1 samples, 0.02%)</title><rect x="79.3421%" y="373" width="0.0249%" height="15" fill="rgb(226,209,5)" fg:x="3184" fg:w="1"/><text x="79.5921%" y="383.50"></text></g><g><title>checked_request2size (1 samples, 0.02%)</title><rect x="79.3671%" y="373" width="0.0249%" height="15" fill="rgb(250,105,47)" fg:x="3185" fg:w="1"/><text x="79.6171%" y="383.50"></text></g><g><title>_int_malloc (29 samples, 0.72%)</title><rect x="78.6942%" y="389" width="0.7227%" height="15" fill="rgb(230,72,3)" fg:x="3158" fg:w="29"/><text x="78.9442%" y="399.50"></text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="79.3920%" y="373" width="0.0249%" height="15" fill="rgb(232,218,39)" fg:x="3186" fg:w="1"/><text x="79.6420%" y="383.50"></text></g><g><title>_int_realloc (70 samples, 1.74%)</title><rect x="77.7473%" y="405" width="1.7443%" height="15" fill="rgb(248,166,6)" fg:x="3120" fg:w="70"/><text x="77.9973%" y="415.50"></text></g><g><title>unlink_chunk (3 samples, 0.07%)</title><rect x="79.4169%" y="389" width="0.0748%" height="15" fill="rgb(247,89,20)" fg:x="3187" fg:w="3"/><text x="79.6669%" y="399.50"></text></g><g><title>arena_for_chunk (2 samples, 0.05%)</title><rect x="79.4917%" y="405" width="0.0498%" height="15" fill="rgb(248,130,54)" fg:x="3190" fg:w="2"/><text x="79.7417%" y="415.50"></text></g><g><title>__GI___libc_realloc (84 samples, 2.09%)</title><rect x="77.5231%" y="421" width="2.0932%" height="15" fill="rgb(234,196,4)" fg:x="3111" fg:w="84"/><text x="77.7731%" y="431.50">_..</text></g><g><title>checked_request2size (3 samples, 0.07%)</title><rect x="79.5415%" y="405" width="0.0748%" height="15" fill="rgb(250,143,31)" fg:x="3192" fg:w="3"/><text x="79.7915%" y="415.50"></text></g><g><title>__rdl_realloc (3 samples, 0.07%)</title><rect x="79.6162%" y="421" width="0.0748%" height="15" fill="rgb(211,110,34)" fg:x="3195" fg:w="3"/><text x="79.8662%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (91 samples, 2.27%)</title><rect x="77.4981%" y="469" width="2.2676%" height="15" fill="rgb(215,124,48)" fg:x="3110" fg:w="91"/><text x="77.7481%" y="479.50">&lt;..</text></g><g><title>alloc::alloc::Global::grow_impl (91 samples, 2.27%)</title><rect x="77.4981%" y="453" width="2.2676%" height="15" fill="rgb(216,46,13)" fg:x="3110" fg:w="91"/><text x="77.7481%" y="463.50">a..</text></g><g><title>alloc::alloc::realloc (91 samples, 2.27%)</title><rect x="77.4981%" y="437" width="2.2676%" height="15" fill="rgb(205,184,25)" fg:x="3110" fg:w="91"/><text x="77.7481%" y="447.50">a..</text></g><g><title>__rust_realloc (3 samples, 0.07%)</title><rect x="79.6910%" y="421" width="0.0748%" height="15" fill="rgb(228,1,10)" fg:x="3198" fg:w="3"/><text x="79.9410%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (93 samples, 2.32%)</title><rect x="77.4732%" y="485" width="2.3175%" height="15" fill="rgb(213,116,27)" fg:x="3109" fg:w="93"/><text x="77.7232%" y="495.50">a..</text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hd28e0cdf38b391c3E.llvm.17534386512340449806 (1 samples, 0.02%)</title><rect x="79.7658%" y="469" width="0.0249%" height="15" fill="rgb(241,95,50)" fg:x="3201" fg:w="1"/><text x="80.0158%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (105 samples, 2.62%)</title><rect x="77.2739%" y="517" width="2.6165%" height="15" fill="rgb(238,48,32)" fg:x="3101" fg:w="105"/><text x="77.5239%" y="527.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (105 samples, 2.62%)</title><rect x="77.2739%" y="501" width="2.6165%" height="15" fill="rgb(235,113,49)" fg:x="3101" fg:w="105"/><text x="77.5239%" y="511.50">al..</text></g><g><title>core::cmp::max (4 samples, 0.10%)</title><rect x="79.7907%" y="485" width="0.0997%" height="15" fill="rgb(205,127,43)" fg:x="3202" fg:w="4"/><text x="80.0407%" y="495.50"></text></g><g><title>core::cmp::Ord::max (4 samples, 0.10%)</title><rect x="79.7907%" y="469" width="0.0997%" height="15" fill="rgb(250,162,2)" fg:x="3202" fg:w="4"/><text x="80.0407%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.10%)</title><rect x="79.7907%" y="453" width="0.0997%" height="15" fill="rgb(220,13,41)" fg:x="3202" fg:w="4"/><text x="80.0407%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (3 samples, 0.07%)</title><rect x="79.8904%" y="517" width="0.0748%" height="15" fill="rgb(249,221,25)" fg:x="3206" fg:w="3"/><text x="80.1404%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (3 samples, 0.07%)</title><rect x="79.8904%" y="501" width="0.0748%" height="15" fill="rgb(215,208,19)" fg:x="3206" fg:w="3"/><text x="80.1404%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (212 samples, 5.28%)</title><rect x="75.5794%" y="533" width="5.2828%" height="15" fill="rgb(236,175,2)" fg:x="3033" fg:w="212"/><text x="75.8294%" y="543.50">alloc:..</text></g><g><title>core::ptr::write (36 samples, 0.90%)</title><rect x="79.9651%" y="517" width="0.8971%" height="15" fill="rgb(241,52,2)" fg:x="3209" fg:w="36"/><text x="80.2151%" y="527.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (50 samples, 1.25%)</title><rect x="80.8622%" y="533" width="1.2460%" height="15" fill="rgb(248,140,14)" fg:x="3245" fg:w="50"/><text x="81.1122%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (50 samples, 1.25%)</title><rect x="80.8622%" y="517" width="1.2460%" height="15" fill="rgb(253,22,42)" fg:x="3245" fg:w="50"/><text x="81.1122%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (3 samples, 0.07%)</title><rect x="82.0334%" y="501" width="0.0748%" height="15" fill="rgb(234,61,47)" fg:x="3292" fg:w="3"/><text x="82.2834%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (77 samples, 1.92%)</title><rect x="82.1081%" y="533" width="1.9188%" height="15" fill="rgb(208,226,15)" fg:x="3295" fg:w="77"/><text x="82.3581%" y="543.50">c..</text></g><g><title>free_perturb (1 samples, 0.02%)</title><rect x="84.1764%" y="421" width="0.0249%" height="15" fill="rgb(217,221,4)" fg:x="3378" fg:w="1"/><text x="84.4264%" y="431.50"></text></g><g><title>malloc_consolidate (5 samples, 0.12%)</title><rect x="84.2013%" y="421" width="0.1246%" height="15" fill="rgb(212,174,34)" fg:x="3379" fg:w="5"/><text x="84.4513%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.30%)</title><rect x="84.0518%" y="485" width="0.2990%" height="15" fill="rgb(253,83,4)" fg:x="3373" fg:w="12"/><text x="84.3018%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.30%)</title><rect x="84.0518%" y="469" width="0.2990%" height="15" fill="rgb(250,195,49)" fg:x="3373" fg:w="12"/><text x="84.3018%" y="479.50"></text></g><g><title>__GI___libc_free (12 samples, 0.30%)</title><rect x="84.0518%" y="453" width="0.2990%" height="15" fill="rgb(241,192,25)" fg:x="3373" fg:w="12"/><text x="84.3018%" y="463.50"></text></g><g><title>_int_free (12 samples, 0.30%)</title><rect x="84.0518%" y="437" width="0.2990%" height="15" fill="rgb(208,124,10)" fg:x="3373" fg:w="12"/><text x="84.3018%" y="447.50"></text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="84.3259%" y="421" width="0.0249%" height="15" fill="rgb(222,33,0)" fg:x="3384" fg:w="1"/><text x="84.5759%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;montecarlo::state::OperatorId&gt;&gt; (15 samples, 0.37%)</title><rect x="84.0269%" y="533" width="0.3738%" height="15" fill="rgb(234,209,28)" fg:x="3372" fg:w="15"/><text x="84.2769%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;montecarlo::state::OperatorId&gt;&gt; (15 samples, 0.37%)</title><rect x="84.0269%" y="517" width="0.3738%" height="15" fill="rgb(224,11,23)" fg:x="3372" fg:w="15"/><text x="84.2769%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.37%)</title><rect x="84.0269%" y="501" width="0.3738%" height="15" fill="rgb(232,99,1)" fg:x="3372" fg:w="15"/><text x="84.2769%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.05%)</title><rect x="84.3509%" y="485" width="0.0498%" height="15" fill="rgb(237,95,45)" fg:x="3385" fg:w="2"/><text x="84.6009%" y="495.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.02%)</title><rect x="84.3758%" y="469" width="0.0249%" height="15" fill="rgb(208,109,11)" fg:x="3386" fg:w="1"/><text x="84.6258%" y="479.50"></text></g><g><title>&lt;id_collections::id_vec::IdVec&lt;I,T&gt; as core::ops::index::Index&lt;J&gt;&gt;::index (44 samples, 1.10%)</title><rect x="85.1233%" y="517" width="1.0964%" height="15" fill="rgb(216,190,48)" fg:x="3416" fg:w="44"/><text x="85.3733%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (44 samples, 1.10%)</title><rect x="85.1233%" y="501" width="1.0964%" height="15" fill="rgb(251,171,36)" fg:x="3416" fg:w="44"/><text x="85.3733%" y="511.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (44 samples, 1.10%)</title><rect x="85.1233%" y="485" width="1.0964%" height="15" fill="rgb(230,62,22)" fg:x="3416" fg:w="44"/><text x="85.3733%" y="495.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (44 samples, 1.10%)</title><rect x="85.1233%" y="469" width="1.0964%" height="15" fill="rgb(225,114,35)" fg:x="3416" fg:w="44"/><text x="85.3733%" y="479.50"></text></g><g><title>core::cmp::PartialOrd::ge (42 samples, 1.05%)</title><rect x="86.2198%" y="517" width="1.0466%" height="15" fill="rgb(215,118,42)" fg:x="3460" fg:w="42"/><text x="86.4698%" y="527.50"></text></g><g><title>core::cmp::PartialOrd::le (36 samples, 0.90%)</title><rect x="87.2664%" y="517" width="0.8971%" height="15" fill="rgb(243,119,21)" fg:x="3502" fg:w="36"/><text x="87.5164%" y="527.50"></text></g><g><title>&lt;montecarlo::state::OperatorId as core::cmp::PartialOrd&gt;::partial_cmp (17 samples, 0.42%)</title><rect x="87.7398%" y="501" width="0.4236%" height="15" fill="rgb(252,177,53)" fg:x="3521" fg:w="17"/><text x="87.9898%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::partial_cmp (17 samples, 0.42%)</title><rect x="87.7398%" y="485" width="0.4236%" height="15" fill="rgb(237,209,29)" fg:x="3521" fg:w="17"/><text x="87.9898%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (17 samples, 0.42%)</title><rect x="87.7398%" y="469" width="0.4236%" height="15" fill="rgb(212,65,23)" fg:x="3521" fg:w="17"/><text x="87.9898%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (109 samples, 2.72%)</title><rect x="88.1635%" y="517" width="2.7162%" height="15" fill="rgb(230,222,46)" fg:x="3538" fg:w="109"/><text x="88.4135%" y="527.50">co..</text></g><g><title>core::option::Option&lt;T&gt;::as_ref (62 samples, 1.54%)</title><rect x="90.8796%" y="517" width="1.5450%" height="15" fill="rgb(215,135,32)" fg:x="3647" fg:w="62"/><text x="91.1296%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (9 samples, 0.22%)</title><rect x="92.4246%" y="517" width="0.2243%" height="15" fill="rgb(246,101,22)" fg:x="3709" fg:w="9"/><text x="92.6746%" y="527.50"></text></g><g><title>montecarlo::state::OperatorType::flip (53 samples, 1.32%)</title><rect x="92.6489%" y="517" width="1.3207%" height="15" fill="rgb(206,107,13)" fg:x="3718" fg:w="53"/><text x="92.8989%" y="527.50"></text></g><g><title>montecarlo::state::State::directed_loop_update (385 samples, 9.59%)</title><rect x="84.4007%" y="533" width="9.5938%" height="15" fill="rgb(250,100,44)" fg:x="3387" fg:w="385"/><text x="84.6507%" y="543.50">montecarlo::st..</text></g><g><title>montecarlo::state::State::off_diagonal_update (1 samples, 0.02%)</title><rect x="93.9696%" y="517" width="0.0249%" height="15" fill="rgb(231,147,38)" fg:x="3771" fg:w="1"/><text x="94.2196%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::is_empty (3 samples, 0.07%)</title><rect x="94.0942%" y="517" width="0.0748%" height="15" fill="rgb(229,8,40)" fg:x="3776" fg:w="3"/><text x="94.3442%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (3 samples, 0.07%)</title><rect x="94.0942%" y="501" width="0.0748%" height="15" fill="rgb(221,135,30)" fg:x="3776" fg:w="3"/><text x="94.3442%" y="511.50"></text></g><g><title>&lt;usize as rand::distributions::utils::WideningMultiply&gt;::wmul (31 samples, 0.77%)</title><rect x="94.7919%" y="469" width="0.7725%" height="15" fill="rgb(249,193,18)" fg:x="3804" fg:w="31"/><text x="95.0419%" y="479.50"></text></g><g><title>&lt;u64 as rand::distributions::utils::WideningMultiply&gt;::wmul (31 samples, 0.77%)</title><rect x="94.7919%" y="453" width="0.7725%" height="15" fill="rgb(209,133,39)" fg:x="3804" fg:w="31"/><text x="95.0419%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="95.5644%" y="469" width="0.0249%" height="15" fill="rgb(232,100,14)" fg:x="3835" fg:w="1"/><text x="95.8144%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="95.5644%" y="453" width="0.0249%" height="15" fill="rgb(224,185,1)" fg:x="3835" fg:w="1"/><text x="95.8144%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="95.5644%" y="437" width="0.0249%" height="15" fill="rgb(223,139,8)" fg:x="3835" fg:w="1"/><text x="95.8144%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="95.5644%" y="421" width="0.0249%" height="15" fill="rgb(232,213,38)" fg:x="3835" fg:w="1"/><text x="95.8144%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="95.5644%" y="405" width="0.0249%" height="15" fill="rgb(207,94,22)" fg:x="3835" fg:w="1"/><text x="95.8144%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="95.5893%" y="469" width="0.0249%" height="15" fill="rgb(219,183,54)" fg:x="3836" fg:w="1"/><text x="95.8393%" y="479.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64::_{{closure}} (9 samples, 0.22%)</title><rect x="96.7605%" y="389" width="0.2243%" height="15" fill="rgb(216,185,54)" fg:x="3883" fg:w="9"/><text x="97.0105%" y="399.50"></text></g><g><title>rand_chacha::guts::refill_wide (2 samples, 0.05%)</title><rect x="97.0346%" y="325" width="0.0498%" height="15" fill="rgb(254,217,39)" fg:x="3894" fg:w="2"/><text x="97.2846%" y="335.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt; as ppv_lite86::types::StoreBytes&gt;::write_le (3 samples, 0.07%)</title><rect x="97.1094%" y="277" width="0.0748%" height="15" fill="rgb(240,178,23)" fg:x="3897" fg:w="3"/><text x="97.3594%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_storeu_si128 (3 samples, 0.07%)</title><rect x="97.1094%" y="261" width="0.0748%" height="15" fill="rgb(218,11,47)" fg:x="3897" fg:w="3"/><text x="97.3594%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (3 samples, 0.07%)</title><rect x="97.1094%" y="245" width="0.0748%" height="15" fill="rgb(218,51,51)" fg:x="3897" fg:w="3"/><text x="97.3594%" y="255.50"></text></g><g><title>core::ptr::write_unaligned (3 samples, 0.07%)</title><rect x="97.1094%" y="229" width="0.0748%" height="15" fill="rgb(238,126,27)" fg:x="3897" fg:w="3"/><text x="97.3594%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.07%)</title><rect x="97.1094%" y="213" width="0.0748%" height="15" fill="rgb(249,202,22)" fg:x="3897" fg:w="3"/><text x="97.3594%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,ppv_lite86::x86_64::YesS4,NI&gt; as ppv_lite86::types::Vec4&lt;u32&gt;&gt;::insert (3 samples, 0.07%)</title><rect x="97.1842%" y="277" width="0.0748%" height="15" fill="rgb(254,195,49)" fg:x="3900" fg:w="3"/><text x="97.4342%" y="287.50"></text></g><g><title>core::core_arch::x86::sse41::_mm_insert_epi32 (3 samples, 0.07%)</title><rect x="97.1842%" y="261" width="0.0748%" height="15" fill="rgb(208,123,14)" fg:x="3900" fg:w="3"/><text x="97.4342%" y="271.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.10%)</title><rect x="97.2589%" y="277" width="0.0997%" height="15" fill="rgb(224,200,8)" fg:x="3903" fg:w="4"/><text x="97.5089%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.10%)</title><rect x="97.2589%" y="261" width="0.0997%" height="15" fill="rgb(217,61,36)" fg:x="3903" fg:w="4"/><text x="97.5089%" y="271.50"></text></g><g><title>ppv_lite86::x86_64::sse2::avx2::_&lt;impl ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 4]&gt; for ppv_lite86::soft::x2&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt;,ppv_lite86::x86_64::sse2::G0&gt;&gt;::to_lanes (1 samples, 0.02%)</title><rect x="97.3586%" y="277" width="0.0249%" height="15" fill="rgb(206,35,45)" fg:x="3907" fg:w="1"/><text x="97.6086%" y="287.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 2]&gt;&gt;::to_lanes (1 samples, 0.02%)</title><rect x="97.3586%" y="261" width="0.0249%" height="15" fill="rgb(217,65,33)" fg:x="3907" fg:w="1"/><text x="97.6086%" y="271.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_extracti128_si256 (1 samples, 0.02%)</title><rect x="97.3586%" y="245" width="0.0249%" height="15" fill="rgb(222,158,48)" fg:x="3907" fg:w="1"/><text x="97.6086%" y="255.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (1 samples, 0.02%)</title><rect x="97.3835%" y="261" width="0.0249%" height="15" fill="rgb(254,2,54)" fg:x="3908" fg:w="1"/><text x="97.6335%" y="271.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (1 samples, 0.02%)</title><rect x="97.3835%" y="245" width="0.0249%" height="15" fill="rgb(250,143,38)" fg:x="3908" fg:w="1"/><text x="97.6335%" y="255.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="97.3835%" y="229" width="0.0249%" height="15" fill="rgb(248,25,0)" fg:x="3908" fg:w="1"/><text x="97.6335%" y="239.50"></text></g><g><title>rand_chacha::guts::diagonalize (2 samples, 0.05%)</title><rect x="97.3835%" y="277" width="0.0498%" height="15" fill="rgb(206,152,27)" fg:x="3908" fg:w="2"/><text x="97.6335%" y="287.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (1 samples, 0.02%)</title><rect x="97.4084%" y="261" width="0.0249%" height="15" fill="rgb(240,77,30)" fg:x="3909" fg:w="1"/><text x="97.6584%" y="271.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (1 samples, 0.02%)</title><rect x="97.4084%" y="245" width="0.0249%" height="15" fill="rgb(231,5,3)" fg:x="3909" fg:w="1"/><text x="97.6584%" y="255.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="97.4084%" y="229" width="0.0249%" height="15" fill="rgb(207,226,32)" fg:x="3909" fg:w="1"/><text x="97.6584%" y="239.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (13 samples, 0.32%)</title><rect x="97.4333%" y="261" width="0.3239%" height="15" fill="rgb(222,207,47)" fg:x="3910" fg:w="13"/><text x="97.6833%" y="271.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (13 samples, 0.32%)</title><rect x="97.4333%" y="245" width="0.3239%" height="15" fill="rgb(229,115,45)" fg:x="3910" fg:w="13"/><text x="97.6833%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (13 samples, 0.32%)</title><rect x="97.4333%" y="229" width="0.3239%" height="15" fill="rgb(224,191,6)" fg:x="3910" fg:w="13"/><text x="97.6833%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (13 samples, 0.32%)</title><rect x="97.4333%" y="213" width="0.3239%" height="15" fill="rgb(230,227,24)" fg:x="3910" fg:w="13"/><text x="97.6833%" y="223.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::bit::BitXor&gt;::bitxor (16 samples, 0.40%)</title><rect x="97.7573%" y="261" width="0.3987%" height="15" fill="rgb(228,80,19)" fg:x="3923" fg:w="16"/><text x="98.0073%" y="271.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::bit::BitXor&gt;::bitxor (16 samples, 0.40%)</title><rect x="97.7573%" y="245" width="0.3987%" height="15" fill="rgb(247,229,0)" fg:x="3923" fg:w="16"/><text x="98.0073%" y="255.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (16 samples, 0.40%)</title><rect x="97.7573%" y="229" width="0.3987%" height="15" fill="rgb(237,194,15)" fg:x="3923" fg:w="16"/><text x="98.0073%" y="239.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (11 samples, 0.27%)</title><rect x="98.1560%" y="261" width="0.2741%" height="15" fill="rgb(219,203,20)" fg:x="3939" fg:w="11"/><text x="98.4060%" y="271.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (11 samples, 0.27%)</title><rect x="98.1560%" y="245" width="0.2741%" height="15" fill="rgb(234,128,8)" fg:x="3939" fg:w="11"/><text x="98.4060%" y="255.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (11 samples, 0.27%)</title><rect x="98.1560%" y="229" width="0.2741%" height="15" fill="rgb(248,202,8)" fg:x="3939" fg:w="11"/><text x="98.4060%" y="239.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (12 samples, 0.30%)</title><rect x="98.4301%" y="261" width="0.2990%" height="15" fill="rgb(206,104,37)" fg:x="3950" fg:w="12"/><text x="98.6801%" y="271.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (12 samples, 0.30%)</title><rect x="98.4301%" y="245" width="0.2990%" height="15" fill="rgb(223,8,27)" fg:x="3950" fg:w="12"/><text x="98.6801%" y="255.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (12 samples, 0.30%)</title><rect x="98.4301%" y="229" width="0.2990%" height="15" fill="rgb(216,217,28)" fg:x="3950" fg:w="12"/><text x="98.6801%" y="239.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (8 samples, 0.20%)</title><rect x="98.7291%" y="261" width="0.1994%" height="15" fill="rgb(249,199,1)" fg:x="3962" fg:w="8"/><text x="98.9791%" y="271.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (8 samples, 0.20%)</title><rect x="98.7291%" y="245" width="0.1994%" height="15" fill="rgb(240,85,17)" fg:x="3962" fg:w="8"/><text x="98.9791%" y="255.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (8 samples, 0.20%)</title><rect x="98.7291%" y="229" width="0.1994%" height="15" fill="rgb(206,108,45)" fg:x="3962" fg:w="8"/><text x="98.9791%" y="239.50"></text></g><g><title>rand_chacha::guts::round (72 samples, 1.79%)</title><rect x="97.4333%" y="277" width="1.7942%" height="15" fill="rgb(245,210,41)" fg:x="3910" fg:w="72"/><text x="97.6833%" y="287.50">r..</text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (12 samples, 0.30%)</title><rect x="98.9285%" y="261" width="0.2990%" height="15" fill="rgb(206,13,37)" fg:x="3970" fg:w="12"/><text x="99.1785%" y="271.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (12 samples, 0.30%)</title><rect x="98.9285%" y="245" width="0.2990%" height="15" fill="rgb(250,61,18)" fg:x="3970" fg:w="12"/><text x="99.1785%" y="255.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (12 samples, 0.30%)</title><rect x="98.9285%" y="229" width="0.2990%" height="15" fill="rgb(235,172,48)" fg:x="3970" fg:w="12"/><text x="99.1785%" y="239.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (92 samples, 2.29%)</title><rect x="97.0097%" y="357" width="2.2925%" height="15" fill="rgb(249,201,17)" fg:x="3893" fg:w="92"/><text x="97.2597%" y="367.50">&lt;..</text></g><g><title>rand_chacha::guts::ChaCha::refill4 (92 samples, 2.29%)</title><rect x="97.0097%" y="341" width="2.2925%" height="15" fill="rgb(219,208,6)" fg:x="3893" fg:w="92"/><text x="97.2597%" y="351.50">r..</text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (89 samples, 2.22%)</title><rect x="97.0845%" y="325" width="2.2178%" height="15" fill="rgb(248,31,23)" fg:x="3896" fg:w="89"/><text x="97.3345%" y="335.50">r..</text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (89 samples, 2.22%)</title><rect x="97.0845%" y="309" width="2.2178%" height="15" fill="rgb(245,15,42)" fg:x="3896" fg:w="89"/><text x="97.3345%" y="319.50">r..</text></g><g><title>rand_chacha::guts::refill_wide_impl (89 samples, 2.22%)</title><rect x="97.0845%" y="293" width="2.2178%" height="15" fill="rgb(222,217,39)" fg:x="3896" fg:w="89"/><text x="97.3345%" y="303.50">r..</text></g><g><title>rand_chacha::guts::undiagonalize (3 samples, 0.07%)</title><rect x="99.2275%" y="277" width="0.0748%" height="15" fill="rgb(210,219,27)" fg:x="3982" fg:w="3"/><text x="99.4775%" y="287.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (3 samples, 0.07%)</title><rect x="99.2275%" y="261" width="0.0748%" height="15" fill="rgb(252,166,36)" fg:x="3982" fg:w="3"/><text x="99.4775%" y="271.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (3 samples, 0.07%)</title><rect x="99.2275%" y="245" width="0.0748%" height="15" fill="rgb(245,132,34)" fg:x="3982" fg:w="3"/><text x="99.4775%" y="255.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (3 samples, 0.07%)</title><rect x="99.2275%" y="229" width="0.0748%" height="15" fill="rgb(236,54,3)" fg:x="3982" fg:w="3"/><text x="99.4775%" y="239.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.02%)</title><rect x="99.3023%" y="341" width="0.0249%" height="15" fill="rgb(241,173,43)" fg:x="3985" fg:w="1"/><text x="99.5523%" y="351.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (1 samples, 0.02%)</title><rect x="99.3023%" y="325" width="0.0249%" height="15" fill="rgb(215,190,9)" fg:x="3985" fg:w="1"/><text x="99.5523%" y="335.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::try_fill_bytes (4 samples, 0.10%)</title><rect x="99.3272%" y="309" width="0.0997%" height="15" fill="rgb(242,101,16)" fg:x="3986" fg:w="4"/><text x="99.5772%" y="319.50"></text></g><g><title>&lt;rand_core::os::OsRng as rand_core::RngCore&gt;::try_fill_bytes (4 samples, 0.10%)</title><rect x="99.3272%" y="293" width="0.0997%" height="15" fill="rgb(223,190,21)" fg:x="3986" fg:w="4"/><text x="99.5772%" y="303.50"></text></g><g><title>getrandom::getrandom (4 samples, 0.10%)</title><rect x="99.3272%" y="277" width="0.0997%" height="15" fill="rgb(215,228,25)" fg:x="3986" fg:w="4"/><text x="99.5772%" y="287.50"></text></g><g><title>getrandom::getrandom_uninit (4 samples, 0.10%)</title><rect x="99.3272%" y="261" width="0.0997%" height="15" fill="rgb(225,36,22)" fg:x="3986" fg:w="4"/><text x="99.5772%" y="271.50"></text></g><g><title>getrandom::imp::getrandom_inner (4 samples, 0.10%)</title><rect x="99.3272%" y="245" width="0.0997%" height="15" fill="rgb(251,106,46)" fg:x="3986" fg:w="4"/><text x="99.5772%" y="255.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (4 samples, 0.10%)</title><rect x="99.3272%" y="229" width="0.0997%" height="15" fill="rgb(208,90,1)" fg:x="3986" fg:w="4"/><text x="99.5772%" y="239.50"></text></g><g><title>getrandom::imp::getrandom_inner::_{{closure}} (4 samples, 0.10%)</title><rect x="99.3272%" y="213" width="0.0997%" height="15" fill="rgb(243,10,4)" fg:x="3986" fg:w="4"/><text x="99.5772%" y="223.50"></text></g><g><title>getrandom::imp::getrandom (4 samples, 0.10%)</title><rect x="99.3272%" y="197" width="0.0997%" height="15" fill="rgb(212,137,27)" fg:x="3986" fg:w="4"/><text x="99.5772%" y="207.50"></text></g><g><title>syscall (4 samples, 0.10%)</title><rect x="99.3272%" y="181" width="0.0997%" height="15" fill="rgb(231,220,49)" fg:x="3986" fg:w="4"/><text x="99.5772%" y="191.50"></text></g><g><title>[unknown] (4 samples, 0.10%)</title><rect x="99.3272%" y="165" width="0.0997%" height="15" fill="rgb(237,96,20)" fg:x="3986" fg:w="4"/><text x="99.5772%" y="175.50"></text></g><g><title>[unknown] (4 samples, 0.10%)</title><rect x="99.3272%" y="149" width="0.0997%" height="15" fill="rgb(239,229,30)" fg:x="3986" fg:w="4"/><text x="99.5772%" y="159.50"></text></g><g><title>[unknown] (4 samples, 0.10%)</title><rect x="99.3272%" y="133" width="0.0997%" height="15" fill="rgb(219,65,33)" fg:x="3986" fg:w="4"/><text x="99.5772%" y="143.50"></text></g><g><title>[unknown] (4 samples, 0.10%)</title><rect x="99.3272%" y="117" width="0.0997%" height="15" fill="rgb(243,134,7)" fg:x="3986" fg:w="4"/><text x="99.5772%" y="127.50"></text></g><g><title>[unknown] (4 samples, 0.10%)</title><rect x="99.3272%" y="101" width="0.0997%" height="15" fill="rgb(216,177,54)" fg:x="3986" fg:w="4"/><text x="99.5772%" y="111.50"></text></g><g><title>[unknown] (4 samples, 0.10%)</title><rect x="99.3272%" y="85" width="0.0997%" height="15" fill="rgb(211,160,20)" fg:x="3986" fg:w="4"/><text x="99.5772%" y="95.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="99.3521%" y="69" width="0.0748%" height="15" fill="rgb(239,85,39)" fg:x="3987" fg:w="3"/><text x="99.6021%" y="79.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="99.3521%" y="53" width="0.0748%" height="15" fill="rgb(232,125,22)" fg:x="3987" fg:w="3"/><text x="99.6021%" y="63.50"></text></g><g><title>rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt;::reseed_and_generate (6 samples, 0.15%)</title><rect x="99.3023%" y="357" width="0.1495%" height="15" fill="rgb(244,57,34)" fg:x="3985" fg:w="6"/><text x="99.5523%" y="367.50"></text></g><g><title>rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt;::reseed (5 samples, 0.12%)</title><rect x="99.3272%" y="341" width="0.1246%" height="15" fill="rgb(214,203,32)" fg:x="3986" fg:w="5"/><text x="99.5772%" y="351.50"></text></g><g><title>rand_core::SeedableRng::from_rng (5 samples, 0.12%)</title><rect x="99.3272%" y="325" width="0.1246%" height="15" fill="rgb(207,58,43)" fg:x="3986" fg:w="5"/><text x="99.5772%" y="335.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::SeedableRng&gt;::from_seed (1 samples, 0.02%)</title><rect x="99.4269%" y="309" width="0.0249%" height="15" fill="rgb(215,193,15)" fg:x="3990" fg:w="1"/><text x="99.6769%" y="319.50"></text></g><g><title>rand_chacha::guts::ChaCha::new (1 samples, 0.02%)</title><rect x="99.4269%" y="293" width="0.0249%" height="15" fill="rgb(232,15,44)" fg:x="3990" fg:w="1"/><text x="99.6769%" y="303.50"></text></g><g><title>rand_chacha::guts::init_chacha (1 samples, 0.02%)</title><rect x="99.4269%" y="277" width="0.0249%" height="15" fill="rgb(212,3,48)" fg:x="3990" fg:w="1"/><text x="99.6769%" y="287.50"></text></g><g><title>rand_chacha::guts::init_chacha::impl_avx (1 samples, 0.02%)</title><rect x="99.4269%" y="261" width="0.0249%" height="15" fill="rgb(218,128,7)" fg:x="3990" fg:w="1"/><text x="99.6769%" y="271.50"></text></g><g><title>rand_chacha::guts::init_chacha::fn_impl (1 samples, 0.02%)</title><rect x="99.4269%" y="245" width="0.0249%" height="15" fill="rgb(226,216,39)" fg:x="3990" fg:w="1"/><text x="99.6769%" y="255.50"></text></g><g><title>rand::rng::Rng::gen (155 samples, 3.86%)</title><rect x="95.6143%" y="469" width="3.8624%" height="15" fill="rgb(243,47,51)" fg:x="3837" fg:w="155"/><text x="95.8643%" y="479.50">rand..</text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;usize&gt; for rand::distributions::Standard&gt;::sample (155 samples, 3.86%)</title><rect x="95.6143%" y="453" width="3.8624%" height="15" fill="rgb(241,183,40)" fg:x="3837" fg:w="155"/><text x="95.8643%" y="463.50">rand..</text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (155 samples, 3.86%)</title><rect x="95.6143%" y="437" width="3.8624%" height="15" fill="rgb(231,217,32)" fg:x="3837" fg:w="155"/><text x="95.8643%" y="447.50">&lt;ran..</text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (155 samples, 3.86%)</title><rect x="95.6143%" y="421" width="3.8624%" height="15" fill="rgb(229,61,38)" fg:x="3837" fg:w="155"/><text x="95.8643%" y="431.50">&lt;ran..</text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (155 samples, 3.86%)</title><rect x="95.6143%" y="405" width="3.8624%" height="15" fill="rgb(225,210,5)" fg:x="3837" fg:w="155"/><text x="95.8643%" y="415.50">&lt;ran..</text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (100 samples, 2.49%)</title><rect x="96.9848%" y="389" width="2.4919%" height="15" fill="rgb(231,79,45)" fg:x="3892" fg:w="100"/><text x="97.2348%" y="399.50">ra..</text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (100 samples, 2.49%)</title><rect x="96.9848%" y="373" width="2.4919%" height="15" fill="rgb(224,100,7)" fg:x="3892" fg:w="100"/><text x="97.2348%" y="383.50">&lt;r..</text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (1 samples, 0.02%)</title><rect x="99.4518%" y="357" width="0.0249%" height="15" fill="rgb(241,198,18)" fg:x="3991" fg:w="1"/><text x="99.7018%" y="367.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (1 samples, 0.02%)</title><rect x="99.4518%" y="341" width="0.0249%" height="15" fill="rgb(252,97,53)" fg:x="3991" fg:w="1"/><text x="99.7018%" y="351.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (1 samples, 0.02%)</title><rect x="99.4518%" y="325" width="0.0249%" height="15" fill="rgb(220,88,7)" fg:x="3991" fg:w="1"/><text x="99.7018%" y="335.50"></text></g><g><title>rand_chacha::guts::round (1 samples, 0.02%)</title><rect x="99.4518%" y="309" width="0.0249%" height="15" fill="rgb(213,176,14)" fg:x="3991" fg:w="1"/><text x="99.7018%" y="319.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (1 samples, 0.02%)</title><rect x="99.4518%" y="293" width="0.0249%" height="15" fill="rgb(246,73,7)" fg:x="3991" fg:w="1"/><text x="99.7018%" y="303.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (1 samples, 0.02%)</title><rect x="99.4518%" y="277" width="0.0249%" height="15" fill="rgb(245,64,36)" fg:x="3991" fg:w="1"/><text x="99.7018%" y="287.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (1 samples, 0.02%)</title><rect x="99.4518%" y="261" width="0.0249%" height="15" fill="rgb(245,80,10)" fg:x="3991" fg:w="1"/><text x="99.7018%" y="271.50"></text></g><g><title>montecarlo::state::State::thermalize (2,921 samples, 72.79%)</title><rect x="27.0620%" y="565" width="72.7884%" height="15" fill="rgb(232,107,50)" fg:x="1086" fg:w="2921"/><text x="27.3120%" y="575.50">montecarlo::state::State::thermalize</text></g><g><title>montecarlo::state::State::off_diagonal_update (1,080 samples, 26.91%)</title><rect x="72.9380%" y="549" width="26.9125%" height="15" fill="rgb(253,3,0)" fg:x="2927" fg:w="1080"/><text x="73.1880%" y="559.50">montecarlo::state::State::off_diagonal_upda..</text></g><g><title>rand::rng::Rng::gen_range (235 samples, 5.86%)</title><rect x="93.9945%" y="533" width="5.8560%" height="15" fill="rgb(212,99,53)" fg:x="3772" fg:w="235"/><text x="94.2445%" y="543.50">rand::r..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (228 samples, 5.68%)</title><rect x="94.1690%" y="517" width="5.6815%" height="15" fill="rgb(249,111,54)" fg:x="3779" fg:w="228"/><text x="94.4190%" y="527.50">&lt;core::..</text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (228 samples, 5.68%)</title><rect x="94.1690%" y="501" width="5.6815%" height="15" fill="rgb(249,55,30)" fg:x="3779" fg:w="228"/><text x="94.4190%" y="511.50">&lt;rand::..</text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (227 samples, 5.66%)</title><rect x="94.1939%" y="485" width="5.6566%" height="15" fill="rgb(237,47,42)" fg:x="3780" fg:w="227"/><text x="94.4439%" y="495.50">&lt;rand::..</text></g><g><title>rand::rng::Rng::gen_range (15 samples, 0.37%)</title><rect x="99.4767%" y="469" width="0.3738%" height="15" fill="rgb(211,20,18)" fg:x="3992" fg:w="15"/><text x="99.7267%" y="479.50"></text></g><g><title>montecarlo (4,008 samples, 99.88%)</title><rect x="0.0000%" y="725" width="99.8754%" height="15" fill="rgb(231,203,46)" fg:x="0" fg:w="4008"/><text x="0.2500%" y="735.50">montecarlo</text></g><g><title>_start (3,788 samples, 94.39%)</title><rect x="5.4822%" y="709" width="94.3932%" height="15" fill="rgb(237,142,3)" fg:x="220" fg:w="3788"/><text x="5.7322%" y="719.50">_start</text></g><g><title>__libc_start_main_impl (3,788 samples, 94.39%)</title><rect x="5.4822%" y="693" width="94.3932%" height="15" fill="rgb(241,107,1)" fg:x="220" fg:w="3788"/><text x="5.7322%" y="703.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (3,788 samples, 94.39%)</title><rect x="5.4822%" y="677" width="94.3932%" height="15" fill="rgb(229,83,13)" fg:x="220" fg:w="3788"/><text x="5.7322%" y="687.50">__libc_start_call_main</text></g><g><title>main (3,788 samples, 94.39%)</title><rect x="5.4822%" y="661" width="94.3932%" height="15" fill="rgb(241,91,40)" fg:x="220" fg:w="3788"/><text x="5.7322%" y="671.50">main</text></g><g><title>std::rt::lang_start_internal (3,788 samples, 94.39%)</title><rect x="5.4822%" y="645" width="94.3932%" height="15" fill="rgb(225,3,45)" fg:x="220" fg:w="3788"/><text x="5.7322%" y="655.50">std::rt::lang_start_internal</text></g><g><title>std::rt::lang_start::_{{closure}} (3,788 samples, 94.39%)</title><rect x="5.4822%" y="629" width="94.3932%" height="15" fill="rgb(244,223,14)" fg:x="220" fg:w="3788"/><text x="5.7322%" y="639.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,788 samples, 94.39%)</title><rect x="5.4822%" y="613" width="94.3932%" height="15" fill="rgb(224,124,37)" fg:x="220" fg:w="3788"/><text x="5.7322%" y="623.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (3,788 samples, 94.39%)</title><rect x="5.4822%" y="597" width="94.3932%" height="15" fill="rgb(251,171,30)" fg:x="220" fg:w="3788"/><text x="5.7322%" y="607.50">core::ops::function::FnOnce::call_once</text></g><g><title>montecarlo::main (3,788 samples, 94.39%)</title><rect x="5.4822%" y="581" width="94.3932%" height="15" fill="rgb(236,46,54)" fg:x="220" fg:w="3788"/><text x="5.7322%" y="591.50">montecarlo::main</text></g><g><title>std::io::stdio::_print (1 samples, 0.02%)</title><rect x="99.8505%" y="565" width="0.0249%" height="15" fill="rgb(245,213,5)" fg:x="4007" fg:w="1"/><text x="100.1005%" y="575.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.02%)</title><rect x="99.8505%" y="549" width="0.0249%" height="15" fill="rgb(230,144,27)" fg:x="4007" fg:w="1"/><text x="100.1005%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.02%)</title><rect x="99.8505%" y="533" width="0.0249%" height="15" fill="rgb(220,86,6)" fg:x="4007" fg:w="1"/><text x="100.1005%" y="543.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="99.8505%" y="517" width="0.0249%" height="15" fill="rgb(240,20,13)" fg:x="4007" fg:w="1"/><text x="100.1005%" y="527.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.02%)</title><rect x="99.8505%" y="501" width="0.0249%" height="15" fill="rgb(217,89,34)" fg:x="4007" fg:w="1"/><text x="100.1005%" y="511.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (1 samples, 0.02%)</title><rect x="99.8505%" y="485" width="0.0249%" height="15" fill="rgb(229,13,5)" fg:x="4007" fg:w="1"/><text x="100.1005%" y="495.50"></text></g><g><title>__GI___libc_write (1 samples, 0.02%)</title><rect x="99.8505%" y="469" width="0.0249%" height="15" fill="rgb(244,67,35)" fg:x="4007" fg:w="1"/><text x="100.1005%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.8505%" y="453" width="0.0249%" height="15" fill="rgb(221,40,2)" fg:x="4007" fg:w="1"/><text x="100.1005%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.8505%" y="437" width="0.0249%" height="15" fill="rgb(237,157,21)" fg:x="4007" fg:w="1"/><text x="100.1005%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.8505%" y="421" width="0.0249%" height="15" fill="rgb(222,94,11)" fg:x="4007" fg:w="1"/><text x="100.1005%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.8505%" y="405" width="0.0249%" height="15" fill="rgb(249,113,6)" fg:x="4007" fg:w="1"/><text x="100.1005%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.8505%" y="389" width="0.0249%" height="15" fill="rgb(238,137,36)" fg:x="4007" fg:w="1"/><text x="100.1005%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.8505%" y="373" width="0.0249%" height="15" fill="rgb(210,102,26)" fg:x="4007" fg:w="1"/><text x="100.1005%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.8505%" y="357" width="0.0249%" height="15" fill="rgb(218,30,30)" fg:x="4007" fg:w="1"/><text x="100.1005%" y="367.50"></text></g><g><title>all (4,013 samples, 100%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(214,67,26)" fg:x="0" fg:w="4013"/><text x="0.2500%" y="751.50"></text></g><g><title>perf-exec (5 samples, 0.12%)</title><rect x="99.8754%" y="725" width="0.1246%" height="15" fill="rgb(251,9,53)" fg:x="4008" fg:w="5"/><text x="100.1254%" y="735.50"></text></g><g><title>[unknown] (5 samples, 0.12%)</title><rect x="99.8754%" y="709" width="0.1246%" height="15" fill="rgb(228,204,25)" fg:x="4008" fg:w="5"/><text x="100.1254%" y="719.50"></text></g><g><title>[unknown] (5 samples, 0.12%)</title><rect x="99.8754%" y="693" width="0.1246%" height="15" fill="rgb(207,153,8)" fg:x="4008" fg:w="5"/><text x="100.1254%" y="703.50"></text></g><g><title>[unknown] (5 samples, 0.12%)</title><rect x="99.8754%" y="677" width="0.1246%" height="15" fill="rgb(242,9,16)" fg:x="4008" fg:w="5"/><text x="100.1254%" y="687.50"></text></g><g><title>[unknown] (5 samples, 0.12%)</title><rect x="99.8754%" y="661" width="0.1246%" height="15" fill="rgb(217,211,10)" fg:x="4008" fg:w="5"/><text x="100.1254%" y="671.50"></text></g><g><title>[unknown] (5 samples, 0.12%)</title><rect x="99.8754%" y="645" width="0.1246%" height="15" fill="rgb(219,228,52)" fg:x="4008" fg:w="5"/><text x="100.1254%" y="655.50"></text></g><g><title>[unknown] (5 samples, 0.12%)</title><rect x="99.8754%" y="629" width="0.1246%" height="15" fill="rgb(231,92,29)" fg:x="4008" fg:w="5"/><text x="100.1254%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.12%)</title><rect x="99.8754%" y="613" width="0.1246%" height="15" fill="rgb(232,8,23)" fg:x="4008" fg:w="5"/><text x="100.1254%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.12%)</title><rect x="99.8754%" y="597" width="0.1246%" height="15" fill="rgb(216,211,34)" fg:x="4008" fg:w="5"/><text x="100.1254%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.12%)</title><rect x="99.8754%" y="581" width="0.1246%" height="15" fill="rgb(236,151,0)" fg:x="4008" fg:w="5"/><text x="100.1254%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.12%)</title><rect x="99.8754%" y="565" width="0.1246%" height="15" fill="rgb(209,168,3)" fg:x="4008" fg:w="5"/><text x="100.1254%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.12%)</title><rect x="99.8754%" y="549" width="0.1246%" height="15" fill="rgb(208,129,28)" fg:x="4008" fg:w="5"/><text x="100.1254%" y="559.50"></text></g><g><title>[unknown] (4 samples, 0.10%)</title><rect x="99.9003%" y="533" width="0.0997%" height="15" fill="rgb(229,78,22)" fg:x="4009" fg:w="4"/><text x="100.1503%" y="543.50"></text></g><g><title>[unknown] (4 samples, 0.10%)</title><rect x="99.9003%" y="517" width="0.0997%" height="15" fill="rgb(228,187,13)" fg:x="4009" fg:w="4"/><text x="100.1503%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.10%)</title><rect x="99.9003%" y="501" width="0.0997%" height="15" fill="rgb(240,119,24)" fg:x="4009" fg:w="4"/><text x="100.1503%" y="511.50"></text></g><g><title>[unknown] (4 samples, 0.10%)</title><rect x="99.9003%" y="485" width="0.0997%" height="15" fill="rgb(209,194,42)" fg:x="4009" fg:w="4"/><text x="100.1503%" y="495.50"></text></g></svg></svg>