<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="742" onload="init(evt)" viewBox="0 0 1200 742" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="742" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="725.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="725.00"> </text><svg id="frames" x="10" width="1180" total_samples="65617"><g><title>_int_free (19 samples, 0.03%)</title><rect x="0.0091%" y="645" width="0.0290%" height="15" fill="rgb(227,0,7)" fg:x="6" fg:w="19"/><text x="0.2591%" y="655.50"></text></g><g><title>_int_realloc (17 samples, 0.03%)</title><rect x="0.0411%" y="645" width="0.0259%" height="15" fill="rgb(217,0,24)" fg:x="27" fg:w="17"/><text x="0.2911%" y="655.50"></text></g><g><title>rand_chacha::guts::refill_wide (19 samples, 0.03%)</title><rect x="0.0701%" y="645" width="0.0290%" height="15" fill="rgb(221,193,54)" fg:x="46" fg:w="19"/><text x="0.3201%" y="655.50"></text></g><g><title>[[heap]] (69 samples, 0.11%)</title><rect x="0.0000%" y="661" width="0.1052%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="69"/><text x="0.2500%" y="671.50"></text></g><g><title>__GI___libc_realloc (16 samples, 0.02%)</title><rect x="0.1189%" y="645" width="0.0244%" height="15" fill="rgb(208,68,35)" fg:x="78" fg:w="16"/><text x="0.3689%" y="655.50"></text></g><g><title>__rdl_realloc (9 samples, 0.01%)</title><rect x="0.1448%" y="645" width="0.0137%" height="15" fill="rgb(232,128,0)" fg:x="95" fg:w="9"/><text x="0.3948%" y="655.50"></text></g><g><title>_int_free (8 samples, 0.01%)</title><rect x="0.1585%" y="645" width="0.0122%" height="15" fill="rgb(207,160,47)" fg:x="104" fg:w="8"/><text x="0.4085%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.02%)</title><rect x="0.1707%" y="645" width="0.0198%" height="15" fill="rgb(228,23,34)" fg:x="112" fg:w="13"/><text x="0.4207%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (13 samples, 0.02%)</title><rect x="0.1707%" y="629" width="0.0198%" height="15" fill="rgb(218,30,26)" fg:x="112" fg:w="13"/><text x="0.4207%" y="639.50"></text></g><g><title>alloc::alloc::Global::grow_impl (13 samples, 0.02%)</title><rect x="0.1707%" y="613" width="0.0198%" height="15" fill="rgb(220,122,19)" fg:x="112" fg:w="13"/><text x="0.4207%" y="623.50"></text></g><g><title>alloc::alloc::realloc (13 samples, 0.02%)</title><rect x="0.1707%" y="597" width="0.0198%" height="15" fill="rgb(250,228,42)" fg:x="112" fg:w="13"/><text x="0.4207%" y="607.50"></text></g><g><title>montecarlo::lattice::Lattice::random_edge (19 samples, 0.03%)</title><rect x="0.2499%" y="629" width="0.0290%" height="15" fill="rgb(240,193,28)" fg:x="164" fg:w="19"/><text x="0.4999%" y="639.50"></text></g><g><title>rand::rng::Rng::sample (19 samples, 0.03%)</title><rect x="0.2499%" y="613" width="0.0290%" height="15" fill="rgb(216,20,37)" fg:x="164" fg:w="19"/><text x="0.4999%" y="623.50"></text></g><g><title>&lt;rand::distributions::uniform::Uniform&lt;X&gt; as rand::distributions::distribution::Distribution&lt;X&gt;&gt;::sample (19 samples, 0.03%)</title><rect x="0.2499%" y="597" width="0.0290%" height="15" fill="rgb(206,188,39)" fg:x="164" fg:w="19"/><text x="0.4999%" y="607.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample (19 samples, 0.03%)</title><rect x="0.2499%" y="581" width="0.0290%" height="15" fill="rgb(217,207,13)" fg:x="164" fg:w="19"/><text x="0.4999%" y="591.50"></text></g><g><title>rand::rng::Rng::gen (19 samples, 0.03%)</title><rect x="0.2499%" y="565" width="0.0290%" height="15" fill="rgb(231,73,38)" fg:x="164" fg:w="19"/><text x="0.4999%" y="575.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;usize&gt; for rand::distributions::Standard&gt;::sample (19 samples, 0.03%)</title><rect x="0.2499%" y="549" width="0.0290%" height="15" fill="rgb(225,20,46)" fg:x="164" fg:w="19"/><text x="0.4999%" y="559.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (19 samples, 0.03%)</title><rect x="0.2499%" y="533" width="0.0290%" height="15" fill="rgb(210,31,41)" fg:x="164" fg:w="19"/><text x="0.4999%" y="543.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (19 samples, 0.03%)</title><rect x="0.2499%" y="517" width="0.0290%" height="15" fill="rgb(221,200,47)" fg:x="164" fg:w="19"/><text x="0.4999%" y="527.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (19 samples, 0.03%)</title><rect x="0.2499%" y="501" width="0.0290%" height="15" fill="rgb(226,26,5)" fg:x="164" fg:w="19"/><text x="0.4999%" y="511.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (19 samples, 0.03%)</title><rect x="0.2499%" y="485" width="0.0290%" height="15" fill="rgb(249,33,26)" fg:x="164" fg:w="19"/><text x="0.4999%" y="495.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (19 samples, 0.03%)</title><rect x="0.2499%" y="469" width="0.0290%" height="15" fill="rgb(235,183,28)" fg:x="164" fg:w="19"/><text x="0.4999%" y="479.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (7 samples, 0.01%)</title><rect x="0.2682%" y="453" width="0.0107%" height="15" fill="rgb(221,5,38)" fg:x="176" fg:w="7"/><text x="0.5182%" y="463.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (7 samples, 0.01%)</title><rect x="0.2682%" y="437" width="0.0107%" height="15" fill="rgb(247,18,42)" fg:x="176" fg:w="7"/><text x="0.5182%" y="447.50"></text></g><g><title>montecarlo::state::State::diagonal_update (86 samples, 0.13%)</title><rect x="0.1996%" y="645" width="0.1311%" height="15" fill="rgb(241,131,45)" fg:x="131" fg:w="86"/><text x="0.4496%" y="655.50"></text></g><g><title>rand::rng::Rng::gen (34 samples, 0.05%)</title><rect x="0.2789%" y="629" width="0.0518%" height="15" fill="rgb(249,31,29)" fg:x="183" fg:w="34"/><text x="0.5289%" y="639.50"></text></g><g><title>rand::distributions::float::&lt;impl rand::distributions::distribution::Distribution&lt;f64&gt; for rand::distributions::Standard&gt;::sample (34 samples, 0.05%)</title><rect x="0.2789%" y="613" width="0.0518%" height="15" fill="rgb(225,111,53)" fg:x="183" fg:w="34"/><text x="0.5289%" y="623.50"></text></g><g><title>rand::rng::Rng::gen (34 samples, 0.05%)</title><rect x="0.2789%" y="597" width="0.0518%" height="15" fill="rgb(238,160,17)" fg:x="183" fg:w="34"/><text x="0.5289%" y="607.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (34 samples, 0.05%)</title><rect x="0.2789%" y="581" width="0.0518%" height="15" fill="rgb(214,148,48)" fg:x="183" fg:w="34"/><text x="0.5289%" y="591.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (34 samples, 0.05%)</title><rect x="0.2789%" y="565" width="0.0518%" height="15" fill="rgb(232,36,49)" fg:x="183" fg:w="34"/><text x="0.5289%" y="575.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (34 samples, 0.05%)</title><rect x="0.2789%" y="549" width="0.0518%" height="15" fill="rgb(209,103,24)" fg:x="183" fg:w="34"/><text x="0.5289%" y="559.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (34 samples, 0.05%)</title><rect x="0.2789%" y="533" width="0.0518%" height="15" fill="rgb(229,88,8)" fg:x="183" fg:w="34"/><text x="0.5289%" y="543.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (34 samples, 0.05%)</title><rect x="0.2789%" y="517" width="0.0518%" height="15" fill="rgb(213,181,19)" fg:x="183" fg:w="34"/><text x="0.5289%" y="527.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (34 samples, 0.05%)</title><rect x="0.2789%" y="501" width="0.0518%" height="15" fill="rgb(254,191,54)" fg:x="183" fg:w="34"/><text x="0.5289%" y="511.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (16 samples, 0.02%)</title><rect x="0.3063%" y="485" width="0.0244%" height="15" fill="rgb(241,83,37)" fg:x="201" fg:w="16"/><text x="0.5563%" y="495.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (16 samples, 0.02%)</title><rect x="0.3063%" y="469" width="0.0244%" height="15" fill="rgb(233,36,39)" fg:x="201" fg:w="16"/><text x="0.5563%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (39 samples, 0.06%)</title><rect x="0.3338%" y="629" width="0.0594%" height="15" fill="rgb(226,3,54)" fg:x="219" fg:w="39"/><text x="0.5838%" y="639.50"></text></g><g><title>[[stack]] (350 samples, 0.53%)</title><rect x="0.1052%" y="661" width="0.5334%" height="15" fill="rgb(245,192,40)" fg:x="69" fg:w="350"/><text x="0.3552%" y="671.50"></text></g><g><title>montecarlo::state::State::off_diagonal_update (202 samples, 0.31%)</title><rect x="0.3307%" y="645" width="0.3078%" height="15" fill="rgb(238,167,29)" fg:x="217" fg:w="202"/><text x="0.5807%" y="655.50"></text></g><g><title>rand::rng::Rng::gen_range (155 samples, 0.24%)</title><rect x="0.4023%" y="629" width="0.2362%" height="15" fill="rgb(232,182,51)" fg:x="264" fg:w="155"/><text x="0.6523%" y="639.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (155 samples, 0.24%)</title><rect x="0.4023%" y="613" width="0.2362%" height="15" fill="rgb(231,60,39)" fg:x="264" fg:w="155"/><text x="0.6523%" y="623.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (155 samples, 0.24%)</title><rect x="0.4023%" y="597" width="0.2362%" height="15" fill="rgb(208,69,12)" fg:x="264" fg:w="155"/><text x="0.6523%" y="607.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (155 samples, 0.24%)</title><rect x="0.4023%" y="581" width="0.2362%" height="15" fill="rgb(235,93,37)" fg:x="264" fg:w="155"/><text x="0.6523%" y="591.50"></text></g><g><title>__GI___libc_free (12 samples, 0.02%)</title><rect x="0.6538%" y="645" width="0.0183%" height="15" fill="rgb(213,116,39)" fg:x="429" fg:w="12"/><text x="0.9038%" y="655.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.01%)</title><rect x="0.6721%" y="645" width="0.0122%" height="15" fill="rgb(222,207,29)" fg:x="441" fg:w="8"/><text x="0.9221%" y="655.50"></text></g><g><title>__GI___libc_realloc (20 samples, 0.03%)</title><rect x="0.6843%" y="645" width="0.0305%" height="15" fill="rgb(206,96,30)" fg:x="449" fg:w="20"/><text x="0.9343%" y="655.50"></text></g><g><title>_int_free (8 samples, 0.01%)</title><rect x="0.7285%" y="645" width="0.0122%" height="15" fill="rgb(218,138,4)" fg:x="478" fg:w="8"/><text x="0.9785%" y="655.50"></text></g><g><title>_int_malloc (12 samples, 0.02%)</title><rect x="0.7407%" y="645" width="0.0183%" height="15" fill="rgb(250,191,14)" fg:x="486" fg:w="12"/><text x="0.9907%" y="655.50"></text></g><g><title>_int_realloc (27 samples, 0.04%)</title><rect x="0.7589%" y="645" width="0.0411%" height="15" fill="rgb(239,60,40)" fg:x="498" fg:w="27"/><text x="1.0089%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (30 samples, 0.05%)</title><rect x="0.8001%" y="645" width="0.0457%" height="15" fill="rgb(206,27,48)" fg:x="525" fg:w="30"/><text x="1.0501%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.02%)</title><rect x="0.8260%" y="629" width="0.0198%" height="15" fill="rgb(225,35,8)" fg:x="542" fg:w="13"/><text x="1.0760%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (21 samples, 0.03%)</title><rect x="0.8458%" y="645" width="0.0320%" height="15" fill="rgb(250,213,24)" fg:x="555" fg:w="21"/><text x="1.0958%" y="655.50"></text></g><g><title>id_collections::id_vec::IdVec&lt;I,T&gt;::push (50 samples, 0.08%)</title><rect x="0.8778%" y="645" width="0.0762%" height="15" fill="rgb(247,123,22)" fg:x="576" fg:w="50"/><text x="1.1278%" y="655.50"></text></g><g><title>rand::rng::Rng::gen (235 samples, 0.36%)</title><rect x="0.9601%" y="645" width="0.3581%" height="15" fill="rgb(231,138,38)" fg:x="630" fg:w="235"/><text x="1.2101%" y="655.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;usize&gt; for rand::distributions::Standard&gt;::sample (17 samples, 0.03%)</title><rect x="1.2923%" y="629" width="0.0259%" height="15" fill="rgb(231,145,46)" fg:x="848" fg:w="17"/><text x="1.5423%" y="639.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (17 samples, 0.03%)</title><rect x="1.2923%" y="613" width="0.0259%" height="15" fill="rgb(251,118,11)" fg:x="848" fg:w="17"/><text x="1.5423%" y="623.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (17 samples, 0.03%)</title><rect x="1.2923%" y="597" width="0.0259%" height="15" fill="rgb(217,147,25)" fg:x="848" fg:w="17"/><text x="1.5423%" y="607.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (17 samples, 0.03%)</title><rect x="1.2923%" y="581" width="0.0259%" height="15" fill="rgb(247,81,37)" fg:x="848" fg:w="17"/><text x="1.5423%" y="591.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (17 samples, 0.03%)</title><rect x="1.2923%" y="565" width="0.0259%" height="15" fill="rgb(209,12,38)" fg:x="848" fg:w="17"/><text x="1.5423%" y="575.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (17 samples, 0.03%)</title><rect x="1.2923%" y="549" width="0.0259%" height="15" fill="rgb(227,1,9)" fg:x="848" fg:w="17"/><text x="1.5423%" y="559.50"></text></g><g><title>rand::rngs::adapter::reseeding::fork::get_fork_counter (36 samples, 0.05%)</title><rect x="1.3183%" y="645" width="0.0549%" height="15" fill="rgb(248,47,43)" fg:x="865" fg:w="36"/><text x="1.5683%" y="655.50"></text></g><g><title>rand_chacha::guts::refill_wide (41 samples, 0.06%)</title><rect x="1.3731%" y="645" width="0.0625%" height="15" fill="rgb(221,10,30)" fg:x="901" fg:w="41"/><text x="1.6231%" y="655.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (34 samples, 0.05%)</title><rect x="1.4356%" y="645" width="0.0518%" height="15" fill="rgb(210,229,1)" fg:x="942" fg:w="34"/><text x="1.6856%" y="655.50"></text></g><g><title>[unknown] (558 samples, 0.85%)</title><rect x="0.6401%" y="661" width="0.8504%" height="15" fill="rgb(222,148,37)" fg:x="420" fg:w="558"/><text x="0.8901%" y="671.50"></text></g><g><title>_ZN10montecarlo5state5State15diagonal_update17hbdb7f8e683cf0a42E.llvm.13779910845809399678 (49 samples, 0.07%)</title><rect x="1.4920%" y="501" width="0.0747%" height="15" fill="rgb(234,67,33)" fg:x="979" fg:w="49"/><text x="1.7420%" y="511.50"></text></g><g><title>_ZN10montecarlo5state5State19off_diagonal_update17h2ffef6cd5f5a098eE.llvm.13779910845809399678 (11 samples, 0.02%)</title><rect x="1.5667%" y="501" width="0.0168%" height="15" fill="rgb(247,98,35)" fg:x="1028" fg:w="11"/><text x="1.8167%" y="511.50"></text></g><g><title>&lt;montecarlo::state::Operator as core::clone::Clone&gt;::clone (106 samples, 0.16%)</title><rect x="8.9961%" y="469" width="0.1615%" height="15" fill="rgb(247,138,52)" fg:x="5903" fg:w="106"/><text x="9.2461%" y="479.50"></text></g><g><title>&lt;montecarlo::lattice::Edge as core::clone::Clone&gt;::clone (106 samples, 0.16%)</title><rect x="8.9961%" y="453" width="0.1615%" height="15" fill="rgb(213,79,30)" fg:x="5903" fg:w="106"/><text x="9.2461%" y="463.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (609 samples, 0.93%)</title><rect x="8.2326%" y="485" width="0.9281%" height="15" fill="rgb(246,177,23)" fg:x="5402" fg:w="609"/><text x="8.4826%" y="495.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (258 samples, 0.39%)</title><rect x="9.1607%" y="437" width="0.3932%" height="15" fill="rgb(230,62,27)" fg:x="6011" fg:w="258"/><text x="9.4107%" y="447.50"></text></g><g><title>&lt;id_collections::id_vec::IdVec&lt;I,T&gt; as core::ops::index::Index&lt;J&gt;&gt;::index (269 samples, 0.41%)</title><rect x="9.1607%" y="485" width="0.4100%" height="15" fill="rgb(216,154,8)" fg:x="6011" fg:w="269"/><text x="9.4107%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (269 samples, 0.41%)</title><rect x="9.1607%" y="469" width="0.4100%" height="15" fill="rgb(244,35,45)" fg:x="6011" fg:w="269"/><text x="9.4107%" y="479.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (269 samples, 0.41%)</title><rect x="9.1607%" y="453" width="0.4100%" height="15" fill="rgb(251,115,12)" fg:x="6011" fg:w="269"/><text x="9.4107%" y="463.50"></text></g><g><title>_ZN10montecarlo5state5State15diagonal_update17hbdb7f8e683cf0a42E.llvm.13779910845809399678 (11 samples, 0.02%)</title><rect x="9.5539%" y="437" width="0.0168%" height="15" fill="rgb(240,54,50)" fg:x="6269" fg:w="11"/><text x="9.8039%" y="447.50"></text></g><g><title>&lt;id_collections::id_vec::IdVec&lt;I,T&gt; as core::ops::index::IndexMut&lt;J&gt;&gt;::index_mut (431 samples, 0.66%)</title><rect x="9.5707%" y="485" width="0.6568%" height="15" fill="rgb(233,84,52)" fg:x="6280" fg:w="431"/><text x="9.8207%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (431 samples, 0.66%)</title><rect x="9.5707%" y="469" width="0.6568%" height="15" fill="rgb(207,117,47)" fg:x="6280" fg:w="431"/><text x="9.8207%" y="479.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (431 samples, 0.66%)</title><rect x="9.5707%" y="453" width="0.6568%" height="15" fill="rgb(249,43,39)" fg:x="6280" fg:w="431"/><text x="9.8207%" y="463.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (431 samples, 0.66%)</title><rect x="9.5707%" y="437" width="0.6568%" height="15" fill="rgb(209,38,44)" fg:x="6280" fg:w="431"/><text x="9.8207%" y="447.50"></text></g><g><title>&lt;montecarlo::lattice::Bipartite_Id_Vec&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="10.2275%" y="485" width="0.0122%" height="15" fill="rgb(236,212,23)" fg:x="6711" fg:w="8"/><text x="10.4775%" y="495.50"></text></g><g><title>&lt;id_collections::id_vec::IdVec&lt;I,T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="10.2275%" y="469" width="0.0122%" height="15" fill="rgb(242,79,21)" fg:x="6711" fg:w="8"/><text x="10.4775%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="10.2275%" y="453" width="0.0122%" height="15" fill="rgb(211,96,35)" fg:x="6711" fg:w="8"/><text x="10.4775%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.01%)</title><rect x="10.2291%" y="437" width="0.0107%" height="15" fill="rgb(253,215,40)" fg:x="6712" fg:w="7"/><text x="10.4791%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.01%)</title><rect x="10.2291%" y="421" width="0.0107%" height="15" fill="rgb(211,81,21)" fg:x="6712" fg:w="7"/><text x="10.4791%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.01%)</title><rect x="10.2291%" y="405" width="0.0107%" height="15" fill="rgb(208,190,38)" fg:x="6712" fg:w="7"/><text x="10.4791%" y="415.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="10.2397%" y="485" width="0.0213%" height="15" fill="rgb(235,213,38)" fg:x="6719" fg:w="14"/><text x="10.4897%" y="495.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="10.2397%" y="469" width="0.0213%" height="15" fill="rgb(237,122,38)" fg:x="6719" fg:w="14"/><text x="10.4897%" y="479.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="10.2397%" y="453" width="0.0213%" height="15" fill="rgb(244,218,35)" fg:x="6719" fg:w="14"/><text x="10.4897%" y="463.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="10.2397%" y="437" width="0.0213%" height="15" fill="rgb(240,68,47)" fg:x="6719" fg:w="14"/><text x="10.4897%" y="447.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="10.2397%" y="421" width="0.0213%" height="15" fill="rgb(210,16,53)" fg:x="6719" fg:w="14"/><text x="10.4897%" y="431.50"></text></g><g><title>[unknown] (13 samples, 0.02%)</title><rect x="10.2412%" y="405" width="0.0198%" height="15" fill="rgb(235,124,12)" fg:x="6720" fg:w="13"/><text x="10.4912%" y="415.50"></text></g><g><title>[unknown] (10 samples, 0.02%)</title><rect x="10.2458%" y="389" width="0.0152%" height="15" fill="rgb(224,169,11)" fg:x="6723" fg:w="10"/><text x="10.4958%" y="399.50"></text></g><g><title>[unknown] (10 samples, 0.02%)</title><rect x="10.2458%" y="373" width="0.0152%" height="15" fill="rgb(250,166,2)" fg:x="6723" fg:w="10"/><text x="10.4958%" y="383.50"></text></g><g><title>[unknown] (10 samples, 0.02%)</title><rect x="10.2458%" y="357" width="0.0152%" height="15" fill="rgb(242,216,29)" fg:x="6723" fg:w="10"/><text x="10.4958%" y="367.50"></text></g><g><title>[unknown] (10 samples, 0.02%)</title><rect x="10.2458%" y="341" width="0.0152%" height="15" fill="rgb(230,116,27)" fg:x="6723" fg:w="10"/><text x="10.4958%" y="351.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="10.2489%" y="325" width="0.0122%" height="15" fill="rgb(228,99,48)" fg:x="6725" fg:w="8"/><text x="10.4989%" y="335.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (185 samples, 0.28%)</title><rect x="10.2672%" y="453" width="0.2819%" height="15" fill="rgb(253,11,6)" fg:x="6737" fg:w="185"/><text x="10.5172%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (185 samples, 0.28%)</title><rect x="10.2672%" y="437" width="0.2819%" height="15" fill="rgb(247,143,39)" fg:x="6737" fg:w="185"/><text x="10.5172%" y="447.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (607 samples, 0.93%)</title><rect x="10.2611%" y="485" width="0.9251%" height="15" fill="rgb(236,97,10)" fg:x="6733" fg:w="607"/><text x="10.5111%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (607 samples, 0.93%)</title><rect x="10.2611%" y="469" width="0.9251%" height="15" fill="rgb(233,208,19)" fg:x="6733" fg:w="607"/><text x="10.5111%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (418 samples, 0.64%)</title><rect x="10.5491%" y="453" width="0.6370%" height="15" fill="rgb(216,164,2)" fg:x="6922" fg:w="418"/><text x="10.7991%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (232 samples, 0.35%)</title><rect x="11.1861%" y="485" width="0.3536%" height="15" fill="rgb(220,129,5)" fg:x="7340" fg:w="232"/><text x="11.4361%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (115 samples, 0.18%)</title><rect x="11.5397%" y="485" width="0.1753%" height="15" fill="rgb(242,17,10)" fg:x="7572" fg:w="115"/><text x="11.7897%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;montecarlo::lattice::Bipartite_Id_Vec&lt;bool&gt;&gt; (8 samples, 0.01%)</title><rect x="11.7150%" y="485" width="0.0122%" height="15" fill="rgb(242,107,0)" fg:x="7687" fg:w="8"/><text x="11.9650%" y="495.50"></text></g><g><title>__GI___libc_free (15 samples, 0.02%)</title><rect x="11.7287%" y="373" width="0.0229%" height="15" fill="rgb(251,28,31)" fg:x="7696" fg:w="15"/><text x="11.9787%" y="383.50"></text></g><g><title>_int_free (8 samples, 0.01%)</title><rect x="11.7393%" y="357" width="0.0122%" height="15" fill="rgb(233,223,10)" fg:x="7703" fg:w="8"/><text x="11.9893%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.03%)</title><rect x="11.7287%" y="405" width="0.0305%" height="15" fill="rgb(215,21,27)" fg:x="7696" fg:w="20"/><text x="11.9787%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.03%)</title><rect x="11.7287%" y="389" width="0.0305%" height="15" fill="rgb(232,23,21)" fg:x="7696" fg:w="20"/><text x="11.9787%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;id_collections::id_vec::IdVec&lt;montecarlo::lattice::Even_Site_Id,montecarlo::state::OperatorId&gt;&gt; (22 samples, 0.03%)</title><rect x="11.7271%" y="469" width="0.0335%" height="15" fill="rgb(244,5,23)" fg:x="7695" fg:w="22"/><text x="11.9771%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;montecarlo::state::OperatorId&gt;&gt; (22 samples, 0.03%)</title><rect x="11.7271%" y="453" width="0.0335%" height="15" fill="rgb(226,81,46)" fg:x="7695" fg:w="22"/><text x="11.9771%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;montecarlo::state::OperatorId&gt;&gt; (22 samples, 0.03%)</title><rect x="11.7271%" y="437" width="0.0335%" height="15" fill="rgb(247,70,30)" fg:x="7695" fg:w="22"/><text x="11.9771%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.03%)</title><rect x="11.7271%" y="421" width="0.0335%" height="15" fill="rgb(212,68,19)" fg:x="7695" fg:w="22"/><text x="11.9771%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;montecarlo::lattice::Bipartite_Id_Vec&lt;montecarlo::state::OperatorId&gt;&gt; (27 samples, 0.04%)</title><rect x="11.7271%" y="485" width="0.0411%" height="15" fill="rgb(240,187,13)" fg:x="7695" fg:w="27"/><text x="11.9771%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.01%)</title><rect x="11.7759%" y="453" width="0.0107%" height="15" fill="rgb(223,113,26)" fg:x="7727" fg:w="7"/><text x="12.0259%" y="463.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hd28e0cdf38b391c3E.llvm.9247018699232294813 (7 samples, 0.01%)</title><rect x="11.8018%" y="405" width="0.0107%" height="15" fill="rgb(206,192,2)" fg:x="7744" fg:w="7"/><text x="12.0518%" y="415.50"></text></g><g><title>_int_malloc (12 samples, 0.02%)</title><rect x="11.8308%" y="309" width="0.0183%" height="15" fill="rgb(241,108,4)" fg:x="7763" fg:w="12"/><text x="12.0808%" y="319.50"></text></g><g><title>_int_realloc (20 samples, 0.03%)</title><rect x="11.8201%" y="325" width="0.0305%" height="15" fill="rgb(247,173,49)" fg:x="7756" fg:w="20"/><text x="12.0701%" y="335.50"></text></g><g><title>__GI___libc_realloc (25 samples, 0.04%)</title><rect x="11.8140%" y="341" width="0.0381%" height="15" fill="rgb(224,114,35)" fg:x="7752" fg:w="25"/><text x="12.0640%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (26 samples, 0.04%)</title><rect x="11.8140%" y="389" width="0.0396%" height="15" fill="rgb(245,159,27)" fg:x="7752" fg:w="26"/><text x="12.0640%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (26 samples, 0.04%)</title><rect x="11.8140%" y="373" width="0.0396%" height="15" fill="rgb(245,172,44)" fg:x="7752" fg:w="26"/><text x="12.0640%" y="383.50"></text></g><g><title>alloc::alloc::realloc (26 samples, 0.04%)</title><rect x="11.8140%" y="357" width="0.0396%" height="15" fill="rgb(236,23,11)" fg:x="7752" fg:w="26"/><text x="12.0640%" y="367.50"></text></g><g><title>id_collections::id_vec::IdVec&lt;I,T&gt;::push (57 samples, 0.09%)</title><rect x="11.7683%" y="485" width="0.0869%" height="15" fill="rgb(205,117,38)" fg:x="7722" fg:w="57"/><text x="12.0183%" y="495.50"></text></g><g><title>id_collections::id_vec::IdVec&lt;I,T&gt;::try_push (56 samples, 0.09%)</title><rect x="11.7698%" y="469" width="0.0853%" height="15" fill="rgb(237,72,25)" fg:x="7723" fg:w="56"/><text x="12.0198%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::try_reserve (45 samples, 0.07%)</title><rect x="11.7866%" y="453" width="0.0686%" height="15" fill="rgb(244,70,9)" fg:x="7734" fg:w="45"/><text x="12.0366%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (45 samples, 0.07%)</title><rect x="11.7866%" y="437" width="0.0686%" height="15" fill="rgb(217,125,39)" fg:x="7734" fg:w="45"/><text x="12.0366%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (41 samples, 0.06%)</title><rect x="11.7927%" y="421" width="0.0625%" height="15" fill="rgb(235,36,10)" fg:x="7738" fg:w="41"/><text x="12.0427%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (27 samples, 0.04%)</title><rect x="11.8140%" y="405" width="0.0411%" height="15" fill="rgb(251,123,47)" fg:x="7752" fg:w="27"/><text x="12.0640%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (27 samples, 0.04%)</title><rect x="11.8552%" y="469" width="0.0411%" height="15" fill="rgb(221,13,13)" fg:x="7779" fg:w="27"/><text x="12.1052%" y="479.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (27 samples, 0.04%)</title><rect x="11.8552%" y="453" width="0.0411%" height="15" fill="rgb(238,131,9)" fg:x="7779" fg:w="27"/><text x="12.1052%" y="463.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (27 samples, 0.04%)</title><rect x="11.8552%" y="437" width="0.0411%" height="15" fill="rgb(211,50,8)" fg:x="7779" fg:w="27"/><text x="12.1052%" y="447.50"></text></g><g><title>&lt;montecarlo::lattice::Edge as core::clone::Clone&gt;::clone (242 samples, 0.37%)</title><rect x="11.8963%" y="469" width="0.3688%" height="15" fill="rgb(245,182,24)" fg:x="7806" fg:w="242"/><text x="12.1463%" y="479.50"></text></g><g><title>&lt;usize as rand::distributions::utils::WideningMultiply&gt;::wmul (72 samples, 0.11%)</title><rect x="12.3093%" y="421" width="0.1097%" height="15" fill="rgb(242,14,37)" fg:x="8077" fg:w="72"/><text x="12.5593%" y="431.50"></text></g><g><title>&lt;u64 as rand::distributions::utils::WideningMultiply&gt;::wmul (72 samples, 0.11%)</title><rect x="12.3093%" y="405" width="0.1097%" height="15" fill="rgb(246,228,12)" fg:x="8077" fg:w="72"/><text x="12.5593%" y="415.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64::_{{closure}} (29 samples, 0.04%)</title><rect x="12.8153%" y="341" width="0.0442%" height="15" fill="rgb(213,55,15)" fg:x="8409" fg:w="29"/><text x="13.0653%" y="351.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,ppv_lite86::x86_64::YesS4,NI&gt; as ppv_lite86::types::Vec4&lt;u32&gt;&gt;::insert (16 samples, 0.02%)</title><rect x="12.8854%" y="229" width="0.0244%" height="15" fill="rgb(209,9,3)" fg:x="8455" fg:w="16"/><text x="13.1354%" y="239.50"></text></g><g><title>core::core_arch::x86::sse41::_mm_insert_epi32 (16 samples, 0.02%)</title><rect x="12.8854%" y="213" width="0.0244%" height="15" fill="rgb(230,59,30)" fg:x="8455" fg:w="16"/><text x="13.1354%" y="223.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (59 samples, 0.09%)</title><rect x="12.9281%" y="165" width="0.0899%" height="15" fill="rgb(209,121,21)" fg:x="8483" fg:w="59"/><text x="13.1781%" y="175.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (61 samples, 0.09%)</title><rect x="12.9281%" y="213" width="0.0930%" height="15" fill="rgb(220,109,13)" fg:x="8483" fg:w="61"/><text x="13.1781%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (61 samples, 0.09%)</title><rect x="12.9281%" y="197" width="0.0930%" height="15" fill="rgb(232,18,1)" fg:x="8483" fg:w="61"/><text x="13.1781%" y="207.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (61 samples, 0.09%)</title><rect x="12.9281%" y="181" width="0.0930%" height="15" fill="rgb(215,41,42)" fg:x="8483" fg:w="61"/><text x="13.1781%" y="191.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::bit::BitXor&gt;::bitxor (29 samples, 0.04%)</title><rect x="13.0210%" y="213" width="0.0442%" height="15" fill="rgb(224,123,36)" fg:x="8544" fg:w="29"/><text x="13.2710%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::bit::BitXor&gt;::bitxor (29 samples, 0.04%)</title><rect x="13.0210%" y="197" width="0.0442%" height="15" fill="rgb(240,125,3)" fg:x="8544" fg:w="29"/><text x="13.2710%" y="207.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (29 samples, 0.04%)</title><rect x="13.0210%" y="181" width="0.0442%" height="15" fill="rgb(205,98,50)" fg:x="8544" fg:w="29"/><text x="13.2710%" y="191.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (30 samples, 0.05%)</title><rect x="13.0652%" y="213" width="0.0457%" height="15" fill="rgb(205,185,37)" fg:x="8573" fg:w="30"/><text x="13.3152%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (30 samples, 0.05%)</title><rect x="13.0652%" y="197" width="0.0457%" height="15" fill="rgb(238,207,15)" fg:x="8573" fg:w="30"/><text x="13.3152%" y="207.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (30 samples, 0.05%)</title><rect x="13.0652%" y="181" width="0.0457%" height="15" fill="rgb(213,199,42)" fg:x="8573" fg:w="30"/><text x="13.3152%" y="191.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (51 samples, 0.08%)</title><rect x="13.1109%" y="181" width="0.0777%" height="15" fill="rgb(235,201,11)" fg:x="8603" fg:w="51"/><text x="13.3609%" y="191.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (56 samples, 0.09%)</title><rect x="13.1109%" y="213" width="0.0853%" height="15" fill="rgb(207,46,11)" fg:x="8603" fg:w="56"/><text x="13.3609%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (56 samples, 0.09%)</title><rect x="13.1109%" y="197" width="0.0853%" height="15" fill="rgb(241,35,35)" fg:x="8603" fg:w="56"/><text x="13.3609%" y="207.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (30 samples, 0.05%)</title><rect x="13.1963%" y="213" width="0.0457%" height="15" fill="rgb(243,32,47)" fg:x="8659" fg:w="30"/><text x="13.4463%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (30 samples, 0.05%)</title><rect x="13.1963%" y="197" width="0.0457%" height="15" fill="rgb(247,202,23)" fg:x="8659" fg:w="30"/><text x="13.4463%" y="207.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (30 samples, 0.05%)</title><rect x="13.1963%" y="181" width="0.0457%" height="15" fill="rgb(219,102,11)" fg:x="8659" fg:w="30"/><text x="13.4463%" y="191.50"></text></g><g><title>rand_chacha::guts::round (253 samples, 0.39%)</title><rect x="12.9281%" y="229" width="0.3856%" height="15" fill="rgb(243,110,44)" fg:x="8483" fg:w="253"/><text x="13.1781%" y="239.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (47 samples, 0.07%)</title><rect x="13.2420%" y="213" width="0.0716%" height="15" fill="rgb(222,74,54)" fg:x="8689" fg:w="47"/><text x="13.4920%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (47 samples, 0.07%)</title><rect x="13.2420%" y="197" width="0.0716%" height="15" fill="rgb(216,99,12)" fg:x="8689" fg:w="47"/><text x="13.4920%" y="207.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (47 samples, 0.07%)</title><rect x="13.2420%" y="181" width="0.0716%" height="15" fill="rgb(226,22,26)" fg:x="8689" fg:w="47"/><text x="13.4920%" y="191.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (8 samples, 0.01%)</title><rect x="13.3136%" y="213" width="0.0122%" height="15" fill="rgb(217,163,10)" fg:x="8736" fg:w="8"/><text x="13.5636%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (8 samples, 0.01%)</title><rect x="13.3136%" y="197" width="0.0122%" height="15" fill="rgb(213,25,53)" fg:x="8736" fg:w="8"/><text x="13.5636%" y="207.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (8 samples, 0.01%)</title><rect x="13.3136%" y="181" width="0.0122%" height="15" fill="rgb(252,105,26)" fg:x="8736" fg:w="8"/><text x="13.5636%" y="191.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (299 samples, 0.46%)</title><rect x="12.8747%" y="277" width="0.4557%" height="15" fill="rgb(220,39,43)" fg:x="8448" fg:w="299"/><text x="13.1247%" y="287.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (299 samples, 0.46%)</title><rect x="12.8747%" y="261" width="0.4557%" height="15" fill="rgb(229,68,48)" fg:x="8448" fg:w="299"/><text x="13.1247%" y="271.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (299 samples, 0.46%)</title><rect x="12.8747%" y="245" width="0.4557%" height="15" fill="rgb(252,8,32)" fg:x="8448" fg:w="299"/><text x="13.1247%" y="255.50"></text></g><g><title>rand_chacha::guts::undiagonalize (11 samples, 0.02%)</title><rect x="13.3136%" y="229" width="0.0168%" height="15" fill="rgb(223,20,43)" fg:x="8736" fg:w="11"/><text x="13.5636%" y="239.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (307 samples, 0.47%)</title><rect x="12.8640%" y="309" width="0.4679%" height="15" fill="rgb(229,81,49)" fg:x="8441" fg:w="307"/><text x="13.1140%" y="319.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (307 samples, 0.47%)</title><rect x="12.8640%" y="293" width="0.4679%" height="15" fill="rgb(236,28,36)" fg:x="8441" fg:w="307"/><text x="13.1140%" y="303.50"></text></g><g><title>montecarlo::lattice::Lattice::random_edge (974 samples, 1.48%)</title><rect x="11.8552%" y="485" width="1.4844%" height="15" fill="rgb(249,185,26)" fg:x="7779" fg:w="974"/><text x="12.1052%" y="495.50"></text></g><g><title>rand::rng::Rng::sample (705 samples, 1.07%)</title><rect x="12.2651%" y="469" width="1.0744%" height="15" fill="rgb(249,174,33)" fg:x="8048" fg:w="705"/><text x="12.5151%" y="479.50"></text></g><g><title>&lt;rand::distributions::uniform::Uniform&lt;X&gt; as rand::distributions::distribution::Distribution&lt;X&gt;&gt;::sample (705 samples, 1.07%)</title><rect x="12.2651%" y="453" width="1.0744%" height="15" fill="rgb(233,201,37)" fg:x="8048" fg:w="705"/><text x="12.5151%" y="463.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample (705 samples, 1.07%)</title><rect x="12.2651%" y="437" width="1.0744%" height="15" fill="rgb(221,78,26)" fg:x="8048" fg:w="705"/><text x="12.5151%" y="447.50"></text></g><g><title>rand::rng::Rng::gen (600 samples, 0.91%)</title><rect x="12.4251%" y="421" width="0.9144%" height="15" fill="rgb(250,127,30)" fg:x="8153" fg:w="600"/><text x="12.6751%" y="431.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;usize&gt; for rand::distributions::Standard&gt;::sample (600 samples, 0.91%)</title><rect x="12.4251%" y="405" width="0.9144%" height="15" fill="rgb(230,49,44)" fg:x="8153" fg:w="600"/><text x="12.6751%" y="415.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (600 samples, 0.91%)</title><rect x="12.4251%" y="389" width="0.9144%" height="15" fill="rgb(229,67,23)" fg:x="8153" fg:w="600"/><text x="12.6751%" y="399.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (600 samples, 0.91%)</title><rect x="12.4251%" y="373" width="0.9144%" height="15" fill="rgb(249,83,47)" fg:x="8153" fg:w="600"/><text x="12.6751%" y="383.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (600 samples, 0.91%)</title><rect x="12.4251%" y="357" width="0.9144%" height="15" fill="rgb(215,43,3)" fg:x="8153" fg:w="600"/><text x="12.6751%" y="367.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (314 samples, 0.48%)</title><rect x="12.8610%" y="341" width="0.4785%" height="15" fill="rgb(238,154,13)" fg:x="8439" fg:w="314"/><text x="13.1110%" y="351.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (314 samples, 0.48%)</title><rect x="12.8610%" y="325" width="0.4785%" height="15" fill="rgb(219,56,2)" fg:x="8439" fg:w="314"/><text x="13.1110%" y="335.50"></text></g><g><title>montecarlo::state::State::delete (305 samples, 0.46%)</title><rect x="13.3395%" y="485" width="0.4648%" height="15" fill="rgb(233,0,4)" fg:x="8753" fg:w="305"/><text x="13.5895%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (212 samples, 0.32%)</title><rect x="13.4813%" y="469" width="0.3231%" height="15" fill="rgb(235,30,7)" fg:x="8846" fg:w="212"/><text x="13.7313%" y="479.50"></text></g><g><title>&lt;id_collections::id_vec::IdVec&lt;I,T&gt; as core::ops::index::Index&lt;J&gt;&gt;::index (17 samples, 0.03%)</title><rect x="13.9598%" y="469" width="0.0259%" height="15" fill="rgb(250,79,13)" fg:x="9160" fg:w="17"/><text x="14.2098%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (17 samples, 0.03%)</title><rect x="13.9598%" y="453" width="0.0259%" height="15" fill="rgb(211,146,34)" fg:x="9160" fg:w="17"/><text x="14.2098%" y="463.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (17 samples, 0.03%)</title><rect x="13.9598%" y="437" width="0.0259%" height="15" fill="rgb(228,22,38)" fg:x="9160" fg:w="17"/><text x="14.2098%" y="447.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (17 samples, 0.03%)</title><rect x="13.9598%" y="421" width="0.0259%" height="15" fill="rgb(235,168,5)" fg:x="9160" fg:w="17"/><text x="14.2098%" y="431.50"></text></g><g><title>montecarlo::state::State::insert_diag (120 samples, 0.18%)</title><rect x="13.8043%" y="485" width="0.1829%" height="15" fill="rgb(221,155,16)" fg:x="9058" fg:w="120"/><text x="14.0543%" y="495.50"></text></g><g><title>&lt;f64 as rand::distributions::utils::FloatSIMDUtils&gt;::cast_from_int (101 samples, 0.15%)</title><rect x="14.0284%" y="453" width="0.1539%" height="15" fill="rgb(215,215,53)" fg:x="9205" fg:w="101"/><text x="14.2784%" y="463.50"></text></g><g><title>[unknown] (11 samples, 0.02%)</title><rect x="14.1823%" y="453" width="0.0168%" height="15" fill="rgb(223,4,10)" fg:x="9306" fg:w="11"/><text x="14.4323%" y="463.50"></text></g><g><title>[unknown] (11 samples, 0.02%)</title><rect x="14.1823%" y="437" width="0.0168%" height="15" fill="rgb(234,103,6)" fg:x="9306" fg:w="11"/><text x="14.4323%" y="447.50"></text></g><g><title>[unknown] (11 samples, 0.02%)</title><rect x="14.1823%" y="421" width="0.0168%" height="15" fill="rgb(227,97,0)" fg:x="9306" fg:w="11"/><text x="14.4323%" y="431.50"></text></g><g><title>[unknown] (11 samples, 0.02%)</title><rect x="14.1823%" y="405" width="0.0168%" height="15" fill="rgb(234,150,53)" fg:x="9306" fg:w="11"/><text x="14.4323%" y="415.50"></text></g><g><title>[unknown] (11 samples, 0.02%)</title><rect x="14.1823%" y="389" width="0.0168%" height="15" fill="rgb(228,201,54)" fg:x="9306" fg:w="11"/><text x="14.4323%" y="399.50"></text></g><g><title>[unknown] (10 samples, 0.02%)</title><rect x="14.1838%" y="373" width="0.0152%" height="15" fill="rgb(222,22,37)" fg:x="9307" fg:w="10"/><text x="14.4338%" y="383.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="14.1853%" y="357" width="0.0137%" height="15" fill="rgb(237,53,32)" fg:x="9308" fg:w="9"/><text x="14.4353%" y="367.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="14.1853%" y="341" width="0.0137%" height="15" fill="rgb(233,25,53)" fg:x="9308" fg:w="9"/><text x="14.4353%" y="351.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="14.1869%" y="325" width="0.0122%" height="15" fill="rgb(210,40,34)" fg:x="9309" fg:w="8"/><text x="14.4369%" y="335.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="14.1869%" y="309" width="0.0122%" height="15" fill="rgb(241,220,44)" fg:x="9309" fg:w="8"/><text x="14.4369%" y="319.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="14.1884%" y="293" width="0.0107%" height="15" fill="rgb(235,28,35)" fg:x="9310" fg:w="7"/><text x="14.4384%" y="303.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64::_{{closure}} (101 samples, 0.15%)</title><rect x="14.3393%" y="373" width="0.1539%" height="15" fill="rgb(210,56,17)" fg:x="9409" fg:w="101"/><text x="14.5893%" y="383.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt; as ppv_lite86::types::StoreBytes&gt;::write_le (15 samples, 0.02%)</title><rect x="14.5237%" y="261" width="0.0229%" height="15" fill="rgb(224,130,29)" fg:x="9530" fg:w="15"/><text x="14.7737%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_storeu_si128 (15 samples, 0.02%)</title><rect x="14.5237%" y="245" width="0.0229%" height="15" fill="rgb(235,212,8)" fg:x="9530" fg:w="15"/><text x="14.7737%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (15 samples, 0.02%)</title><rect x="14.5237%" y="229" width="0.0229%" height="15" fill="rgb(223,33,50)" fg:x="9530" fg:w="15"/><text x="14.7737%" y="239.50"></text></g><g><title>core::ptr::write_unaligned (15 samples, 0.02%)</title><rect x="14.5237%" y="213" width="0.0229%" height="15" fill="rgb(219,149,13)" fg:x="9530" fg:w="15"/><text x="14.7737%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.02%)</title><rect x="14.5237%" y="197" width="0.0229%" height="15" fill="rgb(250,156,29)" fg:x="9530" fg:w="15"/><text x="14.7737%" y="207.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,ppv_lite86::x86_64::YesS4,NI&gt; as ppv_lite86::types::Vec4&lt;u32&gt;&gt;::insert (24 samples, 0.04%)</title><rect x="14.5465%" y="261" width="0.0366%" height="15" fill="rgb(216,193,19)" fg:x="9545" fg:w="24"/><text x="14.7965%" y="271.50"></text></g><g><title>core::core_arch::x86::sse41::_mm_insert_epi32 (24 samples, 0.04%)</title><rect x="14.5465%" y="245" width="0.0366%" height="15" fill="rgb(216,135,14)" fg:x="9545" fg:w="24"/><text x="14.7965%" y="255.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (20 samples, 0.03%)</title><rect x="14.5831%" y="261" width="0.0305%" height="15" fill="rgb(241,47,5)" fg:x="9569" fg:w="20"/><text x="14.8331%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (20 samples, 0.03%)</title><rect x="14.5831%" y="245" width="0.0305%" height="15" fill="rgb(233,42,35)" fg:x="9569" fg:w="20"/><text x="14.8331%" y="255.50"></text></g><g><title>ppv_lite86::x86_64::sse2::avx2::_&lt;impl ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 4]&gt; for ppv_lite86::soft::x2&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt;,ppv_lite86::x86_64::sse2::G0&gt;&gt;::to_lanes (9 samples, 0.01%)</title><rect x="14.6273%" y="261" width="0.0137%" height="15" fill="rgb(231,13,6)" fg:x="9598" fg:w="9"/><text x="14.8773%" y="271.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 2]&gt;&gt;::to_lanes (9 samples, 0.01%)</title><rect x="14.6273%" y="245" width="0.0137%" height="15" fill="rgb(207,181,40)" fg:x="9598" fg:w="9"/><text x="14.8773%" y="255.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_extracti128_si256 (9 samples, 0.01%)</title><rect x="14.6273%" y="229" width="0.0137%" height="15" fill="rgb(254,173,49)" fg:x="9598" fg:w="9"/><text x="14.8773%" y="239.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (12 samples, 0.02%)</title><rect x="14.6410%" y="245" width="0.0183%" height="15" fill="rgb(221,1,38)" fg:x="9607" fg:w="12"/><text x="14.8910%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (12 samples, 0.02%)</title><rect x="14.6410%" y="229" width="0.0183%" height="15" fill="rgb(206,124,46)" fg:x="9607" fg:w="12"/><text x="14.8910%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (12 samples, 0.02%)</title><rect x="14.6410%" y="213" width="0.0183%" height="15" fill="rgb(249,21,11)" fg:x="9607" fg:w="12"/><text x="14.8910%" y="223.50"></text></g><g><title>rand_chacha::guts::diagonalize (29 samples, 0.04%)</title><rect x="14.6410%" y="261" width="0.0442%" height="15" fill="rgb(222,201,40)" fg:x="9607" fg:w="29"/><text x="14.8910%" y="271.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (17 samples, 0.03%)</title><rect x="14.6593%" y="245" width="0.0259%" height="15" fill="rgb(235,61,29)" fg:x="9619" fg:w="17"/><text x="14.9093%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (17 samples, 0.03%)</title><rect x="14.6593%" y="229" width="0.0259%" height="15" fill="rgb(219,207,3)" fg:x="9619" fg:w="17"/><text x="14.9093%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (17 samples, 0.03%)</title><rect x="14.6593%" y="213" width="0.0259%" height="15" fill="rgb(222,56,46)" fg:x="9619" fg:w="17"/><text x="14.9093%" y="223.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (139 samples, 0.21%)</title><rect x="14.6852%" y="245" width="0.2118%" height="15" fill="rgb(239,76,54)" fg:x="9636" fg:w="139"/><text x="14.9352%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (139 samples, 0.21%)</title><rect x="14.6852%" y="229" width="0.2118%" height="15" fill="rgb(231,124,27)" fg:x="9636" fg:w="139"/><text x="14.9352%" y="239.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (139 samples, 0.21%)</title><rect x="14.6852%" y="213" width="0.2118%" height="15" fill="rgb(249,195,6)" fg:x="9636" fg:w="139"/><text x="14.9352%" y="223.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (139 samples, 0.21%)</title><rect x="14.6852%" y="197" width="0.2118%" height="15" fill="rgb(237,174,47)" fg:x="9636" fg:w="139"/><text x="14.9352%" y="207.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::bit::BitXor&gt;::bitxor (69 samples, 0.11%)</title><rect x="14.8971%" y="245" width="0.1052%" height="15" fill="rgb(206,201,31)" fg:x="9775" fg:w="69"/><text x="15.1471%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::bit::BitXor&gt;::bitxor (69 samples, 0.11%)</title><rect x="14.8971%" y="229" width="0.1052%" height="15" fill="rgb(231,57,52)" fg:x="9775" fg:w="69"/><text x="15.1471%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (69 samples, 0.11%)</title><rect x="14.8971%" y="213" width="0.1052%" height="15" fill="rgb(248,177,22)" fg:x="9775" fg:w="69"/><text x="15.1471%" y="223.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (120 samples, 0.18%)</title><rect x="15.0022%" y="245" width="0.1829%" height="15" fill="rgb(215,211,37)" fg:x="9844" fg:w="120"/><text x="15.2522%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (120 samples, 0.18%)</title><rect x="15.0022%" y="229" width="0.1829%" height="15" fill="rgb(241,128,51)" fg:x="9844" fg:w="120"/><text x="15.2522%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (120 samples, 0.18%)</title><rect x="15.0022%" y="213" width="0.1829%" height="15" fill="rgb(227,165,31)" fg:x="9844" fg:w="120"/><text x="15.2522%" y="223.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (124 samples, 0.19%)</title><rect x="15.1851%" y="213" width="0.1890%" height="15" fill="rgb(228,167,24)" fg:x="9964" fg:w="124"/><text x="15.4351%" y="223.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (137 samples, 0.21%)</title><rect x="15.1851%" y="245" width="0.2088%" height="15" fill="rgb(228,143,12)" fg:x="9964" fg:w="137"/><text x="15.4351%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (137 samples, 0.21%)</title><rect x="15.1851%" y="229" width="0.2088%" height="15" fill="rgb(249,149,8)" fg:x="9964" fg:w="137"/><text x="15.4351%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (13 samples, 0.02%)</title><rect x="15.3741%" y="213" width="0.0198%" height="15" fill="rgb(243,35,44)" fg:x="10088" fg:w="13"/><text x="15.6241%" y="223.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (65 samples, 0.10%)</title><rect x="15.3939%" y="245" width="0.0991%" height="15" fill="rgb(246,89,9)" fg:x="10101" fg:w="65"/><text x="15.6439%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (65 samples, 0.10%)</title><rect x="15.3939%" y="229" width="0.0991%" height="15" fill="rgb(233,213,13)" fg:x="10101" fg:w="65"/><text x="15.6439%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (65 samples, 0.10%)</title><rect x="15.3939%" y="213" width="0.0991%" height="15" fill="rgb(233,141,41)" fg:x="10101" fg:w="65"/><text x="15.6439%" y="223.50"></text></g><g><title>rand_chacha::guts::round (625 samples, 0.95%)</title><rect x="14.6852%" y="261" width="0.9525%" height="15" fill="rgb(239,167,4)" fg:x="9636" fg:w="625"/><text x="14.9352%" y="271.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (95 samples, 0.14%)</title><rect x="15.4929%" y="245" width="0.1448%" height="15" fill="rgb(209,217,16)" fg:x="10166" fg:w="95"/><text x="15.7429%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (95 samples, 0.14%)</title><rect x="15.4929%" y="229" width="0.1448%" height="15" fill="rgb(219,88,35)" fg:x="10166" fg:w="95"/><text x="15.7429%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (95 samples, 0.14%)</title><rect x="15.4929%" y="213" width="0.1448%" height="15" fill="rgb(220,193,23)" fg:x="10166" fg:w="95"/><text x="15.7429%" y="223.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (32 samples, 0.05%)</title><rect x="15.6377%" y="245" width="0.0488%" height="15" fill="rgb(230,90,52)" fg:x="10261" fg:w="32"/><text x="15.8877%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (32 samples, 0.05%)</title><rect x="15.6377%" y="229" width="0.0488%" height="15" fill="rgb(252,106,19)" fg:x="10261" fg:w="32"/><text x="15.8877%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (32 samples, 0.05%)</title><rect x="15.6377%" y="213" width="0.0488%" height="15" fill="rgb(206,74,20)" fg:x="10261" fg:w="32"/><text x="15.8877%" y="223.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (11 samples, 0.02%)</title><rect x="15.6865%" y="245" width="0.0168%" height="15" fill="rgb(230,138,44)" fg:x="10293" fg:w="11"/><text x="15.9365%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (11 samples, 0.02%)</title><rect x="15.6865%" y="229" width="0.0168%" height="15" fill="rgb(235,182,43)" fg:x="10293" fg:w="11"/><text x="15.9365%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (11 samples, 0.02%)</title><rect x="15.6865%" y="213" width="0.0168%" height="15" fill="rgb(242,16,51)" fg:x="10293" fg:w="11"/><text x="15.9365%" y="223.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (794 samples, 1.21%)</title><rect x="14.5115%" y="309" width="1.2101%" height="15" fill="rgb(248,9,4)" fg:x="9522" fg:w="794"/><text x="14.7615%" y="319.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (794 samples, 1.21%)</title><rect x="14.5115%" y="293" width="1.2101%" height="15" fill="rgb(210,31,22)" fg:x="9522" fg:w="794"/><text x="14.7615%" y="303.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (793 samples, 1.21%)</title><rect x="14.5130%" y="277" width="1.2085%" height="15" fill="rgb(239,54,39)" fg:x="9523" fg:w="793"/><text x="14.7630%" y="287.50"></text></g><g><title>rand_chacha::guts::undiagonalize (55 samples, 0.08%)</title><rect x="15.6377%" y="261" width="0.0838%" height="15" fill="rgb(230,99,41)" fg:x="10261" fg:w="55"/><text x="15.8877%" y="271.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (12 samples, 0.02%)</title><rect x="15.7032%" y="245" width="0.0183%" height="15" fill="rgb(253,106,12)" fg:x="10304" fg:w="12"/><text x="15.9532%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (12 samples, 0.02%)</title><rect x="15.7032%" y="229" width="0.0183%" height="15" fill="rgb(213,46,41)" fg:x="10304" fg:w="12"/><text x="15.9532%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (12 samples, 0.02%)</title><rect x="15.7032%" y="213" width="0.0183%" height="15" fill="rgb(215,133,35)" fg:x="10304" fg:w="12"/><text x="15.9532%" y="223.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (804 samples, 1.23%)</title><rect x="14.4978%" y="341" width="1.2253%" height="15" fill="rgb(213,28,5)" fg:x="9513" fg:w="804"/><text x="14.7478%" y="351.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (804 samples, 1.23%)</title><rect x="14.4978%" y="325" width="1.2253%" height="15" fill="rgb(215,77,49)" fg:x="9513" fg:w="804"/><text x="14.7478%" y="335.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::try_fill_bytes (13 samples, 0.02%)</title><rect x="15.7231%" y="293" width="0.0198%" height="15" fill="rgb(248,100,22)" fg:x="10317" fg:w="13"/><text x="15.9731%" y="303.50"></text></g><g><title>&lt;rand_core::os::OsRng as rand_core::RngCore&gt;::try_fill_bytes (13 samples, 0.02%)</title><rect x="15.7231%" y="277" width="0.0198%" height="15" fill="rgb(208,67,9)" fg:x="10317" fg:w="13"/><text x="15.9731%" y="287.50"></text></g><g><title>getrandom::getrandom (13 samples, 0.02%)</title><rect x="15.7231%" y="261" width="0.0198%" height="15" fill="rgb(219,133,21)" fg:x="10317" fg:w="13"/><text x="15.9731%" y="271.50"></text></g><g><title>getrandom::getrandom_uninit (13 samples, 0.02%)</title><rect x="15.7231%" y="245" width="0.0198%" height="15" fill="rgb(246,46,29)" fg:x="10317" fg:w="13"/><text x="15.9731%" y="255.50"></text></g><g><title>getrandom::imp::getrandom_inner (13 samples, 0.02%)</title><rect x="15.7231%" y="229" width="0.0198%" height="15" fill="rgb(246,185,52)" fg:x="10317" fg:w="13"/><text x="15.9731%" y="239.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (13 samples, 0.02%)</title><rect x="15.7231%" y="213" width="0.0198%" height="15" fill="rgb(252,136,11)" fg:x="10317" fg:w="13"/><text x="15.9731%" y="223.50"></text></g><g><title>getrandom::imp::getrandom_inner::_{{closure}} (13 samples, 0.02%)</title><rect x="15.7231%" y="197" width="0.0198%" height="15" fill="rgb(219,138,53)" fg:x="10317" fg:w="13"/><text x="15.9731%" y="207.50"></text></g><g><title>getrandom::imp::getrandom (13 samples, 0.02%)</title><rect x="15.7231%" y="181" width="0.0198%" height="15" fill="rgb(211,51,23)" fg:x="10317" fg:w="13"/><text x="15.9731%" y="191.50"></text></g><g><title>syscall (13 samples, 0.02%)</title><rect x="15.7231%" y="165" width="0.0198%" height="15" fill="rgb(247,221,28)" fg:x="10317" fg:w="13"/><text x="15.9731%" y="175.50"></text></g><g><title>[unknown] (13 samples, 0.02%)</title><rect x="15.7231%" y="149" width="0.0198%" height="15" fill="rgb(251,222,45)" fg:x="10317" fg:w="13"/><text x="15.9731%" y="159.50"></text></g><g><title>[unknown] (12 samples, 0.02%)</title><rect x="15.7246%" y="133" width="0.0183%" height="15" fill="rgb(217,162,53)" fg:x="10318" fg:w="12"/><text x="15.9746%" y="143.50"></text></g><g><title>[unknown] (11 samples, 0.02%)</title><rect x="15.7261%" y="117" width="0.0168%" height="15" fill="rgb(229,93,14)" fg:x="10319" fg:w="11"/><text x="15.9761%" y="127.50"></text></g><g><title>[unknown] (11 samples, 0.02%)</title><rect x="15.7261%" y="101" width="0.0168%" height="15" fill="rgb(209,67,49)" fg:x="10319" fg:w="11"/><text x="15.9761%" y="111.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="15.7307%" y="85" width="0.0122%" height="15" fill="rgb(213,87,29)" fg:x="10322" fg:w="8"/><text x="15.9807%" y="95.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="15.7322%" y="69" width="0.0107%" height="15" fill="rgb(205,151,52)" fg:x="10323" fg:w="7"/><text x="15.9822%" y="79.50"></text></g><g><title>rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt;::reseed_and_generate (14 samples, 0.02%)</title><rect x="15.7231%" y="341" width="0.0213%" height="15" fill="rgb(253,215,39)" fg:x="10317" fg:w="14"/><text x="15.9731%" y="351.50"></text></g><g><title>rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt;::reseed (14 samples, 0.02%)</title><rect x="15.7231%" y="325" width="0.0213%" height="15" fill="rgb(221,220,41)" fg:x="10317" fg:w="14"/><text x="15.9731%" y="335.50"></text></g><g><title>rand_core::SeedableRng::from_rng (14 samples, 0.02%)</title><rect x="15.7231%" y="309" width="0.0213%" height="15" fill="rgb(218,133,21)" fg:x="10317" fg:w="14"/><text x="15.9731%" y="319.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (1,017 samples, 1.55%)</title><rect x="14.1991%" y="389" width="1.5499%" height="15" fill="rgb(221,193,43)" fg:x="9317" fg:w="1017"/><text x="14.4491%" y="399.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (824 samples, 1.26%)</title><rect x="14.4932%" y="373" width="1.2558%" height="15" fill="rgb(240,128,52)" fg:x="9510" fg:w="824"/><text x="14.7432%" y="383.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (824 samples, 1.26%)</title><rect x="14.4932%" y="357" width="1.2558%" height="15" fill="rgb(253,114,12)" fg:x="9510" fg:w="824"/><text x="14.7432%" y="367.50"></text></g><g><title>montecarlo::state::State::diagonal_update (9,314 samples, 14.19%)</title><rect x="1.5834%" y="501" width="14.1945%" height="15" fill="rgb(215,223,47)" fg:x="1039" fg:w="9314"/><text x="1.8334%" y="511.50">montecarlo::state::Sta..</text></g><g><title>rand::rng::Rng::gen (1,175 samples, 1.79%)</title><rect x="13.9872%" y="485" width="1.7907%" height="15" fill="rgb(248,225,23)" fg:x="9178" fg:w="1175"/><text x="14.2372%" y="495.50">r..</text></g><g><title>rand::distributions::float::&lt;impl rand::distributions::distribution::Distribution&lt;f64&gt; for rand::distributions::Standard&gt;::sample (1,175 samples, 1.79%)</title><rect x="13.9872%" y="469" width="1.7907%" height="15" fill="rgb(250,108,0)" fg:x="9178" fg:w="1175"/><text x="14.2372%" y="479.50">r..</text></g><g><title>rand::rng::Rng::gen (1,036 samples, 1.58%)</title><rect x="14.1991%" y="453" width="1.5789%" height="15" fill="rgb(228,208,7)" fg:x="9317" fg:w="1036"/><text x="14.4491%" y="463.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (1,036 samples, 1.58%)</title><rect x="14.1991%" y="437" width="1.5789%" height="15" fill="rgb(244,45,10)" fg:x="9317" fg:w="1036"/><text x="14.4491%" y="447.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (1,036 samples, 1.58%)</title><rect x="14.1991%" y="421" width="1.5789%" height="15" fill="rgb(207,125,25)" fg:x="9317" fg:w="1036"/><text x="14.4491%" y="431.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (1,036 samples, 1.58%)</title><rect x="14.1991%" y="405" width="1.5789%" height="15" fill="rgb(210,195,18)" fg:x="9317" fg:w="1036"/><text x="14.4491%" y="415.50"></text></g><g><title>_ZN10montecarlo5state5State15diagonal_update17hbdb7f8e683cf0a42E.llvm.13779910845809399678 (19 samples, 0.03%)</title><rect x="15.7490%" y="389" width="0.0290%" height="15" fill="rgb(249,80,12)" fg:x="10334" fg:w="19"/><text x="15.9990%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (302 samples, 0.46%)</title><rect x="15.9486%" y="453" width="0.4602%" height="15" fill="rgb(221,65,9)" fg:x="10465" fg:w="302"/><text x="16.1986%" y="463.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (301 samples, 0.46%)</title><rect x="15.9501%" y="437" width="0.4587%" height="15" fill="rgb(235,49,36)" fg:x="10466" fg:w="301"/><text x="16.2001%" y="447.50"></text></g><g><title>&lt;id_collections::id_vec::Iter&lt;I,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (336 samples, 0.51%)</title><rect x="15.9486%" y="485" width="0.5121%" height="15" fill="rgb(225,32,20)" fg:x="10465" fg:w="336"/><text x="16.1986%" y="495.50"></text></g><g><title>&lt;id_collections::id_vec::EnumerateIds&lt;I,It&gt; as core::iter::traits::iterator::Iterator&gt;::next (336 samples, 0.51%)</title><rect x="15.9486%" y="469" width="0.5121%" height="15" fill="rgb(215,141,46)" fg:x="10465" fg:w="336"/><text x="16.1986%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (34 samples, 0.05%)</title><rect x="16.4089%" y="453" width="0.0518%" height="15" fill="rgb(250,160,47)" fg:x="10767" fg:w="34"/><text x="16.6589%" y="463.50"></text></g><g><title>&lt;id_collections::id_vec::EnumerateIds&lt;I,It&gt; as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (34 samples, 0.05%)</title><rect x="16.4089%" y="437" width="0.0518%" height="15" fill="rgb(216,222,40)" fg:x="10767" fg:w="34"/><text x="16.6589%" y="447.50"></text></g><g><title>&lt;usize as core::ops::arith::Add&gt;::add (34 samples, 0.05%)</title><rect x="16.4089%" y="421" width="0.0518%" height="15" fill="rgb(234,217,39)" fg:x="10767" fg:w="34"/><text x="16.6589%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned_erms (10 samples, 0.02%)</title><rect x="17.0657%" y="341" width="0.0152%" height="15" fill="rgb(207,178,40)" fg:x="11198" fg:w="10"/><text x="17.3157%" y="351.50"></text></g><g><title>_int_free (11 samples, 0.02%)</title><rect x="17.0809%" y="341" width="0.0168%" height="15" fill="rgb(221,136,13)" fg:x="11208" fg:w="11"/><text x="17.3309%" y="351.50"></text></g><g><title>_int_malloc (31 samples, 0.05%)</title><rect x="17.0977%" y="341" width="0.0472%" height="15" fill="rgb(249,199,10)" fg:x="11219" fg:w="31"/><text x="17.3477%" y="351.50"></text></g><g><title>_int_realloc (66 samples, 0.10%)</title><rect x="17.0474%" y="357" width="0.1006%" height="15" fill="rgb(249,222,13)" fg:x="11186" fg:w="66"/><text x="17.2974%" y="367.50"></text></g><g><title>__GI___libc_realloc (87 samples, 0.13%)</title><rect x="17.0261%" y="373" width="0.1326%" height="15" fill="rgb(244,185,38)" fg:x="11172" fg:w="87"/><text x="17.2761%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (92 samples, 0.14%)</title><rect x="17.0261%" y="421" width="0.1402%" height="15" fill="rgb(236,202,9)" fg:x="11172" fg:w="92"/><text x="17.2761%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (92 samples, 0.14%)</title><rect x="17.0261%" y="405" width="0.1402%" height="15" fill="rgb(250,229,37)" fg:x="11172" fg:w="92"/><text x="17.2761%" y="415.50"></text></g><g><title>alloc::alloc::realloc (92 samples, 0.14%)</title><rect x="17.0261%" y="389" width="0.1402%" height="15" fill="rgb(206,174,23)" fg:x="11172" fg:w="92"/><text x="17.2761%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (94 samples, 0.14%)</title><rect x="17.0261%" y="437" width="0.1433%" height="15" fill="rgb(211,33,43)" fg:x="11172" fg:w="94"/><text x="17.2761%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (108 samples, 0.16%)</title><rect x="17.0093%" y="469" width="0.1646%" height="15" fill="rgb(245,58,50)" fg:x="11161" fg:w="108"/><text x="17.2593%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (108 samples, 0.16%)</title><rect x="17.0093%" y="453" width="0.1646%" height="15" fill="rgb(244,68,36)" fg:x="11161" fg:w="108"/><text x="17.2593%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (588 samples, 0.90%)</title><rect x="16.4607%" y="485" width="0.8961%" height="15" fill="rgb(232,229,15)" fg:x="10801" fg:w="588"/><text x="16.7107%" y="495.50"></text></g><g><title>core::ptr::write (119 samples, 0.18%)</title><rect x="17.1754%" y="469" width="0.1814%" height="15" fill="rgb(254,30,23)" fg:x="11270" fg:w="119"/><text x="17.4254%" y="479.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (14 samples, 0.02%)</title><rect x="17.3568%" y="485" width="0.0213%" height="15" fill="rgb(235,160,14)" fg:x="11389" fg:w="14"/><text x="17.6068%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (14 samples, 0.02%)</title><rect x="17.3568%" y="469" width="0.0213%" height="15" fill="rgb(212,155,44)" fg:x="11389" fg:w="14"/><text x="17.6068%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (280 samples, 0.43%)</title><rect x="17.3781%" y="485" width="0.4267%" height="15" fill="rgb(226,2,50)" fg:x="11403" fg:w="280"/><text x="17.6281%" y="495.50"></text></g><g><title>__GI___libc_free (15 samples, 0.02%)</title><rect x="17.8064%" y="405" width="0.0229%" height="15" fill="rgb(234,177,6)" fg:x="11684" fg:w="15"/><text x="18.0564%" y="415.50"></text></g><g><title>_int_free (10 samples, 0.02%)</title><rect x="17.8140%" y="389" width="0.0152%" height="15" fill="rgb(217,24,9)" fg:x="11689" fg:w="10"/><text x="18.0640%" y="399.50"></text></g><g><title>malloc_consolidate (7 samples, 0.01%)</title><rect x="17.8186%" y="373" width="0.0107%" height="15" fill="rgb(220,13,46)" fg:x="11692" fg:w="7"/><text x="18.0686%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;montecarlo::state::OperatorId&gt;&gt; (18 samples, 0.03%)</title><rect x="17.8048%" y="485" width="0.0274%" height="15" fill="rgb(239,221,27)" fg:x="11683" fg:w="18"/><text x="18.0548%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;montecarlo::state::OperatorId&gt;&gt; (18 samples, 0.03%)</title><rect x="17.8048%" y="469" width="0.0274%" height="15" fill="rgb(222,198,25)" fg:x="11683" fg:w="18"/><text x="18.0548%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.03%)</title><rect x="17.8048%" y="453" width="0.0274%" height="15" fill="rgb(211,99,13)" fg:x="11683" fg:w="18"/><text x="18.0548%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.03%)</title><rect x="17.8064%" y="437" width="0.0259%" height="15" fill="rgb(232,111,31)" fg:x="11684" fg:w="17"/><text x="18.0564%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.03%)</title><rect x="17.8064%" y="421" width="0.0259%" height="15" fill="rgb(245,82,37)" fg:x="11684" fg:w="17"/><text x="18.0564%" y="431.50"></text></g><g><title>&lt;id_collections::id_vec::IdVec&lt;I,T&gt; as core::ops::index::Index&lt;J&gt;&gt;::index (120 samples, 0.18%)</title><rect x="18.0929%" y="469" width="0.1829%" height="15" fill="rgb(227,149,46)" fg:x="11872" fg:w="120"/><text x="18.3429%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (120 samples, 0.18%)</title><rect x="18.0929%" y="453" width="0.1829%" height="15" fill="rgb(218,36,50)" fg:x="11872" fg:w="120"/><text x="18.3429%" y="463.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (120 samples, 0.18%)</title><rect x="18.0929%" y="437" width="0.1829%" height="15" fill="rgb(226,80,48)" fg:x="11872" fg:w="120"/><text x="18.3429%" y="447.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (120 samples, 0.18%)</title><rect x="18.0929%" y="421" width="0.1829%" height="15" fill="rgb(238,224,15)" fg:x="11872" fg:w="120"/><text x="18.3429%" y="431.50"></text></g><g><title>&lt;id_collections::id_vec::IdVec&lt;I,T&gt; as core::ops::index::IndexMut&lt;J&gt;&gt;::index_mut (18 samples, 0.03%)</title><rect x="18.2758%" y="469" width="0.0274%" height="15" fill="rgb(241,136,10)" fg:x="11992" fg:w="18"/><text x="18.5258%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (18 samples, 0.03%)</title><rect x="18.2758%" y="453" width="0.0274%" height="15" fill="rgb(208,32,45)" fg:x="11992" fg:w="18"/><text x="18.5258%" y="463.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (18 samples, 0.03%)</title><rect x="18.2758%" y="437" width="0.0274%" height="15" fill="rgb(207,135,9)" fg:x="11992" fg:w="18"/><text x="18.5258%" y="447.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (18 samples, 0.03%)</title><rect x="18.2758%" y="421" width="0.0274%" height="15" fill="rgb(206,86,44)" fg:x="11992" fg:w="18"/><text x="18.5258%" y="431.50"></text></g><g><title>core::cmp::PartialOrd::ge (138 samples, 0.21%)</title><rect x="18.3078%" y="469" width="0.2103%" height="15" fill="rgb(245,177,15)" fg:x="12013" fg:w="138"/><text x="18.5578%" y="479.50"></text></g><g><title>core::cmp::PartialOrd::le (325 samples, 0.50%)</title><rect x="18.5181%" y="469" width="0.4953%" height="15" fill="rgb(206,64,50)" fg:x="12151" fg:w="325"/><text x="18.7681%" y="479.50"></text></g><g><title>&lt;montecarlo::state::OperatorId as core::cmp::PartialOrd&gt;::partial_cmp (118 samples, 0.18%)</title><rect x="18.8335%" y="453" width="0.1798%" height="15" fill="rgb(234,36,40)" fg:x="12358" fg:w="118"/><text x="19.0835%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::partial_cmp (118 samples, 0.18%)</title><rect x="18.8335%" y="437" width="0.1798%" height="15" fill="rgb(213,64,8)" fg:x="12358" fg:w="118"/><text x="19.0835%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (118 samples, 0.18%)</title><rect x="18.8335%" y="421" width="0.1798%" height="15" fill="rgb(210,75,36)" fg:x="12358" fg:w="118"/><text x="19.0835%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1,059 samples, 1.61%)</title><rect x="19.0134%" y="469" width="1.6139%" height="15" fill="rgb(229,88,21)" fg:x="12476" fg:w="1059"/><text x="19.2634%" y="479.50"></text></g><g><title>[unknown] (10 samples, 0.02%)</title><rect x="20.6120%" y="453" width="0.0152%" height="15" fill="rgb(252,204,47)" fg:x="13525" fg:w="10"/><text x="20.8620%" y="463.50"></text></g><g><title>[unknown] (10 samples, 0.02%)</title><rect x="20.6120%" y="437" width="0.0152%" height="15" fill="rgb(208,77,27)" fg:x="13525" fg:w="10"/><text x="20.8620%" y="447.50"></text></g><g><title>[unknown] (10 samples, 0.02%)</title><rect x="20.6120%" y="421" width="0.0152%" height="15" fill="rgb(221,76,26)" fg:x="13525" fg:w="10"/><text x="20.8620%" y="431.50"></text></g><g><title>[unknown] (10 samples, 0.02%)</title><rect x="20.6120%" y="405" width="0.0152%" height="15" fill="rgb(225,139,18)" fg:x="13525" fg:w="10"/><text x="20.8620%" y="415.50"></text></g><g><title>[unknown] (10 samples, 0.02%)</title><rect x="20.6120%" y="389" width="0.0152%" height="15" fill="rgb(230,137,11)" fg:x="13525" fg:w="10"/><text x="20.8620%" y="399.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="20.6136%" y="373" width="0.0137%" height="15" fill="rgb(212,28,1)" fg:x="13526" fg:w="9"/><text x="20.8636%" y="383.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="20.6151%" y="357" width="0.0122%" height="15" fill="rgb(248,164,17)" fg:x="13527" fg:w="8"/><text x="20.8651%" y="367.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="20.6151%" y="341" width="0.0122%" height="15" fill="rgb(222,171,42)" fg:x="13527" fg:w="8"/><text x="20.8651%" y="351.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="20.6151%" y="325" width="0.0122%" height="15" fill="rgb(243,84,45)" fg:x="13527" fg:w="8"/><text x="20.8651%" y="335.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="20.6151%" y="309" width="0.0122%" height="15" fill="rgb(252,49,23)" fg:x="13527" fg:w="8"/><text x="20.8651%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (495 samples, 0.75%)</title><rect x="20.6273%" y="469" width="0.7544%" height="15" fill="rgb(215,19,7)" fg:x="13535" fg:w="495"/><text x="20.8773%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (130 samples, 0.20%)</title><rect x="21.3817%" y="469" width="0.1981%" height="15" fill="rgb(238,81,41)" fg:x="14030" fg:w="130"/><text x="21.6317%" y="479.50"></text></g><g><title>montecarlo::state::State::directed_loop_update (2,844 samples, 4.33%)</title><rect x="17.8323%" y="485" width="4.3342%" height="15" fill="rgb(210,199,37)" fg:x="11701" fg:w="2844"/><text x="18.0823%" y="495.50">monte..</text></g><g><title>montecarlo::state::OperatorType::flip (385 samples, 0.59%)</title><rect x="21.5798%" y="469" width="0.5867%" height="15" fill="rgb(244,192,49)" fg:x="14160" fg:w="385"/><text x="21.8298%" y="479.50"></text></g><g><title>&lt;usize as rand::distributions::utils::WideningMultiply&gt;::wmul (8 samples, 0.01%)</title><rect x="22.2122%" y="421" width="0.0122%" height="15" fill="rgb(226,211,11)" fg:x="14575" fg:w="8"/><text x="22.4622%" y="431.50"></text></g><g><title>&lt;u64 as rand::distributions::utils::WideningMultiply&gt;::wmul (8 samples, 0.01%)</title><rect x="22.2122%" y="405" width="0.0122%" height="15" fill="rgb(236,162,54)" fg:x="14575" fg:w="8"/><text x="22.4622%" y="415.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64::_{{closure}} (16 samples, 0.02%)</title><rect x="22.2519%" y="341" width="0.0244%" height="15" fill="rgb(220,229,9)" fg:x="14601" fg:w="16"/><text x="22.5019%" y="351.50"></text></g><g><title>_ZN4rand3rng3Rng3gen17h863d88e49c066904E.llvm.9147632876596203113 (13 samples, 0.02%)</title><rect x="22.2778%" y="341" width="0.0198%" height="15" fill="rgb(250,87,22)" fg:x="14618" fg:w="13"/><text x="22.5278%" y="351.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (10 samples, 0.02%)</title><rect x="22.3174%" y="213" width="0.0152%" height="15" fill="rgb(239,43,17)" fg:x="14644" fg:w="10"/><text x="22.5674%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (10 samples, 0.02%)</title><rect x="22.3174%" y="197" width="0.0152%" height="15" fill="rgb(231,177,25)" fg:x="14644" fg:w="10"/><text x="22.5674%" y="207.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (10 samples, 0.02%)</title><rect x="22.3174%" y="181" width="0.0152%" height="15" fill="rgb(219,179,1)" fg:x="14644" fg:w="10"/><text x="22.5674%" y="191.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (10 samples, 0.02%)</title><rect x="22.3174%" y="165" width="0.0152%" height="15" fill="rgb(238,219,53)" fg:x="14644" fg:w="10"/><text x="22.5674%" y="175.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (12 samples, 0.02%)</title><rect x="22.3418%" y="213" width="0.0183%" height="15" fill="rgb(232,167,36)" fg:x="14660" fg:w="12"/><text x="22.5918%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (12 samples, 0.02%)</title><rect x="22.3418%" y="197" width="0.0183%" height="15" fill="rgb(244,19,51)" fg:x="14660" fg:w="12"/><text x="22.5918%" y="207.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (12 samples, 0.02%)</title><rect x="22.3418%" y="181" width="0.0183%" height="15" fill="rgb(224,6,22)" fg:x="14660" fg:w="12"/><text x="22.5918%" y="191.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (18 samples, 0.03%)</title><rect x="22.3601%" y="181" width="0.0274%" height="15" fill="rgb(224,145,5)" fg:x="14672" fg:w="18"/><text x="22.6101%" y="191.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (22 samples, 0.03%)</title><rect x="22.3601%" y="213" width="0.0335%" height="15" fill="rgb(234,130,49)" fg:x="14672" fg:w="22"/><text x="22.6101%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (22 samples, 0.03%)</title><rect x="22.3601%" y="197" width="0.0335%" height="15" fill="rgb(254,6,2)" fg:x="14672" fg:w="22"/><text x="22.6101%" y="207.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (10 samples, 0.02%)</title><rect x="22.3936%" y="213" width="0.0152%" height="15" fill="rgb(208,96,46)" fg:x="14694" fg:w="10"/><text x="22.6436%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (10 samples, 0.02%)</title><rect x="22.3936%" y="197" width="0.0152%" height="15" fill="rgb(239,3,39)" fg:x="14694" fg:w="10"/><text x="22.6436%" y="207.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (10 samples, 0.02%)</title><rect x="22.3936%" y="181" width="0.0152%" height="15" fill="rgb(233,210,1)" fg:x="14694" fg:w="10"/><text x="22.6436%" y="191.50"></text></g><g><title>rand_chacha::guts::round (68 samples, 0.10%)</title><rect x="22.3174%" y="229" width="0.1036%" height="15" fill="rgb(244,137,37)" fg:x="14644" fg:w="68"/><text x="22.5674%" y="239.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (8 samples, 0.01%)</title><rect x="22.4088%" y="213" width="0.0122%" height="15" fill="rgb(240,136,2)" fg:x="14704" fg:w="8"/><text x="22.6588%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (8 samples, 0.01%)</title><rect x="22.4088%" y="197" width="0.0122%" height="15" fill="rgb(239,18,37)" fg:x="14704" fg:w="8"/><text x="22.6588%" y="207.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (8 samples, 0.01%)</title><rect x="22.4088%" y="181" width="0.0122%" height="15" fill="rgb(218,185,22)" fg:x="14704" fg:w="8"/><text x="22.6588%" y="191.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (82 samples, 0.12%)</title><rect x="22.2991%" y="309" width="0.1250%" height="15" fill="rgb(225,218,4)" fg:x="14632" fg:w="82"/><text x="22.5491%" y="319.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (82 samples, 0.12%)</title><rect x="22.2991%" y="293" width="0.1250%" height="15" fill="rgb(230,182,32)" fg:x="14632" fg:w="82"/><text x="22.5491%" y="303.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (82 samples, 0.12%)</title><rect x="22.2991%" y="277" width="0.1250%" height="15" fill="rgb(242,56,43)" fg:x="14632" fg:w="82"/><text x="22.5491%" y="287.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (82 samples, 0.12%)</title><rect x="22.2991%" y="261" width="0.1250%" height="15" fill="rgb(233,99,24)" fg:x="14632" fg:w="82"/><text x="22.5491%" y="271.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (81 samples, 0.12%)</title><rect x="22.3006%" y="245" width="0.1234%" height="15" fill="rgb(234,209,42)" fg:x="14633" fg:w="81"/><text x="22.5506%" y="255.50"></text></g><g><title>montecarlo::state::State::off_diagonal_update (4,364 samples, 6.65%)</title><rect x="15.7779%" y="501" width="6.6507%" height="15" fill="rgb(227,7,12)" fg:x="10353" fg:w="4364"/><text x="16.0279%" y="511.50">montecarl..</text></g><g><title>rand::rng::Rng::gen_range (172 samples, 0.26%)</title><rect x="22.1665%" y="485" width="0.2621%" height="15" fill="rgb(245,203,43)" fg:x="14545" fg:w="172"/><text x="22.4165%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (172 samples, 0.26%)</title><rect x="22.1665%" y="469" width="0.2621%" height="15" fill="rgb(238,205,33)" fg:x="14545" fg:w="172"/><text x="22.4165%" y="479.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (172 samples, 0.26%)</title><rect x="22.1665%" y="453" width="0.2621%" height="15" fill="rgb(231,56,7)" fg:x="14545" fg:w="172"/><text x="22.4165%" y="463.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (172 samples, 0.26%)</title><rect x="22.1665%" y="437" width="0.2621%" height="15" fill="rgb(244,186,29)" fg:x="14545" fg:w="172"/><text x="22.4165%" y="447.50"></text></g><g><title>rand::rng::Rng::gen (129 samples, 0.20%)</title><rect x="22.2320%" y="421" width="0.1966%" height="15" fill="rgb(234,111,31)" fg:x="14588" fg:w="129"/><text x="22.4820%" y="431.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;usize&gt; for rand::distributions::Standard&gt;::sample (127 samples, 0.19%)</title><rect x="22.2351%" y="405" width="0.1935%" height="15" fill="rgb(241,149,10)" fg:x="14590" fg:w="127"/><text x="22.4851%" y="415.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (127 samples, 0.19%)</title><rect x="22.2351%" y="389" width="0.1935%" height="15" fill="rgb(249,206,44)" fg:x="14590" fg:w="127"/><text x="22.4851%" y="399.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (127 samples, 0.19%)</title><rect x="22.2351%" y="373" width="0.1935%" height="15" fill="rgb(251,153,30)" fg:x="14590" fg:w="127"/><text x="22.4851%" y="383.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (127 samples, 0.19%)</title><rect x="22.2351%" y="357" width="0.1935%" height="15" fill="rgb(239,152,38)" fg:x="14590" fg:w="127"/><text x="22.4851%" y="367.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (86 samples, 0.13%)</title><rect x="22.2976%" y="341" width="0.1311%" height="15" fill="rgb(249,139,47)" fg:x="14631" fg:w="86"/><text x="22.5476%" y="351.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (86 samples, 0.13%)</title><rect x="22.2976%" y="325" width="0.1311%" height="15" fill="rgb(244,64,35)" fg:x="14631" fg:w="86"/><text x="22.5476%" y="335.50"></text></g><g><title>&lt;id_collections::id_vec::IdVec&lt;I,T&gt; as core::ops::index::Index&lt;J&gt;&gt;::index (34 samples, 0.05%)</title><rect x="24.4175%" y="485" width="0.0518%" height="15" fill="rgb(216,46,15)" fg:x="16022" fg:w="34"/><text x="24.6675%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (34 samples, 0.05%)</title><rect x="24.4175%" y="469" width="0.0518%" height="15" fill="rgb(250,74,19)" fg:x="16022" fg:w="34"/><text x="24.6675%" y="479.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (34 samples, 0.05%)</title><rect x="24.4175%" y="453" width="0.0518%" height="15" fill="rgb(249,42,33)" fg:x="16022" fg:w="34"/><text x="24.6675%" y="463.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (34 samples, 0.05%)</title><rect x="24.4175%" y="437" width="0.0518%" height="15" fill="rgb(242,149,17)" fg:x="16022" fg:w="34"/><text x="24.6675%" y="447.50"></text></g><g><title>&lt;id_collections::id_vec::IdVec&lt;I,T&gt; as core::ops::index::IndexMut&lt;J&gt;&gt;::index_mut (7 samples, 0.01%)</title><rect x="24.4693%" y="485" width="0.0107%" height="15" fill="rgb(244,29,21)" fg:x="16056" fg:w="7"/><text x="24.7193%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (7 samples, 0.01%)</title><rect x="24.4693%" y="469" width="0.0107%" height="15" fill="rgb(220,130,37)" fg:x="16056" fg:w="7"/><text x="24.7193%" y="479.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (7 samples, 0.01%)</title><rect x="24.4693%" y="453" width="0.0107%" height="15" fill="rgb(211,67,2)" fg:x="16056" fg:w="7"/><text x="24.7193%" y="463.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (7 samples, 0.01%)</title><rect x="24.4693%" y="437" width="0.0107%" height="15" fill="rgb(235,68,52)" fg:x="16056" fg:w="7"/><text x="24.7193%" y="447.50"></text></g><g><title>&lt;id_collections::id_vec::Iter&lt;I,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (100 samples, 0.15%)</title><rect x="24.4799%" y="485" width="0.1524%" height="15" fill="rgb(246,142,3)" fg:x="16063" fg:w="100"/><text x="24.7299%" y="495.50"></text></g><g><title>&lt;id_collections::id_vec::EnumerateIds&lt;I,It&gt; as core::iter::traits::iterator::Iterator&gt;::next (100 samples, 0.15%)</title><rect x="24.4799%" y="469" width="0.1524%" height="15" fill="rgb(241,25,7)" fg:x="16063" fg:w="100"/><text x="24.7299%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (100 samples, 0.15%)</title><rect x="24.4799%" y="453" width="0.1524%" height="15" fill="rgb(242,119,39)" fg:x="16063" fg:w="100"/><text x="24.7299%" y="463.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (100 samples, 0.15%)</title><rect x="24.4799%" y="437" width="0.1524%" height="15" fill="rgb(241,98,45)" fg:x="16063" fg:w="100"/><text x="24.7299%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.01%)</title><rect x="24.6323%" y="389" width="0.0137%" height="15" fill="rgb(254,28,30)" fg:x="16163" fg:w="9"/><text x="24.8823%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.01%)</title><rect x="24.6323%" y="373" width="0.0137%" height="15" fill="rgb(241,142,54)" fg:x="16163" fg:w="9"/><text x="24.8823%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.01%)</title><rect x="24.6323%" y="357" width="0.0137%" height="15" fill="rgb(222,85,15)" fg:x="16163" fg:w="9"/><text x="24.8823%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.01%)</title><rect x="24.6323%" y="341" width="0.0137%" height="15" fill="rgb(210,85,47)" fg:x="16163" fg:w="9"/><text x="24.8823%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.01%)</title><rect x="24.6323%" y="325" width="0.0137%" height="15" fill="rgb(224,206,25)" fg:x="16163" fg:w="9"/><text x="24.8823%" y="335.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.01%)</title><rect x="24.6323%" y="309" width="0.0137%" height="15" fill="rgb(243,201,19)" fg:x="16163" fg:w="9"/><text x="24.8823%" y="319.50"></text></g><g><title>&lt;montecarlo::lattice::Bipartite_Id_Vec&lt;T&gt; as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="24.6323%" y="485" width="0.0168%" height="15" fill="rgb(236,59,4)" fg:x="16163" fg:w="11"/><text x="24.8823%" y="495.50"></text></g><g><title>&lt;id_collections::id_vec::IdVec&lt;I,T&gt; as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="24.6323%" y="469" width="0.0168%" height="15" fill="rgb(254,179,45)" fg:x="16163" fg:w="11"/><text x="24.8823%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="24.6323%" y="453" width="0.0168%" height="15" fill="rgb(226,14,10)" fg:x="16163" fg:w="11"/><text x="24.8823%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.02%)</title><rect x="24.6323%" y="437" width="0.0168%" height="15" fill="rgb(244,27,41)" fg:x="16163" fg:w="11"/><text x="24.8823%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.02%)</title><rect x="24.6323%" y="421" width="0.0168%" height="15" fill="rgb(235,35,32)" fg:x="16163" fg:w="11"/><text x="24.8823%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.02%)</title><rect x="24.6323%" y="405" width="0.0168%" height="15" fill="rgb(218,68,31)" fg:x="16163" fg:w="11"/><text x="24.8823%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;montecarlo::lattice::Bipartite_Id_Vec&lt;bool&gt;&gt; (9 samples, 0.01%)</title><rect x="24.6537%" y="485" width="0.0137%" height="15" fill="rgb(207,120,37)" fg:x="16177" fg:w="9"/><text x="24.9037%" y="495.50"></text></g><g><title>montecarlo::state::State::sample (15,275 samples, 23.28%)</title><rect x="1.4905%" y="517" width="23.2790%" height="15" fill="rgb(227,98,0)" fg:x="978" fg:w="15275"/><text x="1.7405%" y="527.50">montecarlo::state::State::sample</text></g><g><title>montecarlo::state::State::staggered_magnetization (1,535 samples, 2.34%)</title><rect x="22.4302%" y="501" width="2.3393%" height="15" fill="rgb(207,7,3)" fg:x="14718" fg:w="1535"/><text x="22.6802%" y="511.50">m..</text></g><g><title>std::f64::&lt;impl f64&gt;::abs (67 samples, 0.10%)</title><rect x="24.6674%" y="485" width="0.1021%" height="15" fill="rgb(206,98,19)" fg:x="16186" fg:w="67"/><text x="24.9174%" y="495.50"></text></g><g><title>_ZN10montecarlo5state5State15diagonal_update17hbdb7f8e683cf0a42E.llvm.13779910845809399678 (176 samples, 0.27%)</title><rect x="24.7756%" y="501" width="0.2682%" height="15" fill="rgb(217,5,26)" fg:x="16257" fg:w="176"/><text x="25.0256%" y="511.50"></text></g><g><title>_ZN10montecarlo5state5State19off_diagonal_update17h2ffef6cd5f5a098eE.llvm.13779910845809399678 (21 samples, 0.03%)</title><rect x="25.0438%" y="501" width="0.0320%" height="15" fill="rgb(235,190,38)" fg:x="16433" fg:w="21"/><text x="25.2938%" y="511.50"></text></g><g><title>&lt;montecarlo::state::Operator as core::clone::Clone&gt;::clone (429 samples, 0.65%)</title><rect x="51.0401%" y="469" width="0.6538%" height="15" fill="rgb(247,86,24)" fg:x="33491" fg:w="429"/><text x="51.2901%" y="479.50"></text></g><g><title>&lt;montecarlo::lattice::Edge as core::clone::Clone&gt;::clone (429 samples, 0.65%)</title><rect x="51.0401%" y="453" width="0.6538%" height="15" fill="rgb(205,101,16)" fg:x="33491" fg:w="429"/><text x="51.2901%" y="463.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,974 samples, 3.01%)</title><rect x="48.6977%" y="485" width="3.0084%" height="15" fill="rgb(246,168,33)" fg:x="31954" fg:w="1974"/><text x="48.9477%" y="495.50">&lt;co..</text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="51.6939%" y="469" width="0.0122%" height="15" fill="rgb(231,114,1)" fg:x="33920" fg:w="8"/><text x="51.9439%" y="479.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="51.6939%" y="453" width="0.0122%" height="15" fill="rgb(207,184,53)" fg:x="33920" fg:w="8"/><text x="51.9439%" y="463.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="51.6939%" y="437" width="0.0122%" height="15" fill="rgb(224,95,51)" fg:x="33920" fg:w="8"/><text x="51.9439%" y="447.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="51.6939%" y="421" width="0.0122%" height="15" fill="rgb(212,188,45)" fg:x="33920" fg:w="8"/><text x="51.9439%" y="431.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="51.6939%" y="405" width="0.0122%" height="15" fill="rgb(223,154,38)" fg:x="33920" fg:w="8"/><text x="51.9439%" y="415.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="51.6939%" y="389" width="0.0122%" height="15" fill="rgb(251,22,52)" fg:x="33920" fg:w="8"/><text x="51.9439%" y="399.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (959 samples, 1.46%)</title><rect x="51.7061%" y="437" width="1.4615%" height="15" fill="rgb(229,209,22)" fg:x="33928" fg:w="959"/><text x="51.9561%" y="447.50"></text></g><g><title>&lt;id_collections::id_vec::IdVec&lt;I,T&gt; as core::ops::index::Index&lt;J&gt;&gt;::index (996 samples, 1.52%)</title><rect x="51.7061%" y="485" width="1.5179%" height="15" fill="rgb(234,138,34)" fg:x="33928" fg:w="996"/><text x="51.9561%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (996 samples, 1.52%)</title><rect x="51.7061%" y="469" width="1.5179%" height="15" fill="rgb(212,95,11)" fg:x="33928" fg:w="996"/><text x="51.9561%" y="479.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (996 samples, 1.52%)</title><rect x="51.7061%" y="453" width="1.5179%" height="15" fill="rgb(240,179,47)" fg:x="33928" fg:w="996"/><text x="51.9561%" y="463.50"></text></g><g><title>_ZN10montecarlo5state5State15diagonal_update17hbdb7f8e683cf0a42E.llvm.13779910845809399678 (37 samples, 0.06%)</title><rect x="53.1676%" y="437" width="0.0564%" height="15" fill="rgb(240,163,11)" fg:x="34887" fg:w="37"/><text x="53.4176%" y="447.50"></text></g><g><title>&lt;id_collections::id_vec::IdVec&lt;I,T&gt; as core::ops::index::IndexMut&lt;J&gt;&gt;::index_mut (1,539 samples, 2.35%)</title><rect x="53.2240%" y="485" width="2.3454%" height="15" fill="rgb(236,37,12)" fg:x="34924" fg:w="1539"/><text x="53.4740%" y="495.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1,539 samples, 2.35%)</title><rect x="53.2240%" y="469" width="2.3454%" height="15" fill="rgb(232,164,16)" fg:x="34924" fg:w="1539"/><text x="53.4740%" y="479.50">&lt;..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1,539 samples, 2.35%)</title><rect x="53.2240%" y="453" width="2.3454%" height="15" fill="rgb(244,205,15)" fg:x="34924" fg:w="1539"/><text x="53.4740%" y="463.50">c..</text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1,539 samples, 2.35%)</title><rect x="53.2240%" y="437" width="2.3454%" height="15" fill="rgb(223,117,47)" fg:x="34924" fg:w="1539"/><text x="53.4740%" y="447.50">&lt;..</text></g><g><title>[unknown] (11 samples, 0.02%)</title><rect x="55.5527%" y="421" width="0.0168%" height="15" fill="rgb(244,107,35)" fg:x="36452" fg:w="11"/><text x="55.8027%" y="431.50"></text></g><g><title>[unknown] (11 samples, 0.02%)</title><rect x="55.5527%" y="405" width="0.0168%" height="15" fill="rgb(205,140,8)" fg:x="36452" fg:w="11"/><text x="55.8027%" y="415.50"></text></g><g><title>[unknown] (11 samples, 0.02%)</title><rect x="55.5527%" y="389" width="0.0168%" height="15" fill="rgb(228,84,46)" fg:x="36452" fg:w="11"/><text x="55.8027%" y="399.50"></text></g><g><title>[unknown] (11 samples, 0.02%)</title><rect x="55.5527%" y="373" width="0.0168%" height="15" fill="rgb(254,188,9)" fg:x="36452" fg:w="11"/><text x="55.8027%" y="383.50"></text></g><g><title>[unknown] (11 samples, 0.02%)</title><rect x="55.5527%" y="357" width="0.0168%" height="15" fill="rgb(206,112,54)" fg:x="36452" fg:w="11"/><text x="55.8027%" y="367.50"></text></g><g><title>[unknown] (11 samples, 0.02%)</title><rect x="55.5527%" y="341" width="0.0168%" height="15" fill="rgb(216,84,49)" fg:x="36452" fg:w="11"/><text x="55.8027%" y="351.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="55.5557%" y="325" width="0.0137%" height="15" fill="rgb(214,194,35)" fg:x="36454" fg:w="9"/><text x="55.8057%" y="335.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="55.5557%" y="309" width="0.0137%" height="15" fill="rgb(249,28,3)" fg:x="36454" fg:w="9"/><text x="55.8057%" y="319.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="55.5557%" y="293" width="0.0137%" height="15" fill="rgb(222,56,52)" fg:x="36454" fg:w="9"/><text x="55.8057%" y="303.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="55.5557%" y="277" width="0.0137%" height="15" fill="rgb(245,217,50)" fg:x="36454" fg:w="9"/><text x="55.8057%" y="287.50"></text></g><g><title>checked_request2size (7 samples, 0.01%)</title><rect x="55.5801%" y="277" width="0.0107%" height="15" fill="rgb(213,201,24)" fg:x="36470" fg:w="7"/><text x="55.8301%" y="287.50"></text></g><g><title>__GI___libc_malloc (24 samples, 0.04%)</title><rect x="55.5725%" y="293" width="0.0366%" height="15" fill="rgb(248,116,28)" fg:x="36465" fg:w="24"/><text x="55.8225%" y="303.50"></text></g><g><title>tcache_get (12 samples, 0.02%)</title><rect x="55.5908%" y="277" width="0.0183%" height="15" fill="rgb(219,72,43)" fg:x="36477" fg:w="12"/><text x="55.8408%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (30 samples, 0.05%)</title><rect x="55.5710%" y="389" width="0.0457%" height="15" fill="rgb(209,138,14)" fg:x="36464" fg:w="30"/><text x="55.8210%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (30 samples, 0.05%)</title><rect x="55.5710%" y="373" width="0.0457%" height="15" fill="rgb(222,18,33)" fg:x="36464" fg:w="30"/><text x="55.8210%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (30 samples, 0.05%)</title><rect x="55.5710%" y="357" width="0.0457%" height="15" fill="rgb(213,199,7)" fg:x="36464" fg:w="30"/><text x="55.8210%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (29 samples, 0.04%)</title><rect x="55.5725%" y="341" width="0.0442%" height="15" fill="rgb(250,110,10)" fg:x="36465" fg:w="29"/><text x="55.8225%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 0.04%)</title><rect x="55.5725%" y="325" width="0.0442%" height="15" fill="rgb(248,123,6)" fg:x="36465" fg:w="29"/><text x="55.8225%" y="335.50"></text></g><g><title>alloc::alloc::alloc (29 samples, 0.04%)</title><rect x="55.5725%" y="309" width="0.0442%" height="15" fill="rgb(206,91,31)" fg:x="36465" fg:w="29"/><text x="55.8225%" y="319.50"></text></g><g><title>&lt;montecarlo::lattice::Bipartite_Id_Vec&lt;T&gt; as core::clone::Clone&gt;::clone (38 samples, 0.06%)</title><rect x="55.5694%" y="485" width="0.0579%" height="15" fill="rgb(211,154,13)" fg:x="36463" fg:w="38"/><text x="55.8194%" y="495.50"></text></g><g><title>&lt;id_collections::id_vec::IdVec&lt;I,T&gt; as core::clone::Clone&gt;::clone (38 samples, 0.06%)</title><rect x="55.5694%" y="469" width="0.0579%" height="15" fill="rgb(225,148,7)" fg:x="36463" fg:w="38"/><text x="55.8194%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (38 samples, 0.06%)</title><rect x="55.5694%" y="453" width="0.0579%" height="15" fill="rgb(220,160,43)" fg:x="36463" fg:w="38"/><text x="55.8194%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (37 samples, 0.06%)</title><rect x="55.5710%" y="437" width="0.0564%" height="15" fill="rgb(213,52,39)" fg:x="36464" fg:w="37"/><text x="55.8210%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (37 samples, 0.06%)</title><rect x="55.5710%" y="421" width="0.0564%" height="15" fill="rgb(243,137,7)" fg:x="36464" fg:w="37"/><text x="55.8210%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (37 samples, 0.06%)</title><rect x="55.5710%" y="405" width="0.0564%" height="15" fill="rgb(230,79,13)" fg:x="36464" fg:w="37"/><text x="55.8210%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (7 samples, 0.01%)</title><rect x="55.6167%" y="389" width="0.0107%" height="15" fill="rgb(247,105,23)" fg:x="36494" fg:w="7"/><text x="55.8667%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.01%)</title><rect x="55.6167%" y="373" width="0.0107%" height="15" fill="rgb(223,179,41)" fg:x="36494" fg:w="7"/><text x="55.8667%" y="383.50"></text></g><g><title>[unknown] (62 samples, 0.09%)</title><rect x="55.6274%" y="485" width="0.0945%" height="15" fill="rgb(218,9,34)" fg:x="36501" fg:w="62"/><text x="55.8774%" y="495.50"></text></g><g><title>[unknown] (62 samples, 0.09%)</title><rect x="55.6274%" y="469" width="0.0945%" height="15" fill="rgb(222,106,8)" fg:x="36501" fg:w="62"/><text x="55.8774%" y="479.50"></text></g><g><title>[unknown] (62 samples, 0.09%)</title><rect x="55.6274%" y="453" width="0.0945%" height="15" fill="rgb(211,220,0)" fg:x="36501" fg:w="62"/><text x="55.8774%" y="463.50"></text></g><g><title>[unknown] (62 samples, 0.09%)</title><rect x="55.6274%" y="437" width="0.0945%" height="15" fill="rgb(229,52,16)" fg:x="36501" fg:w="62"/><text x="55.8774%" y="447.50"></text></g><g><title>[unknown] (62 samples, 0.09%)</title><rect x="55.6274%" y="421" width="0.0945%" height="15" fill="rgb(212,155,18)" fg:x="36501" fg:w="62"/><text x="55.8774%" y="431.50"></text></g><g><title>[unknown] (52 samples, 0.08%)</title><rect x="55.6426%" y="405" width="0.0792%" height="15" fill="rgb(242,21,14)" fg:x="36511" fg:w="52"/><text x="55.8926%" y="415.50"></text></g><g><title>[unknown] (41 samples, 0.06%)</title><rect x="55.6594%" y="389" width="0.0625%" height="15" fill="rgb(222,19,48)" fg:x="36522" fg:w="41"/><text x="55.9094%" y="399.50"></text></g><g><title>[unknown] (40 samples, 0.06%)</title><rect x="55.6609%" y="373" width="0.0610%" height="15" fill="rgb(232,45,27)" fg:x="36523" fg:w="40"/><text x="55.9109%" y="383.50"></text></g><g><title>[unknown] (39 samples, 0.06%)</title><rect x="55.6624%" y="357" width="0.0594%" height="15" fill="rgb(249,103,42)" fg:x="36524" fg:w="39"/><text x="55.9124%" y="367.50"></text></g><g><title>[unknown] (39 samples, 0.06%)</title><rect x="55.6624%" y="341" width="0.0594%" height="15" fill="rgb(246,81,33)" fg:x="36524" fg:w="39"/><text x="55.9124%" y="351.50"></text></g><g><title>[unknown] (30 samples, 0.05%)</title><rect x="55.6761%" y="325" width="0.0457%" height="15" fill="rgb(252,33,42)" fg:x="36533" fg:w="30"/><text x="55.9261%" y="335.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="55.7112%" y="309" width="0.0107%" height="15" fill="rgb(209,212,41)" fg:x="36556" fg:w="7"/><text x="55.9612%" y="319.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (587 samples, 0.89%)</title><rect x="55.7356%" y="453" width="0.8946%" height="15" fill="rgb(207,154,6)" fg:x="36572" fg:w="587"/><text x="55.9856%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (587 samples, 0.89%)</title><rect x="55.7356%" y="437" width="0.8946%" height="15" fill="rgb(223,64,47)" fg:x="36572" fg:w="587"/><text x="55.9856%" y="447.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2,192 samples, 3.34%)</title><rect x="55.7218%" y="485" width="3.3406%" height="15" fill="rgb(211,161,38)" fg:x="36563" fg:w="2192"/><text x="55.9718%" y="495.50">cor..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2,192 samples, 3.34%)</title><rect x="55.7218%" y="469" width="3.3406%" height="15" fill="rgb(219,138,40)" fg:x="36563" fg:w="2192"/><text x="55.9718%" y="479.50">&lt;co..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1,596 samples, 2.43%)</title><rect x="56.6301%" y="453" width="2.4323%" height="15" fill="rgb(241,228,46)" fg:x="37159" fg:w="1596"/><text x="56.8801%" y="463.50">co..</text></g><g><title>core::option::Option&lt;T&gt;::as_mut (898 samples, 1.37%)</title><rect x="59.0624%" y="485" width="1.3685%" height="15" fill="rgb(223,209,38)" fg:x="38755" fg:w="898"/><text x="59.3124%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (449 samples, 0.68%)</title><rect x="60.4310%" y="485" width="0.6843%" height="15" fill="rgb(236,164,45)" fg:x="39653" fg:w="449"/><text x="60.6810%" y="495.50"></text></g><g><title>__GI___libc_free (7 samples, 0.01%)</title><rect x="61.1153%" y="373" width="0.0107%" height="15" fill="rgb(231,15,5)" fg:x="40102" fg:w="7"/><text x="61.3653%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;id_collections::id_vec::IdVec&lt;montecarlo::lattice::Even_Site_Id,bool&gt;&gt; (10 samples, 0.02%)</title><rect x="61.1153%" y="469" width="0.0152%" height="15" fill="rgb(252,35,15)" fg:x="40102" fg:w="10"/><text x="61.3653%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (10 samples, 0.02%)</title><rect x="61.1153%" y="453" width="0.0152%" height="15" fill="rgb(248,181,18)" fg:x="40102" fg:w="10"/><text x="61.3653%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (10 samples, 0.02%)</title><rect x="61.1153%" y="437" width="0.0152%" height="15" fill="rgb(233,39,42)" fg:x="40102" fg:w="10"/><text x="61.3653%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="61.1153%" y="421" width="0.0152%" height="15" fill="rgb(238,110,33)" fg:x="40102" fg:w="10"/><text x="61.3653%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.02%)</title><rect x="61.1153%" y="405" width="0.0152%" height="15" fill="rgb(233,195,10)" fg:x="40102" fg:w="10"/><text x="61.3653%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.02%)</title><rect x="61.1153%" y="389" width="0.0152%" height="15" fill="rgb(254,105,3)" fg:x="40102" fg:w="10"/><text x="61.3653%" y="399.50"></text></g><g><title>__GI___libc_free (9 samples, 0.01%)</title><rect x="61.1305%" y="373" width="0.0137%" height="15" fill="rgb(221,225,9)" fg:x="40112" fg:w="9"/><text x="61.3805%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;montecarlo::lattice::Bipartite_Id_Vec&lt;bool&gt;&gt; (20 samples, 0.03%)</title><rect x="61.1153%" y="485" width="0.0305%" height="15" fill="rgb(224,227,45)" fg:x="40102" fg:w="20"/><text x="61.3653%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;id_collections::id_vec::IdVec&lt;montecarlo::lattice::Odd_Site_Id,bool&gt;&gt; (10 samples, 0.02%)</title><rect x="61.1305%" y="469" width="0.0152%" height="15" fill="rgb(229,198,43)" fg:x="40112" fg:w="10"/><text x="61.3805%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (10 samples, 0.02%)</title><rect x="61.1305%" y="453" width="0.0152%" height="15" fill="rgb(206,209,35)" fg:x="40112" fg:w="10"/><text x="61.3805%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (10 samples, 0.02%)</title><rect x="61.1305%" y="437" width="0.0152%" height="15" fill="rgb(245,195,53)" fg:x="40112" fg:w="10"/><text x="61.3805%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="61.1305%" y="421" width="0.0152%" height="15" fill="rgb(240,92,26)" fg:x="40112" fg:w="10"/><text x="61.3805%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.02%)</title><rect x="61.1305%" y="405" width="0.0152%" height="15" fill="rgb(207,40,23)" fg:x="40112" fg:w="10"/><text x="61.3805%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.02%)</title><rect x="61.1305%" y="389" width="0.0152%" height="15" fill="rgb(223,111,35)" fg:x="40112" fg:w="10"/><text x="61.3805%" y="399.50"></text></g><g><title>__GI___libc_free (20 samples, 0.03%)</title><rect x="61.1488%" y="373" width="0.0305%" height="15" fill="rgb(229,147,28)" fg:x="40124" fg:w="20"/><text x="61.3988%" y="383.50"></text></g><g><title>_int_free (13 samples, 0.02%)</title><rect x="61.1595%" y="357" width="0.0198%" height="15" fill="rgb(211,29,28)" fg:x="40131" fg:w="13"/><text x="61.4095%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (24 samples, 0.04%)</title><rect x="61.1488%" y="405" width="0.0366%" height="15" fill="rgb(228,72,33)" fg:x="40124" fg:w="24"/><text x="61.3988%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (24 samples, 0.04%)</title><rect x="61.1488%" y="389" width="0.0366%" height="15" fill="rgb(205,214,31)" fg:x="40124" fg:w="24"/><text x="61.3988%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;id_collections::id_vec::IdVec&lt;montecarlo::lattice::Even_Site_Id,montecarlo::state::OperatorId&gt;&gt; (27 samples, 0.04%)</title><rect x="61.1457%" y="469" width="0.0411%" height="15" fill="rgb(224,111,15)" fg:x="40122" fg:w="27"/><text x="61.3957%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;montecarlo::state::OperatorId&gt;&gt; (27 samples, 0.04%)</title><rect x="61.1457%" y="453" width="0.0411%" height="15" fill="rgb(253,21,26)" fg:x="40122" fg:w="27"/><text x="61.3957%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;montecarlo::state::OperatorId&gt;&gt; (27 samples, 0.04%)</title><rect x="61.1457%" y="437" width="0.0411%" height="15" fill="rgb(245,139,43)" fg:x="40122" fg:w="27"/><text x="61.3957%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.04%)</title><rect x="61.1457%" y="421" width="0.0411%" height="15" fill="rgb(252,170,7)" fg:x="40122" fg:w="27"/><text x="61.3957%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.01%)</title><rect x="61.1869%" y="405" width="0.0137%" height="15" fill="rgb(231,118,14)" fg:x="40149" fg:w="9"/><text x="61.4369%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.01%)</title><rect x="61.1869%" y="389" width="0.0137%" height="15" fill="rgb(238,83,0)" fg:x="40149" fg:w="9"/><text x="61.4369%" y="399.50"></text></g><g><title>__GI___libc_free (9 samples, 0.01%)</title><rect x="61.1869%" y="373" width="0.0137%" height="15" fill="rgb(221,39,39)" fg:x="40149" fg:w="9"/><text x="61.4369%" y="383.50"></text></g><g><title>_int_free (7 samples, 0.01%)</title><rect x="61.1899%" y="357" width="0.0107%" height="15" fill="rgb(222,119,46)" fg:x="40151" fg:w="7"/><text x="61.4399%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;montecarlo::lattice::Bipartite_Id_Vec&lt;montecarlo::state::OperatorId&gt;&gt; (37 samples, 0.06%)</title><rect x="61.1457%" y="485" width="0.0564%" height="15" fill="rgb(222,165,49)" fg:x="40122" fg:w="37"/><text x="61.3957%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;id_collections::id_vec::IdVec&lt;montecarlo::lattice::Odd_Site_Id,montecarlo::state::OperatorId&gt;&gt; (10 samples, 0.02%)</title><rect x="61.1869%" y="469" width="0.0152%" height="15" fill="rgb(219,113,52)" fg:x="40149" fg:w="10"/><text x="61.4369%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;montecarlo::state::OperatorId&gt;&gt; (10 samples, 0.02%)</title><rect x="61.1869%" y="453" width="0.0152%" height="15" fill="rgb(214,7,15)" fg:x="40149" fg:w="10"/><text x="61.4369%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;montecarlo::state::OperatorId&gt;&gt; (10 samples, 0.02%)</title><rect x="61.1869%" y="437" width="0.0152%" height="15" fill="rgb(235,32,4)" fg:x="40149" fg:w="10"/><text x="61.4369%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="61.1869%" y="421" width="0.0152%" height="15" fill="rgb(238,90,54)" fg:x="40149" fg:w="10"/><text x="61.4369%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (21 samples, 0.03%)</title><rect x="61.2097%" y="453" width="0.0320%" height="15" fill="rgb(213,208,19)" fg:x="40164" fg:w="21"/><text x="61.4597%" y="463.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.02%)</title><rect x="61.2524%" y="389" width="0.0168%" height="15" fill="rgb(233,156,4)" fg:x="40192" fg:w="11"/><text x="61.5024%" y="399.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hd28e0cdf38b391c3E.llvm.9247018699232294813 (15 samples, 0.02%)</title><rect x="61.2509%" y="405" width="0.0229%" height="15" fill="rgb(207,194,5)" fg:x="40191" fg:w="15"/><text x="61.5009%" y="415.50"></text></g><g><title>_int_free (20 samples, 0.03%)</title><rect x="61.3286%" y="309" width="0.0305%" height="15" fill="rgb(206,111,30)" fg:x="40242" fg:w="20"/><text x="61.5786%" y="319.50"></text></g><g><title>_int_malloc (30 samples, 0.05%)</title><rect x="61.3591%" y="309" width="0.0457%" height="15" fill="rgb(243,70,54)" fg:x="40262" fg:w="30"/><text x="61.6091%" y="319.50"></text></g><g><title>_int_realloc (67 samples, 0.10%)</title><rect x="61.3042%" y="325" width="0.1021%" height="15" fill="rgb(242,28,8)" fg:x="40226" fg:w="67"/><text x="61.5542%" y="335.50"></text></g><g><title>__GI___libc_realloc (80 samples, 0.12%)</title><rect x="61.2890%" y="341" width="0.1219%" height="15" fill="rgb(219,106,18)" fg:x="40216" fg:w="80"/><text x="61.5390%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (85 samples, 0.13%)</title><rect x="61.2890%" y="389" width="0.1295%" height="15" fill="rgb(244,222,10)" fg:x="40216" fg:w="85"/><text x="61.5390%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (85 samples, 0.13%)</title><rect x="61.2890%" y="373" width="0.1295%" height="15" fill="rgb(236,179,52)" fg:x="40216" fg:w="85"/><text x="61.5390%" y="383.50"></text></g><g><title>alloc::alloc::realloc (85 samples, 0.13%)</title><rect x="61.2890%" y="357" width="0.1295%" height="15" fill="rgb(213,23,39)" fg:x="40216" fg:w="85"/><text x="61.5390%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (91 samples, 0.14%)</title><rect x="61.2814%" y="405" width="0.1387%" height="15" fill="rgb(238,48,10)" fg:x="40211" fg:w="91"/><text x="61.5314%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (118 samples, 0.18%)</title><rect x="61.2478%" y="421" width="0.1798%" height="15" fill="rgb(251,196,23)" fg:x="40189" fg:w="118"/><text x="61.4978%" y="431.50"></text></g><g><title>id_collections::id_vec::IdVec&lt;I,T&gt;::push (150 samples, 0.23%)</title><rect x="61.2021%" y="485" width="0.2286%" height="15" fill="rgb(250,152,24)" fg:x="40159" fg:w="150"/><text x="61.4521%" y="495.50"></text></g><g><title>id_collections::id_vec::IdVec&lt;I,T&gt;::try_push (150 samples, 0.23%)</title><rect x="61.2021%" y="469" width="0.2286%" height="15" fill="rgb(209,150,17)" fg:x="40159" fg:w="150"/><text x="61.4521%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::try_reserve (124 samples, 0.19%)</title><rect x="61.2418%" y="453" width="0.1890%" height="15" fill="rgb(234,202,34)" fg:x="40185" fg:w="124"/><text x="61.4918%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (124 samples, 0.19%)</title><rect x="61.2418%" y="437" width="0.1890%" height="15" fill="rgb(253,148,53)" fg:x="40185" fg:w="124"/><text x="61.4918%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (110 samples, 0.17%)</title><rect x="61.4307%" y="469" width="0.1676%" height="15" fill="rgb(218,129,16)" fg:x="40309" fg:w="110"/><text x="61.6807%" y="479.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (110 samples, 0.17%)</title><rect x="61.4307%" y="453" width="0.1676%" height="15" fill="rgb(216,85,19)" fg:x="40309" fg:w="110"/><text x="61.6807%" y="463.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (110 samples, 0.17%)</title><rect x="61.4307%" y="437" width="0.1676%" height="15" fill="rgb(235,228,7)" fg:x="40309" fg:w="110"/><text x="61.6807%" y="447.50"></text></g><g><title>&lt;montecarlo::lattice::Edge as core::clone::Clone&gt;::clone (877 samples, 1.34%)</title><rect x="61.5984%" y="469" width="1.3365%" height="15" fill="rgb(245,175,0)" fg:x="40419" fg:w="877"/><text x="61.8484%" y="479.50"></text></g><g><title>&lt;usize as rand::distributions::utils::WideningMultiply&gt;::wmul (258 samples, 0.39%)</title><rect x="63.0812%" y="421" width="0.3932%" height="15" fill="rgb(208,168,36)" fg:x="41392" fg:w="258"/><text x="63.3312%" y="431.50"></text></g><g><title>&lt;u64 as rand::distributions::utils::WideningMultiply&gt;::wmul (258 samples, 0.39%)</title><rect x="63.0812%" y="405" width="0.3932%" height="15" fill="rgb(246,171,24)" fg:x="41392" fg:w="258"/><text x="63.3312%" y="415.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64::_{{closure}} (108 samples, 0.16%)</title><rect x="64.8201%" y="341" width="0.1646%" height="15" fill="rgb(215,142,24)" fg:x="42533" fg:w="108"/><text x="65.0701%" y="351.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="64.9847%" y="341" width="0.0107%" height="15" fill="rgb(250,187,7)" fg:x="42641" fg:w="7"/><text x="65.2347%" y="351.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="64.9847%" y="325" width="0.0107%" height="15" fill="rgb(228,66,33)" fg:x="42641" fg:w="7"/><text x="65.2347%" y="335.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="64.9847%" y="309" width="0.0107%" height="15" fill="rgb(234,215,21)" fg:x="42641" fg:w="7"/><text x="65.2347%" y="319.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="64.9847%" y="293" width="0.0107%" height="15" fill="rgb(222,191,20)" fg:x="42641" fg:w="7"/><text x="65.2347%" y="303.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="64.9847%" y="277" width="0.0107%" height="15" fill="rgb(245,79,54)" fg:x="42641" fg:w="7"/><text x="65.2347%" y="287.50"></text></g><g><title>rand_chacha::guts::refill_wide (8 samples, 0.01%)</title><rect x="65.0091%" y="277" width="0.0122%" height="15" fill="rgb(240,10,37)" fg:x="42657" fg:w="8"/><text x="65.2591%" y="287.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (8 samples, 0.01%)</title><rect x="65.0213%" y="245" width="0.0122%" height="15" fill="rgb(214,192,32)" fg:x="42665" fg:w="8"/><text x="65.2713%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt; as core::ops::arith::Add&gt;::add (13 samples, 0.02%)</title><rect x="65.0441%" y="229" width="0.0198%" height="15" fill="rgb(209,36,54)" fg:x="42680" fg:w="13"/><text x="65.2941%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (13 samples, 0.02%)</title><rect x="65.0441%" y="213" width="0.0198%" height="15" fill="rgb(220,10,11)" fg:x="42680" fg:w="13"/><text x="65.2941%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt; as ppv_lite86::types::StoreBytes&gt;::write_le (14 samples, 0.02%)</title><rect x="65.0639%" y="229" width="0.0213%" height="15" fill="rgb(221,106,17)" fg:x="42693" fg:w="14"/><text x="65.3139%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_storeu_si128 (14 samples, 0.02%)</title><rect x="65.0639%" y="213" width="0.0213%" height="15" fill="rgb(251,142,44)" fg:x="42693" fg:w="14"/><text x="65.3139%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (14 samples, 0.02%)</title><rect x="65.0639%" y="197" width="0.0213%" height="15" fill="rgb(238,13,15)" fg:x="42693" fg:w="14"/><text x="65.3139%" y="207.50"></text></g><g><title>core::ptr::write_unaligned (14 samples, 0.02%)</title><rect x="65.0639%" y="181" width="0.0213%" height="15" fill="rgb(208,107,27)" fg:x="42693" fg:w="14"/><text x="65.3139%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.02%)</title><rect x="65.0639%" y="165" width="0.0213%" height="15" fill="rgb(205,136,37)" fg:x="42693" fg:w="14"/><text x="65.3139%" y="175.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,ppv_lite86::x86_64::YesS4,NI&gt; as ppv_lite86::types::Vec4&lt;u32&gt;&gt;::insert (47 samples, 0.07%)</title><rect x="65.0853%" y="229" width="0.0716%" height="15" fill="rgb(250,205,27)" fg:x="42707" fg:w="47"/><text x="65.3353%" y="239.50"></text></g><g><title>core::core_arch::x86::sse41::_mm_insert_epi32 (47 samples, 0.07%)</title><rect x="65.0853%" y="213" width="0.0716%" height="15" fill="rgb(210,80,43)" fg:x="42707" fg:w="47"/><text x="65.3353%" y="223.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (19 samples, 0.03%)</title><rect x="65.1569%" y="229" width="0.0290%" height="15" fill="rgb(247,160,36)" fg:x="42754" fg:w="19"/><text x="65.4069%" y="239.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (19 samples, 0.03%)</title><rect x="65.1569%" y="213" width="0.0290%" height="15" fill="rgb(234,13,49)" fg:x="42754" fg:w="19"/><text x="65.4069%" y="223.50"></text></g><g><title>ppv_lite86::x86_64::sse2::avx2::_&lt;impl ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 4]&gt; for ppv_lite86::soft::x2&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt;,ppv_lite86::x86_64::sse2::G0&gt;&gt;::to_lanes (13 samples, 0.02%)</title><rect x="65.2026%" y="229" width="0.0198%" height="15" fill="rgb(234,122,0)" fg:x="42784" fg:w="13"/><text x="65.4526%" y="239.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 2]&gt;&gt;::to_lanes (13 samples, 0.02%)</title><rect x="65.2026%" y="213" width="0.0198%" height="15" fill="rgb(207,146,38)" fg:x="42784" fg:w="13"/><text x="65.4526%" y="223.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_extracti128_si256 (13 samples, 0.02%)</title><rect x="65.2026%" y="197" width="0.0198%" height="15" fill="rgb(207,177,25)" fg:x="42784" fg:w="13"/><text x="65.4526%" y="207.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (9 samples, 0.01%)</title><rect x="65.2224%" y="213" width="0.0137%" height="15" fill="rgb(211,178,42)" fg:x="42797" fg:w="9"/><text x="65.4724%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (9 samples, 0.01%)</title><rect x="65.2224%" y="197" width="0.0137%" height="15" fill="rgb(230,69,54)" fg:x="42797" fg:w="9"/><text x="65.4724%" y="207.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (9 samples, 0.01%)</title><rect x="65.2224%" y="181" width="0.0137%" height="15" fill="rgb(214,135,41)" fg:x="42797" fg:w="9"/><text x="65.4724%" y="191.50"></text></g><g><title>rand_chacha::guts::diagonalize (25 samples, 0.04%)</title><rect x="65.2224%" y="229" width="0.0381%" height="15" fill="rgb(237,67,25)" fg:x="42797" fg:w="25"/><text x="65.4724%" y="239.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (16 samples, 0.02%)</title><rect x="65.2361%" y="213" width="0.0244%" height="15" fill="rgb(222,189,50)" fg:x="42806" fg:w="16"/><text x="65.4861%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (16 samples, 0.02%)</title><rect x="65.2361%" y="197" width="0.0244%" height="15" fill="rgb(245,148,34)" fg:x="42806" fg:w="16"/><text x="65.4861%" y="207.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (16 samples, 0.02%)</title><rect x="65.2361%" y="181" width="0.0244%" height="15" fill="rgb(222,29,6)" fg:x="42806" fg:w="16"/><text x="65.4861%" y="191.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (179 samples, 0.27%)</title><rect x="65.2605%" y="165" width="0.2728%" height="15" fill="rgb(221,189,43)" fg:x="42822" fg:w="179"/><text x="65.5105%" y="175.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (182 samples, 0.28%)</title><rect x="65.2605%" y="213" width="0.2774%" height="15" fill="rgb(207,36,27)" fg:x="42822" fg:w="182"/><text x="65.5105%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (182 samples, 0.28%)</title><rect x="65.2605%" y="197" width="0.2774%" height="15" fill="rgb(217,90,24)" fg:x="42822" fg:w="182"/><text x="65.5105%" y="207.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (182 samples, 0.28%)</title><rect x="65.2605%" y="181" width="0.2774%" height="15" fill="rgb(224,66,35)" fg:x="42822" fg:w="182"/><text x="65.5105%" y="191.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::bit::BitXor&gt;::bitxor (77 samples, 0.12%)</title><rect x="65.5379%" y="213" width="0.1173%" height="15" fill="rgb(221,13,50)" fg:x="43004" fg:w="77"/><text x="65.7879%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::bit::BitXor&gt;::bitxor (77 samples, 0.12%)</title><rect x="65.5379%" y="197" width="0.1173%" height="15" fill="rgb(236,68,49)" fg:x="43004" fg:w="77"/><text x="65.7879%" y="207.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (77 samples, 0.12%)</title><rect x="65.5379%" y="181" width="0.1173%" height="15" fill="rgb(229,146,28)" fg:x="43004" fg:w="77"/><text x="65.7879%" y="191.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (144 samples, 0.22%)</title><rect x="65.6552%" y="213" width="0.2195%" height="15" fill="rgb(225,31,38)" fg:x="43081" fg:w="144"/><text x="65.9052%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (144 samples, 0.22%)</title><rect x="65.6552%" y="197" width="0.2195%" height="15" fill="rgb(250,208,3)" fg:x="43081" fg:w="144"/><text x="65.9052%" y="207.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (144 samples, 0.22%)</title><rect x="65.6552%" y="181" width="0.2195%" height="15" fill="rgb(246,54,23)" fg:x="43081" fg:w="144"/><text x="65.9052%" y="191.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (151 samples, 0.23%)</title><rect x="65.8747%" y="181" width="0.2301%" height="15" fill="rgb(243,76,11)" fg:x="43225" fg:w="151"/><text x="66.1247%" y="191.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (164 samples, 0.25%)</title><rect x="65.8747%" y="213" width="0.2499%" height="15" fill="rgb(245,21,50)" fg:x="43225" fg:w="164"/><text x="66.1247%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (164 samples, 0.25%)</title><rect x="65.8747%" y="197" width="0.2499%" height="15" fill="rgb(228,9,43)" fg:x="43225" fg:w="164"/><text x="66.1247%" y="207.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (13 samples, 0.02%)</title><rect x="66.1048%" y="181" width="0.0198%" height="15" fill="rgb(208,100,47)" fg:x="43376" fg:w="13"/><text x="66.3548%" y="191.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (98 samples, 0.15%)</title><rect x="66.1246%" y="213" width="0.1494%" height="15" fill="rgb(232,26,8)" fg:x="43389" fg:w="98"/><text x="66.3746%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (98 samples, 0.15%)</title><rect x="66.1246%" y="197" width="0.1494%" height="15" fill="rgb(216,166,38)" fg:x="43389" fg:w="98"/><text x="66.3746%" y="207.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (98 samples, 0.15%)</title><rect x="66.1246%" y="181" width="0.1494%" height="15" fill="rgb(251,202,51)" fg:x="43389" fg:w="98"/><text x="66.3746%" y="191.50"></text></g><g><title>rand_chacha::guts::round (807 samples, 1.23%)</title><rect x="65.2605%" y="229" width="1.2299%" height="15" fill="rgb(254,216,34)" fg:x="42822" fg:w="807"/><text x="65.5105%" y="239.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (142 samples, 0.22%)</title><rect x="66.2740%" y="213" width="0.2164%" height="15" fill="rgb(251,32,27)" fg:x="43487" fg:w="142"/><text x="66.5240%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (142 samples, 0.22%)</title><rect x="66.2740%" y="197" width="0.2164%" height="15" fill="rgb(208,127,28)" fg:x="43487" fg:w="142"/><text x="66.5240%" y="207.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (142 samples, 0.22%)</title><rect x="66.2740%" y="181" width="0.2164%" height="15" fill="rgb(224,137,22)" fg:x="43487" fg:w="142"/><text x="66.5240%" y="191.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (23 samples, 0.04%)</title><rect x="66.4904%" y="213" width="0.0351%" height="15" fill="rgb(254,70,32)" fg:x="43629" fg:w="23"/><text x="66.7404%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (23 samples, 0.04%)</title><rect x="66.4904%" y="197" width="0.0351%" height="15" fill="rgb(229,75,37)" fg:x="43629" fg:w="23"/><text x="66.7404%" y="207.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (23 samples, 0.04%)</title><rect x="66.4904%" y="181" width="0.0351%" height="15" fill="rgb(252,64,23)" fg:x="43629" fg:w="23"/><text x="66.7404%" y="191.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (11 samples, 0.02%)</title><rect x="66.5254%" y="213" width="0.0168%" height="15" fill="rgb(232,162,48)" fg:x="43652" fg:w="11"/><text x="66.7754%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (11 samples, 0.02%)</title><rect x="66.5254%" y="197" width="0.0168%" height="15" fill="rgb(246,160,12)" fg:x="43652" fg:w="11"/><text x="66.7754%" y="207.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (11 samples, 0.02%)</title><rect x="66.5254%" y="181" width="0.0168%" height="15" fill="rgb(247,166,0)" fg:x="43652" fg:w="11"/><text x="66.7754%" y="191.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (1,005 samples, 1.53%)</title><rect x="65.0213%" y="277" width="1.5316%" height="15" fill="rgb(249,219,21)" fg:x="42665" fg:w="1005"/><text x="65.2713%" y="287.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (1,005 samples, 1.53%)</title><rect x="65.0213%" y="261" width="1.5316%" height="15" fill="rgb(205,209,3)" fg:x="42665" fg:w="1005"/><text x="65.2713%" y="271.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (997 samples, 1.52%)</title><rect x="65.0335%" y="245" width="1.5194%" height="15" fill="rgb(243,44,1)" fg:x="42673" fg:w="997"/><text x="65.2835%" y="255.50"></text></g><g><title>rand_chacha::guts::undiagonalize (41 samples, 0.06%)</title><rect x="66.4904%" y="229" width="0.0625%" height="15" fill="rgb(206,159,16)" fg:x="43629" fg:w="41"/><text x="66.7404%" y="239.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (7 samples, 0.01%)</title><rect x="66.5422%" y="213" width="0.0107%" height="15" fill="rgb(244,77,30)" fg:x="43663" fg:w="7"/><text x="66.7922%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (7 samples, 0.01%)</title><rect x="66.5422%" y="197" width="0.0107%" height="15" fill="rgb(218,69,12)" fg:x="43663" fg:w="7"/><text x="66.7922%" y="207.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (7 samples, 0.01%)</title><rect x="66.5422%" y="181" width="0.0107%" height="15" fill="rgb(212,87,7)" fg:x="43663" fg:w="7"/><text x="66.7922%" y="191.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (1,020 samples, 1.55%)</title><rect x="65.0014%" y="309" width="1.5545%" height="15" fill="rgb(245,114,25)" fg:x="42652" fg:w="1020"/><text x="65.2514%" y="319.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (1,020 samples, 1.55%)</title><rect x="65.0014%" y="293" width="1.5545%" height="15" fill="rgb(210,61,42)" fg:x="42652" fg:w="1020"/><text x="65.2514%" y="303.50"></text></g><g><title>rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt;::reseed_and_generate (14 samples, 0.02%)</title><rect x="66.5574%" y="309" width="0.0213%" height="15" fill="rgb(211,52,33)" fg:x="43673" fg:w="14"/><text x="66.8074%" y="319.50"></text></g><g><title>rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt;::reseed (14 samples, 0.02%)</title><rect x="66.5574%" y="293" width="0.0213%" height="15" fill="rgb(234,58,33)" fg:x="43673" fg:w="14"/><text x="66.8074%" y="303.50"></text></g><g><title>rand_core::SeedableRng::from_rng (14 samples, 0.02%)</title><rect x="66.5574%" y="277" width="0.0213%" height="15" fill="rgb(220,115,36)" fg:x="43673" fg:w="14"/><text x="66.8074%" y="287.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::try_fill_bytes (13 samples, 0.02%)</title><rect x="66.5590%" y="261" width="0.0198%" height="15" fill="rgb(243,153,54)" fg:x="43674" fg:w="13"/><text x="66.8090%" y="271.50"></text></g><g><title>&lt;rand_core::os::OsRng as rand_core::RngCore&gt;::try_fill_bytes (13 samples, 0.02%)</title><rect x="66.5590%" y="245" width="0.0198%" height="15" fill="rgb(251,47,18)" fg:x="43674" fg:w="13"/><text x="66.8090%" y="255.50"></text></g><g><title>getrandom::getrandom (13 samples, 0.02%)</title><rect x="66.5590%" y="229" width="0.0198%" height="15" fill="rgb(242,102,42)" fg:x="43674" fg:w="13"/><text x="66.8090%" y="239.50"></text></g><g><title>getrandom::getrandom_uninit (13 samples, 0.02%)</title><rect x="66.5590%" y="213" width="0.0198%" height="15" fill="rgb(234,31,38)" fg:x="43674" fg:w="13"/><text x="66.8090%" y="223.50"></text></g><g><title>getrandom::imp::getrandom_inner (13 samples, 0.02%)</title><rect x="66.5590%" y="197" width="0.0198%" height="15" fill="rgb(221,117,51)" fg:x="43674" fg:w="13"/><text x="66.8090%" y="207.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (13 samples, 0.02%)</title><rect x="66.5590%" y="181" width="0.0198%" height="15" fill="rgb(212,20,18)" fg:x="43674" fg:w="13"/><text x="66.8090%" y="191.50"></text></g><g><title>getrandom::imp::getrandom_inner::_{{closure}} (12 samples, 0.02%)</title><rect x="66.5605%" y="165" width="0.0183%" height="15" fill="rgb(245,133,36)" fg:x="43675" fg:w="12"/><text x="66.8105%" y="175.50"></text></g><g><title>getrandom::imp::getrandom (12 samples, 0.02%)</title><rect x="66.5605%" y="149" width="0.0183%" height="15" fill="rgb(212,6,19)" fg:x="43675" fg:w="12"/><text x="66.8105%" y="159.50"></text></g><g><title>syscall (12 samples, 0.02%)</title><rect x="66.5605%" y="133" width="0.0183%" height="15" fill="rgb(218,1,36)" fg:x="43675" fg:w="12"/><text x="66.8105%" y="143.50"></text></g><g><title>[unknown] (12 samples, 0.02%)</title><rect x="66.5605%" y="117" width="0.0183%" height="15" fill="rgb(246,84,54)" fg:x="43675" fg:w="12"/><text x="66.8105%" y="127.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="66.5651%" y="101" width="0.0137%" height="15" fill="rgb(242,110,6)" fg:x="43678" fg:w="9"/><text x="66.8151%" y="111.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="66.5651%" y="85" width="0.0137%" height="15" fill="rgb(214,47,5)" fg:x="43678" fg:w="9"/><text x="66.8151%" y="95.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="66.5651%" y="69" width="0.0137%" height="15" fill="rgb(218,159,25)" fg:x="43678" fg:w="9"/><text x="66.8151%" y="79.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="66.5666%" y="53" width="0.0122%" height="15" fill="rgb(215,211,28)" fg:x="43679" fg:w="8"/><text x="66.8166%" y="63.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="66.5681%" y="37" width="0.0107%" height="15" fill="rgb(238,59,32)" fg:x="43680" fg:w="7"/><text x="66.8181%" y="47.50"></text></g><g><title>montecarlo::lattice::Lattice::random_edge (3,381 samples, 5.15%)</title><rect x="61.4307%" y="485" width="5.1526%" height="15" fill="rgb(226,82,3)" fg:x="40309" fg:w="3381"/><text x="61.6807%" y="495.50">montec..</text></g><g><title>rand::rng::Rng::sample (2,394 samples, 3.65%)</title><rect x="62.9349%" y="469" width="3.6484%" height="15" fill="rgb(240,164,32)" fg:x="41296" fg:w="2394"/><text x="63.1849%" y="479.50">rand..</text></g><g><title>&lt;rand::distributions::uniform::Uniform&lt;X&gt; as rand::distributions::distribution::Distribution&lt;X&gt;&gt;::sample (2,394 samples, 3.65%)</title><rect x="62.9349%" y="453" width="3.6484%" height="15" fill="rgb(232,46,7)" fg:x="41296" fg:w="2394"/><text x="63.1849%" y="463.50">&lt;ran..</text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample (2,394 samples, 3.65%)</title><rect x="62.9349%" y="437" width="3.6484%" height="15" fill="rgb(229,129,53)" fg:x="41296" fg:w="2394"/><text x="63.1849%" y="447.50">&lt;ran..</text></g><g><title>rand::rng::Rng::gen (2,037 samples, 3.10%)</title><rect x="63.4790%" y="421" width="3.1044%" height="15" fill="rgb(234,188,29)" fg:x="41653" fg:w="2037"/><text x="63.7290%" y="431.50">ran..</text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;usize&gt; for rand::distributions::Standard&gt;::sample (2,037 samples, 3.10%)</title><rect x="63.4790%" y="405" width="3.1044%" height="15" fill="rgb(246,141,4)" fg:x="41653" fg:w="2037"/><text x="63.7290%" y="415.50">ran..</text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (2,037 samples, 3.10%)</title><rect x="63.4790%" y="389" width="3.1044%" height="15" fill="rgb(229,23,39)" fg:x="41653" fg:w="2037"/><text x="63.7290%" y="399.50">&lt;ra..</text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (2,037 samples, 3.10%)</title><rect x="63.4790%" y="373" width="3.1044%" height="15" fill="rgb(206,12,3)" fg:x="41653" fg:w="2037"/><text x="63.7290%" y="383.50">&lt;ra..</text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (2,037 samples, 3.10%)</title><rect x="63.4790%" y="357" width="3.1044%" height="15" fill="rgb(252,226,20)" fg:x="41653" fg:w="2037"/><text x="63.7290%" y="367.50">&lt;ra..</text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1,042 samples, 1.59%)</title><rect x="64.9954%" y="341" width="1.5880%" height="15" fill="rgb(216,123,35)" fg:x="42648" fg:w="1042"/><text x="65.2454%" y="351.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (1,042 samples, 1.59%)</title><rect x="64.9954%" y="325" width="1.5880%" height="15" fill="rgb(212,68,40)" fg:x="42648" fg:w="1042"/><text x="65.2454%" y="335.50"></text></g><g><title>montecarlo::state::State::delete (1,115 samples, 1.70%)</title><rect x="66.5834%" y="485" width="1.6993%" height="15" fill="rgb(254,125,32)" fg:x="43690" fg:w="1115"/><text x="66.8334%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (753 samples, 1.15%)</title><rect x="67.1350%" y="469" width="1.1476%" height="15" fill="rgb(253,97,22)" fg:x="44052" fg:w="753"/><text x="67.3850%" y="479.50"></text></g><g><title>&lt;id_collections::id_vec::IdVec&lt;I,T&gt; as core::ops::index::Index&lt;J&gt;&gt;::index (76 samples, 0.12%)</title><rect x="68.8145%" y="469" width="0.1158%" height="15" fill="rgb(241,101,14)" fg:x="45154" fg:w="76"/><text x="69.0645%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (76 samples, 0.12%)</title><rect x="68.8145%" y="453" width="0.1158%" height="15" fill="rgb(238,103,29)" fg:x="45154" fg:w="76"/><text x="69.0645%" y="463.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (76 samples, 0.12%)</title><rect x="68.8145%" y="437" width="0.1158%" height="15" fill="rgb(233,195,47)" fg:x="45154" fg:w="76"/><text x="69.0645%" y="447.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (76 samples, 0.12%)</title><rect x="68.8145%" y="421" width="0.1158%" height="15" fill="rgb(246,218,30)" fg:x="45154" fg:w="76"/><text x="69.0645%" y="431.50"></text></g><g><title>montecarlo::state::State::insert_diag (436 samples, 0.66%)</title><rect x="68.2826%" y="485" width="0.6645%" height="15" fill="rgb(219,145,47)" fg:x="44805" fg:w="436"/><text x="68.5326%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (11 samples, 0.02%)</title><rect x="68.9303%" y="469" width="0.0168%" height="15" fill="rgb(243,12,26)" fg:x="45230" fg:w="11"/><text x="69.1803%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (11 samples, 0.02%)</title><rect x="68.9303%" y="453" width="0.0168%" height="15" fill="rgb(214,87,16)" fg:x="45230" fg:w="11"/><text x="69.1803%" y="463.50"></text></g><g><title>&lt;f64 as rand::distributions::utils::FloatSIMDUtils&gt;::cast_from_int (369 samples, 0.56%)</title><rect x="69.0964%" y="453" width="0.5624%" height="15" fill="rgb(208,99,42)" fg:x="45339" fg:w="369"/><text x="69.3464%" y="463.50"></text></g><g><title>[unknown] (22 samples, 0.03%)</title><rect x="69.6588%" y="453" width="0.0335%" height="15" fill="rgb(253,99,2)" fg:x="45708" fg:w="22"/><text x="69.9088%" y="463.50"></text></g><g><title>[unknown] (22 samples, 0.03%)</title><rect x="69.6588%" y="437" width="0.0335%" height="15" fill="rgb(220,168,23)" fg:x="45708" fg:w="22"/><text x="69.9088%" y="447.50"></text></g><g><title>[unknown] (22 samples, 0.03%)</title><rect x="69.6588%" y="421" width="0.0335%" height="15" fill="rgb(242,38,24)" fg:x="45708" fg:w="22"/><text x="69.9088%" y="431.50"></text></g><g><title>[unknown] (21 samples, 0.03%)</title><rect x="69.6603%" y="405" width="0.0320%" height="15" fill="rgb(225,182,9)" fg:x="45709" fg:w="21"/><text x="69.9103%" y="415.50"></text></g><g><title>[unknown] (21 samples, 0.03%)</title><rect x="69.6603%" y="389" width="0.0320%" height="15" fill="rgb(243,178,37)" fg:x="45709" fg:w="21"/><text x="69.9103%" y="399.50"></text></g><g><title>[unknown] (19 samples, 0.03%)</title><rect x="69.6633%" y="373" width="0.0290%" height="15" fill="rgb(232,139,19)" fg:x="45711" fg:w="19"/><text x="69.9133%" y="383.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="69.6710%" y="357" width="0.0213%" height="15" fill="rgb(225,201,24)" fg:x="45716" fg:w="14"/><text x="69.9210%" y="367.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="69.6710%" y="341" width="0.0213%" height="15" fill="rgb(221,47,46)" fg:x="45716" fg:w="14"/><text x="69.9210%" y="351.50"></text></g><g><title>[unknown] (13 samples, 0.02%)</title><rect x="69.6725%" y="325" width="0.0198%" height="15" fill="rgb(249,23,13)" fg:x="45717" fg:w="13"/><text x="69.9225%" y="335.50"></text></g><g><title>[unknown] (13 samples, 0.02%)</title><rect x="69.6725%" y="309" width="0.0198%" height="15" fill="rgb(219,9,5)" fg:x="45717" fg:w="13"/><text x="69.9225%" y="319.50"></text></g><g><title>[unknown] (10 samples, 0.02%)</title><rect x="69.6771%" y="293" width="0.0152%" height="15" fill="rgb(254,171,16)" fg:x="45720" fg:w="10"/><text x="69.9271%" y="303.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64::_{{closure}} (459 samples, 0.70%)</title><rect x="70.1663%" y="373" width="0.6995%" height="15" fill="rgb(230,171,20)" fg:x="46041" fg:w="459"/><text x="70.4163%" y="383.50"></text></g><g><title>rand_chacha::guts::refill_wide (26 samples, 0.04%)</title><rect x="70.9283%" y="309" width="0.0396%" height="15" fill="rgb(210,71,41)" fg:x="46541" fg:w="26"/><text x="71.1783%" y="319.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (15 samples, 0.02%)</title><rect x="70.9679%" y="277" width="0.0229%" height="15" fill="rgb(206,173,20)" fg:x="46567" fg:w="15"/><text x="71.2179%" y="287.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt; as core::ops::arith::Add&gt;::add (17 samples, 0.03%)</title><rect x="71.0075%" y="261" width="0.0259%" height="15" fill="rgb(233,88,34)" fg:x="46593" fg:w="17"/><text x="71.2575%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (17 samples, 0.03%)</title><rect x="71.0075%" y="245" width="0.0259%" height="15" fill="rgb(223,209,46)" fg:x="46593" fg:w="17"/><text x="71.2575%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt; as ppv_lite86::types::StoreBytes&gt;::write_le (70 samples, 0.11%)</title><rect x="71.0334%" y="261" width="0.1067%" height="15" fill="rgb(250,43,18)" fg:x="46610" fg:w="70"/><text x="71.2834%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_storeu_si128 (70 samples, 0.11%)</title><rect x="71.0334%" y="245" width="0.1067%" height="15" fill="rgb(208,13,10)" fg:x="46610" fg:w="70"/><text x="71.2834%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (70 samples, 0.11%)</title><rect x="71.0334%" y="229" width="0.1067%" height="15" fill="rgb(212,200,36)" fg:x="46610" fg:w="70"/><text x="71.2834%" y="239.50"></text></g><g><title>core::ptr::write_unaligned (70 samples, 0.11%)</title><rect x="71.0334%" y="213" width="0.1067%" height="15" fill="rgb(225,90,30)" fg:x="46610" fg:w="70"/><text x="71.2834%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (70 samples, 0.11%)</title><rect x="71.0334%" y="197" width="0.1067%" height="15" fill="rgb(236,182,39)" fg:x="46610" fg:w="70"/><text x="71.2834%" y="207.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,ppv_lite86::x86_64::YesS4,NI&gt; as ppv_lite86::types::Vec4&lt;u32&gt;&gt;::insert (102 samples, 0.16%)</title><rect x="71.1401%" y="261" width="0.1554%" height="15" fill="rgb(212,144,35)" fg:x="46680" fg:w="102"/><text x="71.3901%" y="271.50"></text></g><g><title>core::core_arch::x86::sse41::_mm_insert_epi32 (102 samples, 0.16%)</title><rect x="71.1401%" y="245" width="0.1554%" height="15" fill="rgb(228,63,44)" fg:x="46680" fg:w="102"/><text x="71.3901%" y="255.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (44 samples, 0.07%)</title><rect x="71.2955%" y="261" width="0.0671%" height="15" fill="rgb(228,109,6)" fg:x="46782" fg:w="44"/><text x="71.5455%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (44 samples, 0.07%)</title><rect x="71.2955%" y="245" width="0.0671%" height="15" fill="rgb(238,117,24)" fg:x="46782" fg:w="44"/><text x="71.5455%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (7 samples, 0.01%)</title><rect x="71.3626%" y="261" width="0.0107%" height="15" fill="rgb(242,26,26)" fg:x="46826" fg:w="7"/><text x="71.6126%" y="271.50"></text></g><g><title>ppv_lite86::x86_64::sse2::avx2::_&lt;impl ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 4]&gt; for ppv_lite86::soft::x2&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt;,ppv_lite86::x86_64::sse2::G0&gt;&gt;::from_lanes (14 samples, 0.02%)</title><rect x="71.3733%" y="261" width="0.0213%" height="15" fill="rgb(221,92,48)" fg:x="46833" fg:w="14"/><text x="71.6233%" y="271.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 2]&gt;&gt;::from_lanes (14 samples, 0.02%)</title><rect x="71.3733%" y="245" width="0.0213%" height="15" fill="rgb(209,209,32)" fg:x="46833" fg:w="14"/><text x="71.6233%" y="255.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_m128i (14 samples, 0.02%)</title><rect x="71.3733%" y="229" width="0.0213%" height="15" fill="rgb(221,70,22)" fg:x="46833" fg:w="14"/><text x="71.6233%" y="239.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_m128i (14 samples, 0.02%)</title><rect x="71.3733%" y="213" width="0.0213%" height="15" fill="rgb(248,145,5)" fg:x="46833" fg:w="14"/><text x="71.6233%" y="223.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_m128 (14 samples, 0.02%)</title><rect x="71.3733%" y="197" width="0.0213%" height="15" fill="rgb(226,116,26)" fg:x="46833" fg:w="14"/><text x="71.6233%" y="207.50"></text></g><g><title>ppv_lite86::x86_64::sse2::avx2::_&lt;impl ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 4]&gt; for ppv_lite86::soft::x2&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt;,ppv_lite86::x86_64::sse2::G0&gt;&gt;::to_lanes (30 samples, 0.05%)</title><rect x="71.3946%" y="261" width="0.0457%" height="15" fill="rgb(244,5,17)" fg:x="46847" fg:w="30"/><text x="71.6446%" y="271.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 2]&gt;&gt;::to_lanes (30 samples, 0.05%)</title><rect x="71.3946%" y="245" width="0.0457%" height="15" fill="rgb(252,159,33)" fg:x="46847" fg:w="30"/><text x="71.6446%" y="255.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_extracti128_si256 (30 samples, 0.05%)</title><rect x="71.3946%" y="229" width="0.0457%" height="15" fill="rgb(206,71,0)" fg:x="46847" fg:w="30"/><text x="71.6446%" y="239.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (33 samples, 0.05%)</title><rect x="71.4403%" y="245" width="0.0503%" height="15" fill="rgb(233,118,54)" fg:x="46877" fg:w="33"/><text x="71.6903%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (33 samples, 0.05%)</title><rect x="71.4403%" y="229" width="0.0503%" height="15" fill="rgb(234,83,48)" fg:x="46877" fg:w="33"/><text x="71.6903%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (33 samples, 0.05%)</title><rect x="71.4403%" y="213" width="0.0503%" height="15" fill="rgb(228,3,54)" fg:x="46877" fg:w="33"/><text x="71.6903%" y="223.50"></text></g><g><title>rand_chacha::guts::diagonalize (109 samples, 0.17%)</title><rect x="71.4403%" y="261" width="0.1661%" height="15" fill="rgb(226,155,13)" fg:x="46877" fg:w="109"/><text x="71.6903%" y="271.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (76 samples, 0.12%)</title><rect x="71.4906%" y="245" width="0.1158%" height="15" fill="rgb(241,28,37)" fg:x="46910" fg:w="76"/><text x="71.7406%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (76 samples, 0.12%)</title><rect x="71.4906%" y="229" width="0.1158%" height="15" fill="rgb(233,93,10)" fg:x="46910" fg:w="76"/><text x="71.7406%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (76 samples, 0.12%)</title><rect x="71.4906%" y="213" width="0.1158%" height="15" fill="rgb(225,113,19)" fg:x="46910" fg:w="76"/><text x="71.7406%" y="223.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (532 samples, 0.81%)</title><rect x="71.6064%" y="245" width="0.8108%" height="15" fill="rgb(241,2,18)" fg:x="46986" fg:w="532"/><text x="71.8564%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (532 samples, 0.81%)</title><rect x="71.6064%" y="229" width="0.8108%" height="15" fill="rgb(228,207,21)" fg:x="46986" fg:w="532"/><text x="71.8564%" y="239.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (532 samples, 0.81%)</title><rect x="71.6064%" y="213" width="0.8108%" height="15" fill="rgb(213,211,35)" fg:x="46986" fg:w="532"/><text x="71.8564%" y="223.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (532 samples, 0.81%)</title><rect x="71.6064%" y="197" width="0.8108%" height="15" fill="rgb(209,83,10)" fg:x="46986" fg:w="532"/><text x="71.8564%" y="207.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::bit::BitXor&gt;::bitxor (284 samples, 0.43%)</title><rect x="72.4172%" y="245" width="0.4328%" height="15" fill="rgb(209,164,1)" fg:x="47518" fg:w="284"/><text x="72.6672%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::bit::BitXor&gt;::bitxor (284 samples, 0.43%)</title><rect x="72.4172%" y="229" width="0.4328%" height="15" fill="rgb(213,184,43)" fg:x="47518" fg:w="284"/><text x="72.6672%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (284 samples, 0.43%)</title><rect x="72.4172%" y="213" width="0.4328%" height="15" fill="rgb(231,61,34)" fg:x="47518" fg:w="284"/><text x="72.6672%" y="223.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (412 samples, 0.63%)</title><rect x="72.8500%" y="245" width="0.6279%" height="15" fill="rgb(235,75,3)" fg:x="47802" fg:w="412"/><text x="73.1000%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (412 samples, 0.63%)</title><rect x="72.8500%" y="229" width="0.6279%" height="15" fill="rgb(220,106,47)" fg:x="47802" fg:w="412"/><text x="73.1000%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (412 samples, 0.63%)</title><rect x="72.8500%" y="213" width="0.6279%" height="15" fill="rgb(210,196,33)" fg:x="47802" fg:w="412"/><text x="73.1000%" y="223.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (442 samples, 0.67%)</title><rect x="73.4779%" y="213" width="0.6736%" height="15" fill="rgb(229,154,42)" fg:x="48214" fg:w="442"/><text x="73.7279%" y="223.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (479 samples, 0.73%)</title><rect x="73.4779%" y="245" width="0.7300%" height="15" fill="rgb(228,114,26)" fg:x="48214" fg:w="479"/><text x="73.7279%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (479 samples, 0.73%)</title><rect x="73.4779%" y="229" width="0.7300%" height="15" fill="rgb(208,144,1)" fg:x="48214" fg:w="479"/><text x="73.7279%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (37 samples, 0.06%)</title><rect x="74.1515%" y="213" width="0.0564%" height="15" fill="rgb(239,112,37)" fg:x="48656" fg:w="37"/><text x="74.4015%" y="223.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (262 samples, 0.40%)</title><rect x="74.2079%" y="245" width="0.3993%" height="15" fill="rgb(210,96,50)" fg:x="48693" fg:w="262"/><text x="74.4579%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (262 samples, 0.40%)</title><rect x="74.2079%" y="229" width="0.3993%" height="15" fill="rgb(222,178,2)" fg:x="48693" fg:w="262"/><text x="74.4579%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (262 samples, 0.40%)</title><rect x="74.2079%" y="213" width="0.3993%" height="15" fill="rgb(226,74,18)" fg:x="48693" fg:w="262"/><text x="74.4579%" y="223.50"></text></g><g><title>rand_chacha::guts::round (2,354 samples, 3.59%)</title><rect x="71.6064%" y="261" width="3.5875%" height="15" fill="rgb(225,67,54)" fg:x="46986" fg:w="2354"/><text x="71.8564%" y="271.50">rand..</text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (385 samples, 0.59%)</title><rect x="74.6072%" y="245" width="0.5867%" height="15" fill="rgb(251,92,32)" fg:x="48955" fg:w="385"/><text x="74.8572%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (385 samples, 0.59%)</title><rect x="74.6072%" y="229" width="0.5867%" height="15" fill="rgb(228,149,22)" fg:x="48955" fg:w="385"/><text x="74.8572%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (385 samples, 0.59%)</title><rect x="74.6072%" y="213" width="0.5867%" height="15" fill="rgb(243,54,13)" fg:x="48955" fg:w="385"/><text x="74.8572%" y="223.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (56 samples, 0.09%)</title><rect x="75.1939%" y="245" width="0.0853%" height="15" fill="rgb(243,180,28)" fg:x="49340" fg:w="56"/><text x="75.4439%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (56 samples, 0.09%)</title><rect x="75.1939%" y="229" width="0.0853%" height="15" fill="rgb(208,167,24)" fg:x="49340" fg:w="56"/><text x="75.4439%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (56 samples, 0.09%)</title><rect x="75.1939%" y="213" width="0.0853%" height="15" fill="rgb(245,73,45)" fg:x="49340" fg:w="56"/><text x="75.4439%" y="223.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (29 samples, 0.04%)</title><rect x="75.2793%" y="245" width="0.0442%" height="15" fill="rgb(237,203,48)" fg:x="49396" fg:w="29"/><text x="75.5293%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (29 samples, 0.04%)</title><rect x="75.2793%" y="229" width="0.0442%" height="15" fill="rgb(211,197,16)" fg:x="49396" fg:w="29"/><text x="75.5293%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (29 samples, 0.04%)</title><rect x="75.2793%" y="213" width="0.0442%" height="15" fill="rgb(243,99,51)" fg:x="49396" fg:w="29"/><text x="75.5293%" y="223.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (2,896 samples, 4.41%)</title><rect x="70.9679%" y="309" width="4.4135%" height="15" fill="rgb(215,123,29)" fg:x="46567" fg:w="2896"/><text x="71.2179%" y="319.50">rand_..</text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (2,896 samples, 4.41%)</title><rect x="70.9679%" y="293" width="4.4135%" height="15" fill="rgb(239,186,37)" fg:x="46567" fg:w="2896"/><text x="71.2179%" y="303.50">rand_..</text></g><g><title>rand_chacha::guts::refill_wide_impl (2,881 samples, 4.39%)</title><rect x="70.9907%" y="277" width="4.3906%" height="15" fill="rgb(252,136,39)" fg:x="46582" fg:w="2881"/><text x="71.2407%" y="287.50">rand_..</text></g><g><title>rand_chacha::guts::undiagonalize (123 samples, 0.19%)</title><rect x="75.1939%" y="261" width="0.1875%" height="15" fill="rgb(223,213,32)" fg:x="49340" fg:w="123"/><text x="75.4439%" y="271.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (38 samples, 0.06%)</title><rect x="75.3235%" y="245" width="0.0579%" height="15" fill="rgb(233,115,5)" fg:x="49425" fg:w="38"/><text x="75.5735%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (38 samples, 0.06%)</title><rect x="75.3235%" y="229" width="0.0579%" height="15" fill="rgb(207,226,44)" fg:x="49425" fg:w="38"/><text x="75.5735%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (38 samples, 0.06%)</title><rect x="75.3235%" y="213" width="0.0579%" height="15" fill="rgb(208,126,0)" fg:x="49425" fg:w="38"/><text x="75.5735%" y="223.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (2,948 samples, 4.49%)</title><rect x="70.8947%" y="341" width="4.4927%" height="15" fill="rgb(244,66,21)" fg:x="46519" fg:w="2948"/><text x="71.1447%" y="351.50">&lt;rand..</text></g><g><title>rand_chacha::guts::ChaCha::refill4 (2,948 samples, 4.49%)</title><rect x="70.8947%" y="325" width="4.4927%" height="15" fill="rgb(222,97,12)" fg:x="46519" fg:w="2948"/><text x="71.1447%" y="335.50">rand_..</text></g><g><title>rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt;::reseed_and_generate (43 samples, 0.07%)</title><rect x="75.3875%" y="341" width="0.0655%" height="15" fill="rgb(219,213,19)" fg:x="49467" fg:w="43"/><text x="75.6375%" y="351.50"></text></g><g><title>rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt;::reseed (42 samples, 0.06%)</title><rect x="75.3890%" y="325" width="0.0640%" height="15" fill="rgb(252,169,30)" fg:x="49468" fg:w="42"/><text x="75.6390%" y="335.50"></text></g><g><title>rand_core::SeedableRng::from_rng (42 samples, 0.06%)</title><rect x="75.3890%" y="309" width="0.0640%" height="15" fill="rgb(206,32,51)" fg:x="49468" fg:w="42"/><text x="75.6390%" y="319.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::try_fill_bytes (42 samples, 0.06%)</title><rect x="75.3890%" y="293" width="0.0640%" height="15" fill="rgb(250,172,42)" fg:x="49468" fg:w="42"/><text x="75.6390%" y="303.50"></text></g><g><title>&lt;rand_core::os::OsRng as rand_core::RngCore&gt;::try_fill_bytes (42 samples, 0.06%)</title><rect x="75.3890%" y="277" width="0.0640%" height="15" fill="rgb(209,34,43)" fg:x="49468" fg:w="42"/><text x="75.6390%" y="287.50"></text></g><g><title>getrandom::getrandom (42 samples, 0.06%)</title><rect x="75.3890%" y="261" width="0.0640%" height="15" fill="rgb(223,11,35)" fg:x="49468" fg:w="42"/><text x="75.6390%" y="271.50"></text></g><g><title>getrandom::getrandom_uninit (42 samples, 0.06%)</title><rect x="75.3890%" y="245" width="0.0640%" height="15" fill="rgb(251,219,26)" fg:x="49468" fg:w="42"/><text x="75.6390%" y="255.50"></text></g><g><title>getrandom::imp::getrandom_inner (42 samples, 0.06%)</title><rect x="75.3890%" y="229" width="0.0640%" height="15" fill="rgb(231,119,3)" fg:x="49468" fg:w="42"/><text x="75.6390%" y="239.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (42 samples, 0.06%)</title><rect x="75.3890%" y="213" width="0.0640%" height="15" fill="rgb(216,97,11)" fg:x="49468" fg:w="42"/><text x="75.6390%" y="223.50"></text></g><g><title>getrandom::imp::getrandom_inner::_{{closure}} (41 samples, 0.06%)</title><rect x="75.3905%" y="197" width="0.0625%" height="15" fill="rgb(223,59,9)" fg:x="49469" fg:w="41"/><text x="75.6405%" y="207.50"></text></g><g><title>getrandom::imp::getrandom (41 samples, 0.06%)</title><rect x="75.3905%" y="181" width="0.0625%" height="15" fill="rgb(233,93,31)" fg:x="49469" fg:w="41"/><text x="75.6405%" y="191.50"></text></g><g><title>syscall (41 samples, 0.06%)</title><rect x="75.3905%" y="165" width="0.0625%" height="15" fill="rgb(239,81,33)" fg:x="49469" fg:w="41"/><text x="75.6405%" y="175.50"></text></g><g><title>[unknown] (37 samples, 0.06%)</title><rect x="75.3966%" y="149" width="0.0564%" height="15" fill="rgb(213,120,34)" fg:x="49473" fg:w="37"/><text x="75.6466%" y="159.50"></text></g><g><title>[unknown] (33 samples, 0.05%)</title><rect x="75.4027%" y="133" width="0.0503%" height="15" fill="rgb(243,49,53)" fg:x="49477" fg:w="33"/><text x="75.6527%" y="143.50"></text></g><g><title>[unknown] (32 samples, 0.05%)</title><rect x="75.4042%" y="117" width="0.0488%" height="15" fill="rgb(247,216,33)" fg:x="49478" fg:w="32"/><text x="75.6542%" y="127.50"></text></g><g><title>[unknown] (31 samples, 0.05%)</title><rect x="75.4058%" y="101" width="0.0472%" height="15" fill="rgb(226,26,14)" fg:x="49479" fg:w="31"/><text x="75.6558%" y="111.50"></text></g><g><title>[unknown] (26 samples, 0.04%)</title><rect x="75.4134%" y="85" width="0.0396%" height="15" fill="rgb(215,49,53)" fg:x="49484" fg:w="26"/><text x="75.6634%" y="95.50"></text></g><g><title>[unknown] (24 samples, 0.04%)</title><rect x="75.4164%" y="69" width="0.0366%" height="15" fill="rgb(245,162,40)" fg:x="49486" fg:w="24"/><text x="75.6664%" y="79.50"></text></g><g><title>[unknown] (18 samples, 0.03%)</title><rect x="75.4256%" y="53" width="0.0274%" height="15" fill="rgb(229,68,17)" fg:x="49492" fg:w="18"/><text x="75.6756%" y="63.50"></text></g><g><title>[unknown] (12 samples, 0.02%)</title><rect x="75.4347%" y="37" width="0.0183%" height="15" fill="rgb(213,182,10)" fg:x="49498" fg:w="12"/><text x="75.6847%" y="47.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (3,796 samples, 5.79%)</title><rect x="69.6923%" y="389" width="5.7851%" height="15" fill="rgb(245,125,30)" fg:x="45730" fg:w="3796"/><text x="69.9423%" y="399.50">&lt;rand_c..</text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (3,023 samples, 4.61%)</title><rect x="70.8704%" y="373" width="4.6070%" height="15" fill="rgb(232,202,2)" fg:x="46503" fg:w="3023"/><text x="71.1204%" y="383.50">rand_..</text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (3,023 samples, 4.61%)</title><rect x="70.8704%" y="357" width="4.6070%" height="15" fill="rgb(237,140,51)" fg:x="46503" fg:w="3023"/><text x="71.1204%" y="367.50">&lt;rand..</text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (14 samples, 0.02%)</title><rect x="75.4561%" y="341" width="0.0213%" height="15" fill="rgb(236,157,25)" fg:x="49512" fg:w="14"/><text x="75.7061%" y="351.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (14 samples, 0.02%)</title><rect x="75.4561%" y="325" width="0.0213%" height="15" fill="rgb(219,209,0)" fg:x="49512" fg:w="14"/><text x="75.7061%" y="335.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (14 samples, 0.02%)</title><rect x="75.4561%" y="309" width="0.0213%" height="15" fill="rgb(240,116,54)" fg:x="49512" fg:w="14"/><text x="75.7061%" y="319.50"></text></g><g><title>rand_chacha::guts::round (13 samples, 0.02%)</title><rect x="75.4576%" y="293" width="0.0198%" height="15" fill="rgb(216,10,36)" fg:x="49513" fg:w="13"/><text x="75.7076%" y="303.50"></text></g><g><title>montecarlo::state::State::diagonal_update (33,113 samples, 50.46%)</title><rect x="25.0758%" y="501" width="50.4641%" height="15" fill="rgb(222,72,44)" fg:x="16454" fg:w="33113"/><text x="25.3258%" y="511.50">montecarlo::state::State::diagonal_update</text></g><g><title>rand::rng::Rng::gen (4,326 samples, 6.59%)</title><rect x="68.9471%" y="485" width="6.5928%" height="15" fill="rgb(232,159,9)" fg:x="45241" fg:w="4326"/><text x="69.1971%" y="495.50">rand::rng..</text></g><g><title>rand::distributions::float::&lt;impl rand::distributions::distribution::Distribution&lt;f64&gt; for rand::distributions::Standard&gt;::sample (4,326 samples, 6.59%)</title><rect x="68.9471%" y="469" width="6.5928%" height="15" fill="rgb(210,39,32)" fg:x="45241" fg:w="4326"/><text x="69.1971%" y="479.50">rand::dis..</text></g><g><title>rand::rng::Rng::gen (3,837 samples, 5.85%)</title><rect x="69.6923%" y="453" width="5.8476%" height="15" fill="rgb(216,194,45)" fg:x="45730" fg:w="3837"/><text x="69.9423%" y="463.50">rand::r..</text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (3,837 samples, 5.85%)</title><rect x="69.6923%" y="437" width="5.8476%" height="15" fill="rgb(218,18,35)" fg:x="45730" fg:w="3837"/><text x="69.9423%" y="447.50">rand::d..</text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (3,837 samples, 5.85%)</title><rect x="69.6923%" y="421" width="5.8476%" height="15" fill="rgb(207,83,51)" fg:x="45730" fg:w="3837"/><text x="69.9423%" y="431.50">&lt;rand::..</text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (3,837 samples, 5.85%)</title><rect x="69.6923%" y="405" width="5.8476%" height="15" fill="rgb(225,63,43)" fg:x="45730" fg:w="3837"/><text x="69.9423%" y="415.50">&lt;rand::..</text></g><g><title>_ZN10montecarlo5state5State15diagonal_update17hbdb7f8e683cf0a42E.llvm.13779910845809399678 (41 samples, 0.06%)</title><rect x="75.4774%" y="389" width="0.0625%" height="15" fill="rgb(207,57,36)" fg:x="49526" fg:w="41"/><text x="75.7274%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (8 samples, 0.01%)</title><rect x="76.1571%" y="485" width="0.0122%" height="15" fill="rgb(216,99,33)" fg:x="49972" fg:w="8"/><text x="76.4071%" y="495.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (8 samples, 0.01%)</title><rect x="76.1571%" y="469" width="0.0122%" height="15" fill="rgb(225,42,16)" fg:x="49972" fg:w="8"/><text x="76.4071%" y="479.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (8 samples, 0.01%)</title><rect x="76.1571%" y="453" width="0.0122%" height="15" fill="rgb(220,201,45)" fg:x="49972" fg:w="8"/><text x="76.4071%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,174 samples, 1.79%)</title><rect x="76.1693%" y="453" width="1.7892%" height="15" fill="rgb(225,33,4)" fg:x="49980" fg:w="1174"/><text x="76.4193%" y="463.50">&lt;..</text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1,172 samples, 1.79%)</title><rect x="76.1723%" y="437" width="1.7861%" height="15" fill="rgb(224,33,50)" fg:x="49982" fg:w="1172"/><text x="76.4223%" y="447.50">&lt;..</text></g><g><title>&lt;id_collections::id_vec::Iter&lt;I,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,319 samples, 2.01%)</title><rect x="76.1693%" y="485" width="2.0101%" height="15" fill="rgb(246,198,51)" fg:x="49980" fg:w="1319"/><text x="76.4193%" y="495.50">&lt;..</text></g><g><title>&lt;id_collections::id_vec::EnumerateIds&lt;I,It&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,319 samples, 2.01%)</title><rect x="76.1693%" y="469" width="2.0101%" height="15" fill="rgb(205,22,4)" fg:x="49980" fg:w="1319"/><text x="76.4193%" y="479.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (145 samples, 0.22%)</title><rect x="77.9585%" y="453" width="0.2210%" height="15" fill="rgb(206,3,8)" fg:x="51154" fg:w="145"/><text x="78.2085%" y="463.50"></text></g><g><title>&lt;id_collections::id_vec::EnumerateIds&lt;I,It&gt; as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (145 samples, 0.22%)</title><rect x="77.9585%" y="437" width="0.2210%" height="15" fill="rgb(251,23,15)" fg:x="51154" fg:w="145"/><text x="78.2085%" y="447.50"></text></g><g><title>&lt;usize as core::ops::arith::Add&gt;::add (145 samples, 0.22%)</title><rect x="77.9585%" y="421" width="0.2210%" height="15" fill="rgb(252,88,28)" fg:x="51154" fg:w="145"/><text x="78.2085%" y="431.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (7 samples, 0.01%)</title><rect x="80.1484%" y="437" width="0.0107%" height="15" fill="rgb(212,127,14)" fg:x="52591" fg:w="7"/><text x="80.3984%" y="447.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.01%)</title><rect x="80.1652%" y="421" width="0.0122%" height="15" fill="rgb(247,145,37)" fg:x="52602" fg:w="8"/><text x="80.4152%" y="431.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hd28e0cdf38b391c3E.llvm.9247018699232294813 (14 samples, 0.02%)</title><rect x="80.1591%" y="437" width="0.0213%" height="15" fill="rgb(209,117,53)" fg:x="52598" fg:w="14"/><text x="80.4091%" y="447.50"></text></g><g><title>__memcpy_avx_unaligned_erms (20 samples, 0.03%)</title><rect x="80.3587%" y="341" width="0.0305%" height="15" fill="rgb(212,90,42)" fg:x="52729" fg:w="20"/><text x="80.6087%" y="351.50"></text></g><g><title>_int_free (47 samples, 0.07%)</title><rect x="80.3892%" y="341" width="0.0716%" height="15" fill="rgb(218,164,37)" fg:x="52749" fg:w="47"/><text x="80.6392%" y="351.50"></text></g><g><title>malloc_consolidate (33 samples, 0.05%)</title><rect x="80.5919%" y="325" width="0.0503%" height="15" fill="rgb(246,65,34)" fg:x="52882" fg:w="33"/><text x="80.8419%" y="335.50"></text></g><g><title>_int_malloc (126 samples, 0.19%)</title><rect x="80.4609%" y="341" width="0.1920%" height="15" fill="rgb(231,100,33)" fg:x="52796" fg:w="126"/><text x="80.7109%" y="351.50"></text></g><g><title>unlink_chunk (7 samples, 0.01%)</title><rect x="80.6422%" y="325" width="0.0107%" height="15" fill="rgb(228,126,14)" fg:x="52915" fg:w="7"/><text x="80.8922%" y="335.50"></text></g><g><title>_int_realloc (266 samples, 0.41%)</title><rect x="80.2597%" y="357" width="0.4054%" height="15" fill="rgb(215,173,21)" fg:x="52664" fg:w="266"/><text x="80.5097%" y="367.50"></text></g><g><title>arena_for_chunk (14 samples, 0.02%)</title><rect x="80.6651%" y="357" width="0.0213%" height="15" fill="rgb(210,6,40)" fg:x="52930" fg:w="14"/><text x="80.9151%" y="367.50"></text></g><g><title>__GI___libc_realloc (324 samples, 0.49%)</title><rect x="80.1972%" y="373" width="0.4938%" height="15" fill="rgb(212,48,18)" fg:x="52623" fg:w="324"/><text x="80.4472%" y="383.50"></text></g><g><title>__rdl_realloc (17 samples, 0.03%)</title><rect x="80.6910%" y="373" width="0.0259%" height="15" fill="rgb(230,214,11)" fg:x="52947" fg:w="17"/><text x="80.9410%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (346 samples, 0.53%)</title><rect x="80.1972%" y="421" width="0.5273%" height="15" fill="rgb(254,105,39)" fg:x="52623" fg:w="346"/><text x="80.4472%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (346 samples, 0.53%)</title><rect x="80.1972%" y="405" width="0.5273%" height="15" fill="rgb(245,158,5)" fg:x="52623" fg:w="346"/><text x="80.4472%" y="415.50"></text></g><g><title>alloc::alloc::realloc (346 samples, 0.53%)</title><rect x="80.1972%" y="389" width="0.5273%" height="15" fill="rgb(249,208,11)" fg:x="52623" fg:w="346"/><text x="80.4472%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (358 samples, 0.55%)</title><rect x="80.1881%" y="437" width="0.5456%" height="15" fill="rgb(210,39,28)" fg:x="52617" fg:w="358"/><text x="80.4381%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (416 samples, 0.63%)</title><rect x="80.1393%" y="453" width="0.6340%" height="15" fill="rgb(211,56,53)" fg:x="52585" fg:w="416"/><text x="80.3893%" y="463.50"></text></g><g><title>core::cmp::max (25 samples, 0.04%)</title><rect x="80.7352%" y="437" width="0.0381%" height="15" fill="rgb(226,201,30)" fg:x="52976" fg:w="25"/><text x="80.9852%" y="447.50"></text></g><g><title>core::cmp::Ord::max (25 samples, 0.04%)</title><rect x="80.7352%" y="421" width="0.0381%" height="15" fill="rgb(239,101,34)" fg:x="52976" fg:w="25"/><text x="80.9852%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (25 samples, 0.04%)</title><rect x="80.7352%" y="405" width="0.0381%" height="15" fill="rgb(226,209,5)" fg:x="52976" fg:w="25"/><text x="80.9852%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (417 samples, 0.64%)</title><rect x="80.1393%" y="469" width="0.6355%" height="15" fill="rgb(250,105,47)" fg:x="52585" fg:w="417"/><text x="80.3893%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (12 samples, 0.02%)</title><rect x="80.7748%" y="469" width="0.0183%" height="15" fill="rgb(230,72,3)" fg:x="53002" fg:w="12"/><text x="81.0248%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (12 samples, 0.02%)</title><rect x="80.7748%" y="453" width="0.0183%" height="15" fill="rgb(232,218,39)" fg:x="53002" fg:w="12"/><text x="81.0248%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,062 samples, 3.14%)</title><rect x="78.1825%" y="485" width="3.1425%" height="15" fill="rgb(248,166,6)" fg:x="51301" fg:w="2062"/><text x="78.4325%" y="495.50">all..</text></g><g><title>core::ptr::write (349 samples, 0.53%)</title><rect x="80.7931%" y="469" width="0.5319%" height="15" fill="rgb(247,89,20)" fg:x="53014" fg:w="349"/><text x="81.0431%" y="479.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (61 samples, 0.09%)</title><rect x="81.3250%" y="485" width="0.0930%" height="15" fill="rgb(248,130,54)" fg:x="53363" fg:w="61"/><text x="81.5750%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (61 samples, 0.09%)</title><rect x="81.3250%" y="469" width="0.0930%" height="15" fill="rgb(234,196,4)" fg:x="53363" fg:w="61"/><text x="81.5750%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (971 samples, 1.48%)</title><rect x="81.4179%" y="485" width="1.4798%" height="15" fill="rgb(250,143,31)" fg:x="53424" fg:w="971"/><text x="81.6679%" y="495.50"></text></g><g><title>malloc_consolidate (38 samples, 0.06%)</title><rect x="82.9328%" y="373" width="0.0579%" height="15" fill="rgb(211,110,34)" fg:x="54418" fg:w="38"/><text x="83.1828%" y="383.50"></text></g><g><title>__GI___libc_free (58 samples, 0.09%)</title><rect x="82.9038%" y="405" width="0.0884%" height="15" fill="rgb(215,124,48)" fg:x="54399" fg:w="58"/><text x="83.1538%" y="415.50"></text></g><g><title>_int_free (53 samples, 0.08%)</title><rect x="82.9114%" y="389" width="0.0808%" height="15" fill="rgb(216,46,13)" fg:x="54404" fg:w="53"/><text x="83.1614%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;montecarlo::state::OperatorId&gt;&gt; (64 samples, 0.10%)</title><rect x="82.8977%" y="485" width="0.0975%" height="15" fill="rgb(205,184,25)" fg:x="54395" fg:w="64"/><text x="83.1477%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;montecarlo::state::OperatorId&gt;&gt; (64 samples, 0.10%)</title><rect x="82.8977%" y="469" width="0.0975%" height="15" fill="rgb(228,1,10)" fg:x="54395" fg:w="64"/><text x="83.1477%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (64 samples, 0.10%)</title><rect x="82.8977%" y="453" width="0.0975%" height="15" fill="rgb(213,116,27)" fg:x="54395" fg:w="64"/><text x="83.1477%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (60 samples, 0.09%)</title><rect x="82.9038%" y="437" width="0.0914%" height="15" fill="rgb(241,95,50)" fg:x="54399" fg:w="60"/><text x="83.1538%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (60 samples, 0.09%)</title><rect x="82.9038%" y="421" width="0.0914%" height="15" fill="rgb(238,48,32)" fg:x="54399" fg:w="60"/><text x="83.1538%" y="431.50"></text></g><g><title>&lt;id_collections::id_vec::IdVec&lt;I,T&gt; as core::ops::index::Index&lt;J&gt;&gt;::index (511 samples, 0.78%)</title><rect x="84.1200%" y="469" width="0.7788%" height="15" fill="rgb(235,113,49)" fg:x="55197" fg:w="511"/><text x="84.3700%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (511 samples, 0.78%)</title><rect x="84.1200%" y="453" width="0.7788%" height="15" fill="rgb(205,127,43)" fg:x="55197" fg:w="511"/><text x="84.3700%" y="463.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (511 samples, 0.78%)</title><rect x="84.1200%" y="437" width="0.7788%" height="15" fill="rgb(250,162,2)" fg:x="55197" fg:w="511"/><text x="84.3700%" y="447.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (511 samples, 0.78%)</title><rect x="84.1200%" y="421" width="0.7788%" height="15" fill="rgb(220,13,41)" fg:x="55197" fg:w="511"/><text x="84.3700%" y="431.50"></text></g><g><title>&lt;id_collections::id_vec::IdVec&lt;I,T&gt; as core::ops::index::IndexMut&lt;J&gt;&gt;::index_mut (62 samples, 0.09%)</title><rect x="84.8987%" y="469" width="0.0945%" height="15" fill="rgb(249,221,25)" fg:x="55708" fg:w="62"/><text x="85.1487%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (62 samples, 0.09%)</title><rect x="84.8987%" y="453" width="0.0945%" height="15" fill="rgb(215,208,19)" fg:x="55708" fg:w="62"/><text x="85.1487%" y="463.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (62 samples, 0.09%)</title><rect x="84.8987%" y="437" width="0.0945%" height="15" fill="rgb(236,175,2)" fg:x="55708" fg:w="62"/><text x="85.1487%" y="447.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (62 samples, 0.09%)</title><rect x="84.8987%" y="421" width="0.0945%" height="15" fill="rgb(241,52,2)" fg:x="55708" fg:w="62"/><text x="85.1487%" y="431.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="85.0008%" y="469" width="0.0107%" height="15" fill="rgb(248,140,14)" fg:x="55775" fg:w="7"/><text x="85.2508%" y="479.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="85.0008%" y="453" width="0.0107%" height="15" fill="rgb(253,22,42)" fg:x="55775" fg:w="7"/><text x="85.2508%" y="463.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="85.0008%" y="437" width="0.0107%" height="15" fill="rgb(234,61,47)" fg:x="55775" fg:w="7"/><text x="85.2508%" y="447.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="85.0008%" y="421" width="0.0107%" height="15" fill="rgb(208,226,15)" fg:x="55775" fg:w="7"/><text x="85.2508%" y="431.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="85.0008%" y="405" width="0.0107%" height="15" fill="rgb(217,221,4)" fg:x="55775" fg:w="7"/><text x="85.2508%" y="415.50"></text></g><g><title>core::cmp::PartialOrd::ge (503 samples, 0.77%)</title><rect x="85.0115%" y="469" width="0.7666%" height="15" fill="rgb(212,174,34)" fg:x="55782" fg:w="503"/><text x="85.2615%" y="479.50"></text></g><g><title>&lt;montecarlo::state::OperatorId as core::cmp::PartialOrd&gt;::partial_cmp (458 samples, 0.70%)</title><rect x="87.1680%" y="453" width="0.6980%" height="15" fill="rgb(253,83,4)" fg:x="57197" fg:w="458"/><text x="87.4180%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::partial_cmp (458 samples, 0.70%)</title><rect x="87.1680%" y="437" width="0.6980%" height="15" fill="rgb(250,195,49)" fg:x="57197" fg:w="458"/><text x="87.4180%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (458 samples, 0.70%)</title><rect x="87.1680%" y="421" width="0.6980%" height="15" fill="rgb(241,192,25)" fg:x="57197" fg:w="458"/><text x="87.4180%" y="431.50"></text></g><g><title>core::cmp::PartialOrd::le (1,371 samples, 2.09%)</title><rect x="85.7781%" y="469" width="2.0894%" height="15" fill="rgb(208,124,10)" fg:x="56285" fg:w="1371"/><text x="86.0281%" y="479.50">c..</text></g><g><title>core::option::Option&lt;T&gt;::as_mut (3,946 samples, 6.01%)</title><rect x="87.8675%" y="469" width="6.0137%" height="15" fill="rgb(222,33,0)" fg:x="57656" fg:w="3946"/><text x="88.1175%" y="479.50">core::op..</text></g><g><title>[unknown] (23 samples, 0.04%)</title><rect x="93.8461%" y="453" width="0.0351%" height="15" fill="rgb(234,209,28)" fg:x="61579" fg:w="23"/><text x="94.0961%" y="463.50"></text></g><g><title>[unknown] (23 samples, 0.04%)</title><rect x="93.8461%" y="437" width="0.0351%" height="15" fill="rgb(224,11,23)" fg:x="61579" fg:w="23"/><text x="94.0961%" y="447.50"></text></g><g><title>[unknown] (23 samples, 0.04%)</title><rect x="93.8461%" y="421" width="0.0351%" height="15" fill="rgb(232,99,1)" fg:x="61579" fg:w="23"/><text x="94.0961%" y="431.50"></text></g><g><title>[unknown] (23 samples, 0.04%)</title><rect x="93.8461%" y="405" width="0.0351%" height="15" fill="rgb(237,95,45)" fg:x="61579" fg:w="23"/><text x="94.0961%" y="415.50"></text></g><g><title>[unknown] (22 samples, 0.03%)</title><rect x="93.8476%" y="389" width="0.0335%" height="15" fill="rgb(208,109,11)" fg:x="61580" fg:w="22"/><text x="94.0976%" y="399.50"></text></g><g><title>[unknown] (20 samples, 0.03%)</title><rect x="93.8507%" y="373" width="0.0305%" height="15" fill="rgb(216,190,48)" fg:x="61582" fg:w="20"/><text x="94.1007%" y="383.50"></text></g><g><title>[unknown] (15 samples, 0.02%)</title><rect x="93.8583%" y="357" width="0.0229%" height="15" fill="rgb(251,171,36)" fg:x="61587" fg:w="15"/><text x="94.1083%" y="367.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="93.8598%" y="341" width="0.0213%" height="15" fill="rgb(230,62,22)" fg:x="61588" fg:w="14"/><text x="94.1098%" y="351.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="93.8598%" y="325" width="0.0213%" height="15" fill="rgb(225,114,35)" fg:x="61588" fg:w="14"/><text x="94.1098%" y="335.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="93.8598%" y="309" width="0.0213%" height="15" fill="rgb(215,118,42)" fg:x="61588" fg:w="14"/><text x="94.1098%" y="319.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="93.8598%" y="293" width="0.0213%" height="15" fill="rgb(243,119,21)" fg:x="61588" fg:w="14"/><text x="94.1098%" y="303.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="93.8705%" y="277" width="0.0107%" height="15" fill="rgb(252,177,53)" fg:x="61595" fg:w="7"/><text x="94.1205%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1,581 samples, 2.41%)</title><rect x="93.8812%" y="469" width="2.4094%" height="15" fill="rgb(237,209,29)" fg:x="61602" fg:w="1581"/><text x="94.1312%" y="479.50">co..</text></g><g><title>core::option::Option&lt;T&gt;::unwrap (423 samples, 0.64%)</title><rect x="96.2906%" y="469" width="0.6447%" height="15" fill="rgb(212,65,23)" fg:x="63183" fg:w="423"/><text x="96.5406%" y="479.50"></text></g><g><title>[unknown] (11 samples, 0.02%)</title><rect x="96.9185%" y="453" width="0.0168%" height="15" fill="rgb(230,222,46)" fg:x="63595" fg:w="11"/><text x="97.1685%" y="463.50"></text></g><g><title>[unknown] (10 samples, 0.02%)</title><rect x="96.9200%" y="437" width="0.0152%" height="15" fill="rgb(215,135,32)" fg:x="63596" fg:w="10"/><text x="97.1700%" y="447.50"></text></g><g><title>[unknown] (10 samples, 0.02%)</title><rect x="96.9200%" y="421" width="0.0152%" height="15" fill="rgb(246,101,22)" fg:x="63596" fg:w="10"/><text x="97.1700%" y="431.50"></text></g><g><title>[unknown] (10 samples, 0.02%)</title><rect x="96.9200%" y="405" width="0.0152%" height="15" fill="rgb(206,107,13)" fg:x="63596" fg:w="10"/><text x="97.1700%" y="415.50"></text></g><g><title>[unknown] (10 samples, 0.02%)</title><rect x="96.9200%" y="389" width="0.0152%" height="15" fill="rgb(250,100,44)" fg:x="63596" fg:w="10"/><text x="97.1700%" y="399.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="96.9246%" y="373" width="0.0107%" height="15" fill="rgb(231,147,38)" fg:x="63599" fg:w="7"/><text x="97.1746%" y="383.50"></text></g><g><title>montecarlo::state::State::directed_loop_update (10,545 samples, 16.07%)</title><rect x="82.9953%" y="485" width="16.0705%" height="15" fill="rgb(229,8,40)" fg:x="54459" fg:w="10545"/><text x="83.2453%" y="495.50">montecarlo::state::State:..</text></g><g><title>montecarlo::state::OperatorType::flip (1,398 samples, 2.13%)</title><rect x="96.9352%" y="469" width="2.1305%" height="15" fill="rgb(221,135,30)" fg:x="63606" fg:w="1398"/><text x="97.1852%" y="479.50">m..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::is_empty (11 samples, 0.02%)</title><rect x="99.0658%" y="469" width="0.0168%" height="15" fill="rgb(249,193,18)" fg:x="65004" fg:w="11"/><text x="99.3158%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (11 samples, 0.02%)</title><rect x="99.0658%" y="453" width="0.0168%" height="15" fill="rgb(209,133,39)" fg:x="65004" fg:w="11"/><text x="99.3158%" y="463.50"></text></g><g><title>&lt;usize as rand::distributions::utils::WideningMultiply&gt;::wmul (25 samples, 0.04%)</title><rect x="99.2258%" y="421" width="0.0381%" height="15" fill="rgb(232,100,14)" fg:x="65109" fg:w="25"/><text x="99.4758%" y="431.50"></text></g><g><title>&lt;u64 as rand::distributions::utils::WideningMultiply&gt;::wmul (25 samples, 0.04%)</title><rect x="99.2258%" y="405" width="0.0381%" height="15" fill="rgb(224,185,1)" fg:x="65109" fg:w="25"/><text x="99.4758%" y="415.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64::_{{closure}} (29 samples, 0.04%)</title><rect x="99.3294%" y="341" width="0.0442%" height="15" fill="rgb(223,139,8)" fg:x="65177" fg:w="29"/><text x="99.5794%" y="351.50"></text></g><g><title>_ZN4rand3rng3Rng3gen17h863d88e49c066904E.llvm.9147632876596203113 (42 samples, 0.06%)</title><rect x="99.3736%" y="341" width="0.0640%" height="15" fill="rgb(232,213,38)" fg:x="65206" fg:w="42"/><text x="99.6236%" y="351.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,ppv_lite86::x86_64::YesS4,NI&gt; as ppv_lite86::types::Vec4&lt;u32&gt;&gt;::insert (12 samples, 0.02%)</title><rect x="99.4620%" y="229" width="0.0183%" height="15" fill="rgb(207,94,22)" fg:x="65264" fg:w="12"/><text x="99.7120%" y="239.50"></text></g><g><title>core::core_arch::x86::sse41::_mm_insert_epi32 (12 samples, 0.02%)</title><rect x="99.4620%" y="213" width="0.0183%" height="15" fill="rgb(219,183,54)" fg:x="65264" fg:w="12"/><text x="99.7120%" y="223.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (9 samples, 0.01%)</title><rect x="99.4803%" y="229" width="0.0137%" height="15" fill="rgb(216,185,54)" fg:x="65276" fg:w="9"/><text x="99.7303%" y="239.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (9 samples, 0.01%)</title><rect x="99.4803%" y="213" width="0.0137%" height="15" fill="rgb(254,217,39)" fg:x="65276" fg:w="9"/><text x="99.7303%" y="223.50"></text></g><g><title>rand_chacha::guts::diagonalize (10 samples, 0.02%)</title><rect x="99.5017%" y="229" width="0.0152%" height="15" fill="rgb(240,178,23)" fg:x="65290" fg:w="10"/><text x="99.7517%" y="239.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (8 samples, 0.01%)</title><rect x="99.5047%" y="213" width="0.0122%" height="15" fill="rgb(218,11,47)" fg:x="65292" fg:w="8"/><text x="99.7547%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (8 samples, 0.01%)</title><rect x="99.5047%" y="197" width="0.0122%" height="15" fill="rgb(218,51,51)" fg:x="65292" fg:w="8"/><text x="99.7547%" y="207.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (8 samples, 0.01%)</title><rect x="99.5047%" y="181" width="0.0122%" height="15" fill="rgb(238,126,27)" fg:x="65292" fg:w="8"/><text x="99.7547%" y="191.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (50 samples, 0.08%)</title><rect x="99.5169%" y="213" width="0.0762%" height="15" fill="rgb(249,202,22)" fg:x="65300" fg:w="50"/><text x="99.7669%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (50 samples, 0.08%)</title><rect x="99.5169%" y="197" width="0.0762%" height="15" fill="rgb(254,195,49)" fg:x="65300" fg:w="50"/><text x="99.7669%" y="207.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (50 samples, 0.08%)</title><rect x="99.5169%" y="181" width="0.0762%" height="15" fill="rgb(208,123,14)" fg:x="65300" fg:w="50"/><text x="99.7669%" y="191.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (50 samples, 0.08%)</title><rect x="99.5169%" y="165" width="0.0762%" height="15" fill="rgb(224,200,8)" fg:x="65300" fg:w="50"/><text x="99.7669%" y="175.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::bit::BitXor&gt;::bitxor (25 samples, 0.04%)</title><rect x="99.5931%" y="213" width="0.0381%" height="15" fill="rgb(217,61,36)" fg:x="65350" fg:w="25"/><text x="99.8431%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::bit::BitXor&gt;::bitxor (25 samples, 0.04%)</title><rect x="99.5931%" y="197" width="0.0381%" height="15" fill="rgb(206,35,45)" fg:x="65350" fg:w="25"/><text x="99.8431%" y="207.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (25 samples, 0.04%)</title><rect x="99.5931%" y="181" width="0.0381%" height="15" fill="rgb(217,65,33)" fg:x="65350" fg:w="25"/><text x="99.8431%" y="191.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (42 samples, 0.06%)</title><rect x="99.6312%" y="213" width="0.0640%" height="15" fill="rgb(222,158,48)" fg:x="65375" fg:w="42"/><text x="99.8812%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (42 samples, 0.06%)</title><rect x="99.6312%" y="197" width="0.0640%" height="15" fill="rgb(254,2,54)" fg:x="65375" fg:w="42"/><text x="99.8812%" y="207.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (42 samples, 0.06%)</title><rect x="99.6312%" y="181" width="0.0640%" height="15" fill="rgb(250,143,38)" fg:x="65375" fg:w="42"/><text x="99.8812%" y="191.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (53 samples, 0.08%)</title><rect x="99.6952%" y="181" width="0.0808%" height="15" fill="rgb(248,25,0)" fg:x="65417" fg:w="53"/><text x="99.9452%" y="191.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (56 samples, 0.09%)</title><rect x="99.6952%" y="213" width="0.0853%" height="15" fill="rgb(206,152,27)" fg:x="65417" fg:w="56"/><text x="99.9452%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (56 samples, 0.09%)</title><rect x="99.6952%" y="197" width="0.0853%" height="15" fill="rgb(240,77,30)" fg:x="65417" fg:w="56"/><text x="99.9452%" y="207.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (26 samples, 0.04%)</title><rect x="99.7805%" y="213" width="0.0396%" height="15" fill="rgb(231,5,3)" fg:x="65473" fg:w="26"/><text x="100.0305%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (26 samples, 0.04%)</title><rect x="99.7805%" y="197" width="0.0396%" height="15" fill="rgb(207,226,32)" fg:x="65473" fg:w="26"/><text x="100.0305%" y="207.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (26 samples, 0.04%)</title><rect x="99.7805%" y="181" width="0.0396%" height="15" fill="rgb(222,207,47)" fg:x="65473" fg:w="26"/><text x="100.0305%" y="191.50"></text></g><g><title>rand_chacha::guts::round (239 samples, 0.36%)</title><rect x="99.5169%" y="229" width="0.3642%" height="15" fill="rgb(229,115,45)" fg:x="65300" fg:w="239"/><text x="99.7669%" y="239.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (40 samples, 0.06%)</title><rect x="99.8202%" y="213" width="0.0610%" height="15" fill="rgb(224,191,6)" fg:x="65499" fg:w="40"/><text x="100.0702%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (40 samples, 0.06%)</title><rect x="99.8202%" y="197" width="0.0610%" height="15" fill="rgb(230,227,24)" fg:x="65499" fg:w="40"/><text x="100.0702%" y="207.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (40 samples, 0.06%)</title><rect x="99.8202%" y="181" width="0.0610%" height="15" fill="rgb(228,80,19)" fg:x="65499" fg:w="40"/><text x="100.0702%" y="191.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (9 samples, 0.01%)</title><rect x="99.8811%" y="213" width="0.0137%" height="15" fill="rgb(247,229,0)" fg:x="65539" fg:w="9"/><text x="100.1311%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (9 samples, 0.01%)</title><rect x="99.8811%" y="197" width="0.0137%" height="15" fill="rgb(237,194,15)" fg:x="65539" fg:w="9"/><text x="100.1311%" y="207.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (9 samples, 0.01%)</title><rect x="99.8811%" y="181" width="0.0137%" height="15" fill="rgb(219,203,20)" fg:x="65539" fg:w="9"/><text x="100.1311%" y="191.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (8 samples, 0.01%)</title><rect x="99.8948%" y="213" width="0.0122%" height="15" fill="rgb(234,128,8)" fg:x="65548" fg:w="8"/><text x="100.1448%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (8 samples, 0.01%)</title><rect x="99.8948%" y="197" width="0.0122%" height="15" fill="rgb(248,202,8)" fg:x="65548" fg:w="8"/><text x="100.1448%" y="207.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (8 samples, 0.01%)</title><rect x="99.8948%" y="181" width="0.0122%" height="15" fill="rgb(206,104,37)" fg:x="65548" fg:w="8"/><text x="100.1448%" y="191.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (302 samples, 0.46%)</title><rect x="99.4483%" y="277" width="0.4602%" height="15" fill="rgb(223,8,27)" fg:x="65255" fg:w="302"/><text x="99.6983%" y="287.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (302 samples, 0.46%)</title><rect x="99.4483%" y="261" width="0.4602%" height="15" fill="rgb(216,217,28)" fg:x="65255" fg:w="302"/><text x="99.6983%" y="271.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (300 samples, 0.46%)</title><rect x="99.4514%" y="245" width="0.4572%" height="15" fill="rgb(249,199,1)" fg:x="65257" fg:w="300"/><text x="99.7014%" y="255.50"></text></g><g><title>rand_chacha::guts::undiagonalize (18 samples, 0.03%)</title><rect x="99.8811%" y="229" width="0.0274%" height="15" fill="rgb(240,85,17)" fg:x="65539" fg:w="18"/><text x="100.1311%" y="239.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (307 samples, 0.47%)</title><rect x="99.4422%" y="309" width="0.4679%" height="15" fill="rgb(206,108,45)" fg:x="65251" fg:w="307"/><text x="99.6922%" y="319.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (306 samples, 0.47%)</title><rect x="99.4437%" y="293" width="0.4663%" height="15" fill="rgb(245,210,41)" fg:x="65252" fg:w="306"/><text x="99.6937%" y="303.50"></text></g><g><title>montecarlo::state::State::thermalize (49,316 samples, 75.16%)</title><rect x="24.7695%" y="517" width="75.1574%" height="15" fill="rgb(206,13,37)" fg:x="16253" fg:w="49316"/><text x="25.0195%" y="527.50">montecarlo::state::State::thermalize</text></g><g><title>montecarlo::state::State::off_diagonal_update (16,002 samples, 24.39%)</title><rect x="75.5399%" y="501" width="24.3870%" height="15" fill="rgb(250,61,18)" fg:x="49567" fg:w="16002"/><text x="75.7899%" y="511.50">montecarlo::state::State::off_diagonal_..</text></g><g><title>rand::rng::Rng::gen_range (565 samples, 0.86%)</title><rect x="99.0658%" y="485" width="0.8611%" height="15" fill="rgb(235,172,48)" fg:x="65004" fg:w="565"/><text x="99.3158%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (554 samples, 0.84%)</title><rect x="99.0826%" y="469" width="0.8443%" height="15" fill="rgb(249,201,17)" fg:x="65015" fg:w="554"/><text x="99.3326%" y="479.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (554 samples, 0.84%)</title><rect x="99.0826%" y="453" width="0.8443%" height="15" fill="rgb(219,208,6)" fg:x="65015" fg:w="554"/><text x="99.3326%" y="463.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (554 samples, 0.84%)</title><rect x="99.0826%" y="437" width="0.8443%" height="15" fill="rgb(248,31,23)" fg:x="65015" fg:w="554"/><text x="99.3326%" y="447.50"></text></g><g><title>rand::rng::Rng::gen (430 samples, 0.66%)</title><rect x="99.2715%" y="421" width="0.6553%" height="15" fill="rgb(245,15,42)" fg:x="65139" fg:w="430"/><text x="99.5215%" y="431.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;usize&gt; for rand::distributions::Standard&gt;::sample (429 samples, 0.65%)</title><rect x="99.2731%" y="405" width="0.6538%" height="15" fill="rgb(222,217,39)" fg:x="65140" fg:w="429"/><text x="99.5231%" y="415.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (429 samples, 0.65%)</title><rect x="99.2731%" y="389" width="0.6538%" height="15" fill="rgb(210,219,27)" fg:x="65140" fg:w="429"/><text x="99.5231%" y="399.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (429 samples, 0.65%)</title><rect x="99.2731%" y="373" width="0.6538%" height="15" fill="rgb(252,166,36)" fg:x="65140" fg:w="429"/><text x="99.5231%" y="383.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (429 samples, 0.65%)</title><rect x="99.2731%" y="357" width="0.6538%" height="15" fill="rgb(245,132,34)" fg:x="65140" fg:w="429"/><text x="99.5231%" y="367.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (321 samples, 0.49%)</title><rect x="99.4376%" y="341" width="0.4892%" height="15" fill="rgb(236,54,3)" fg:x="65248" fg:w="321"/><text x="99.6876%" y="351.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (321 samples, 0.49%)</title><rect x="99.4376%" y="325" width="0.4892%" height="15" fill="rgb(241,173,43)" fg:x="65248" fg:w="321"/><text x="99.6876%" y="335.50"></text></g><g><title>rand_chacha::guts::round (14 samples, 0.02%)</title><rect x="99.9680%" y="245" width="0.0213%" height="15" fill="rgb(215,190,9)" fg:x="65596" fg:w="14"/><text x="100.2180%" y="255.50"></text></g><g><title>montecarlo (65,612 samples, 99.99%)</title><rect x="0.0000%" y="677" width="99.9924%" height="15" fill="rgb(242,101,16)" fg:x="0" fg:w="65612"/><text x="0.2500%" y="687.50">montecarlo</text></g><g><title>_start (64,634 samples, 98.50%)</title><rect x="1.4905%" y="661" width="98.5019%" height="15" fill="rgb(223,190,21)" fg:x="978" fg:w="64634"/><text x="1.7405%" y="671.50">_start</text></g><g><title>__libc_start_main_impl (64,634 samples, 98.50%)</title><rect x="1.4905%" y="645" width="98.5019%" height="15" fill="rgb(215,228,25)" fg:x="978" fg:w="64634"/><text x="1.7405%" y="655.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (64,634 samples, 98.50%)</title><rect x="1.4905%" y="629" width="98.5019%" height="15" fill="rgb(225,36,22)" fg:x="978" fg:w="64634"/><text x="1.7405%" y="639.50">__libc_start_call_main</text></g><g><title>main (64,634 samples, 98.50%)</title><rect x="1.4905%" y="613" width="98.5019%" height="15" fill="rgb(251,106,46)" fg:x="978" fg:w="64634"/><text x="1.7405%" y="623.50">main</text></g><g><title>std::rt::lang_start_internal (64,634 samples, 98.50%)</title><rect x="1.4905%" y="597" width="98.5019%" height="15" fill="rgb(208,90,1)" fg:x="978" fg:w="64634"/><text x="1.7405%" y="607.50">std::rt::lang_start_internal</text></g><g><title>std::rt::lang_start::_{{closure}} (64,634 samples, 98.50%)</title><rect x="1.4905%" y="581" width="98.5019%" height="15" fill="rgb(243,10,4)" fg:x="978" fg:w="64634"/><text x="1.7405%" y="591.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (64,634 samples, 98.50%)</title><rect x="1.4905%" y="565" width="98.5019%" height="15" fill="rgb(212,137,27)" fg:x="978" fg:w="64634"/><text x="1.7405%" y="575.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (64,634 samples, 98.50%)</title><rect x="1.4905%" y="549" width="98.5019%" height="15" fill="rgb(231,220,49)" fg:x="978" fg:w="64634"/><text x="1.7405%" y="559.50">core::ops::function::FnOnce::call_once</text></g><g><title>montecarlo::main (64,634 samples, 98.50%)</title><rect x="1.4905%" y="533" width="98.5019%" height="15" fill="rgb(237,96,20)" fg:x="978" fg:w="64634"/><text x="1.7405%" y="543.50">montecarlo::main</text></g><g><title>montecarlo::stats::bootstrap (42 samples, 0.06%)</title><rect x="99.9284%" y="517" width="0.0640%" height="15" fill="rgb(239,229,30)" fg:x="65570" fg:w="42"/><text x="100.1784%" y="527.50"></text></g><g><title>rand::rng::Rng::gen_range (33 samples, 0.05%)</title><rect x="99.9421%" y="501" width="0.0503%" height="15" fill="rgb(219,65,33)" fg:x="65579" fg:w="33"/><text x="100.1921%" y="511.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (33 samples, 0.05%)</title><rect x="99.9421%" y="485" width="0.0503%" height="15" fill="rgb(243,134,7)" fg:x="65579" fg:w="33"/><text x="100.1921%" y="495.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (33 samples, 0.05%)</title><rect x="99.9421%" y="469" width="0.0503%" height="15" fill="rgb(216,177,54)" fg:x="65579" fg:w="33"/><text x="100.1921%" y="479.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (33 samples, 0.05%)</title><rect x="99.9421%" y="453" width="0.0503%" height="15" fill="rgb(211,160,20)" fg:x="65579" fg:w="33"/><text x="100.1921%" y="463.50"></text></g><g><title>rand::rng::Rng::gen (29 samples, 0.04%)</title><rect x="99.9482%" y="437" width="0.0442%" height="15" fill="rgb(239,85,39)" fg:x="65583" fg:w="29"/><text x="100.1982%" y="447.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;usize&gt; for rand::distributions::Standard&gt;::sample (29 samples, 0.04%)</title><rect x="99.9482%" y="421" width="0.0442%" height="15" fill="rgb(232,125,22)" fg:x="65583" fg:w="29"/><text x="100.1982%" y="431.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (29 samples, 0.04%)</title><rect x="99.9482%" y="405" width="0.0442%" height="15" fill="rgb(244,57,34)" fg:x="65583" fg:w="29"/><text x="100.1982%" y="415.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (29 samples, 0.04%)</title><rect x="99.9482%" y="389" width="0.0442%" height="15" fill="rgb(214,203,32)" fg:x="65583" fg:w="29"/><text x="100.1982%" y="399.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (29 samples, 0.04%)</title><rect x="99.9482%" y="373" width="0.0442%" height="15" fill="rgb(207,58,43)" fg:x="65583" fg:w="29"/><text x="100.1982%" y="383.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (19 samples, 0.03%)</title><rect x="99.9634%" y="357" width="0.0290%" height="15" fill="rgb(215,193,15)" fg:x="65593" fg:w="19"/><text x="100.2134%" y="367.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (19 samples, 0.03%)</title><rect x="99.9634%" y="341" width="0.0290%" height="15" fill="rgb(232,15,44)" fg:x="65593" fg:w="19"/><text x="100.2134%" y="351.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (19 samples, 0.03%)</title><rect x="99.9634%" y="325" width="0.0290%" height="15" fill="rgb(212,3,48)" fg:x="65593" fg:w="19"/><text x="100.2134%" y="335.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (19 samples, 0.03%)</title><rect x="99.9634%" y="309" width="0.0290%" height="15" fill="rgb(218,128,7)" fg:x="65593" fg:w="19"/><text x="100.2134%" y="319.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (19 samples, 0.03%)</title><rect x="99.9634%" y="293" width="0.0290%" height="15" fill="rgb(226,216,39)" fg:x="65593" fg:w="19"/><text x="100.2134%" y="303.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (19 samples, 0.03%)</title><rect x="99.9634%" y="277" width="0.0290%" height="15" fill="rgb(243,47,51)" fg:x="65593" fg:w="19"/><text x="100.2134%" y="287.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (19 samples, 0.03%)</title><rect x="99.9634%" y="261" width="0.0290%" height="15" fill="rgb(241,183,40)" fg:x="65593" fg:w="19"/><text x="100.2134%" y="271.50"></text></g><g><title>all (65,617 samples, 100%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(231,217,32)" fg:x="0" fg:w="65617"/><text x="0.2500%" y="703.50"></text></g></svg></svg>